#!/usr/bin/env python
# -*- coding: us-ascii -*-
# vim: syntax=python
#
# Copyright 2008 Noriyuki Hosaka bgnori@gmail.com
#

import unittest

from tonic.combination import *

class HashTest_n2_r1(unittest.TestCase):
  def test_C_Hash_range_10(self):
      h = C_Hash([1, 0], 1)
      self.assert_(C(2, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01(self):
      h = C_Hash([0, 1], 1)
      self.assert_(C(2, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 0], 1), None) is None)
    d[C_Hash([1, 0], 1)] = [1, 0]
    self.assert_(d.get(C_Hash([0, 1], 1), None) is None)
    d[C_Hash([0, 1], 1)] = [0, 1]
    self.assertEqual(len(d), 2)

  def test_C_RHash_soundness_10(self):
      self.assertEqual(C_RHash(1, 2, 1), tuple([1, 0]))

  def test_C_RHash_soundness_01(self):
      self.assertEqual(C_RHash(0, 2, 1), tuple([0, 1]))

class HashTest_n3_r1(unittest.TestCase):
  def test_C_Hash_range_100(self):
      h = C_Hash([1, 0, 0], 1)
      self.assert_(C(3, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010(self):
      h = C_Hash([0, 1, 0], 1)
      self.assert_(C(3, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001(self):
      h = C_Hash([0, 0, 1], 1)
      self.assert_(C(3, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 0, 0], 1), None) is None)
    d[C_Hash([1, 0, 0], 1)] = [1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0], 1), None) is None)
    d[C_Hash([0, 1, 0], 1)] = [0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1], 1), None) is None)
    d[C_Hash([0, 0, 1], 1)] = [0, 0, 1]
    self.assertEqual(len(d), 3)

  def test_C_RHash_soundness_100(self):
      self.assertEqual(C_RHash(2, 3, 1), tuple([1, 0, 0]))

  def test_C_RHash_soundness_010(self):
      self.assertEqual(C_RHash(1, 3, 1), tuple([0, 1, 0]))

  def test_C_RHash_soundness_001(self):
      self.assertEqual(C_RHash(0, 3, 1), tuple([0, 0, 1]))

class HashTest_n3_r2(unittest.TestCase):
  def test_C_Hash_range_110(self):
      h = C_Hash([1, 1, 0], 2)
      self.assert_(C(3, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101(self):
      h = C_Hash([1, 0, 1], 2)
      self.assert_(C(3, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011(self):
      h = C_Hash([0, 1, 1], 2)
      self.assert_(C(3, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 0], 2), None) is None)
    d[C_Hash([1, 1, 0], 2)] = [1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1], 2), None) is None)
    d[C_Hash([1, 0, 1], 2)] = [1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1], 2), None) is None)
    d[C_Hash([0, 1, 1], 2)] = [0, 1, 1]
    self.assertEqual(len(d), 3)

  def test_C_RHash_soundness_110(self):
      self.assertEqual(C_RHash(2, 3, 2), tuple([1, 1, 0]))

  def test_C_RHash_soundness_101(self):
      self.assertEqual(C_RHash(1, 3, 2), tuple([1, 0, 1]))

  def test_C_RHash_soundness_011(self):
      self.assertEqual(C_RHash(0, 3, 2), tuple([0, 1, 1]))

class HashTest_n4_r1(unittest.TestCase):
  def test_C_Hash_range_1000(self):
      h = C_Hash([1, 0, 0, 0], 1)
      self.assert_(C(4, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100(self):
      h = C_Hash([0, 1, 0, 0], 1)
      self.assert_(C(4, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010(self):
      h = C_Hash([0, 0, 1, 0], 1)
      self.assert_(C(4, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001(self):
      h = C_Hash([0, 0, 0, 1], 1)
      self.assert_(C(4, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 0, 0, 0], 1), None) is None)
    d[C_Hash([1, 0, 0, 0], 1)] = [1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0], 1), None) is None)
    d[C_Hash([0, 1, 0, 0], 1)] = [0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0], 1), None) is None)
    d[C_Hash([0, 0, 1, 0], 1)] = [0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1], 1), None) is None)
    d[C_Hash([0, 0, 0, 1], 1)] = [0, 0, 0, 1]
    self.assertEqual(len(d), 4)

  def test_C_RHash_soundness_1000(self):
      self.assertEqual(C_RHash(3, 4, 1), tuple([1, 0, 0, 0]))

  def test_C_RHash_soundness_0100(self):
      self.assertEqual(C_RHash(2, 4, 1), tuple([0, 1, 0, 0]))

  def test_C_RHash_soundness_0010(self):
      self.assertEqual(C_RHash(1, 4, 1), tuple([0, 0, 1, 0]))

  def test_C_RHash_soundness_0001(self):
      self.assertEqual(C_RHash(0, 4, 1), tuple([0, 0, 0, 1]))

class HashTest_n4_r2(unittest.TestCase):
  def test_C_Hash_range_1100(self):
      h = C_Hash([1, 1, 0, 0], 2)
      self.assert_(C(4, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010(self):
      h = C_Hash([1, 0, 1, 0], 2)
      self.assert_(C(4, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110(self):
      h = C_Hash([0, 1, 1, 0], 2)
      self.assert_(C(4, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001(self):
      h = C_Hash([1, 0, 0, 1], 2)
      self.assert_(C(4, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101(self):
      h = C_Hash([0, 1, 0, 1], 2)
      self.assert_(C(4, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011(self):
      h = C_Hash([0, 0, 1, 1], 2)
      self.assert_(C(4, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 0, 0], 2), None) is None)
    d[C_Hash([1, 1, 0, 0], 2)] = [1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0], 2), None) is None)
    d[C_Hash([1, 0, 1, 0], 2)] = [1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0], 2), None) is None)
    d[C_Hash([0, 1, 1, 0], 2)] = [0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1], 2), None) is None)
    d[C_Hash([1, 0, 0, 1], 2)] = [1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1], 2), None) is None)
    d[C_Hash([0, 1, 0, 1], 2)] = [0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1], 2), None) is None)
    d[C_Hash([0, 0, 1, 1], 2)] = [0, 0, 1, 1]
    self.assertEqual(len(d), 6)

  def test_C_RHash_soundness_1100(self):
      self.assertEqual(C_RHash(5, 4, 2), tuple([1, 1, 0, 0]))

  def test_C_RHash_soundness_1010(self):
      self.assertEqual(C_RHash(4, 4, 2), tuple([1, 0, 1, 0]))

  def test_C_RHash_soundness_0110(self):
      self.assertEqual(C_RHash(2, 4, 2), tuple([0, 1, 1, 0]))

  def test_C_RHash_soundness_1001(self):
      self.assertEqual(C_RHash(3, 4, 2), tuple([1, 0, 0, 1]))

  def test_C_RHash_soundness_0101(self):
      self.assertEqual(C_RHash(1, 4, 2), tuple([0, 1, 0, 1]))

  def test_C_RHash_soundness_0011(self):
      self.assertEqual(C_RHash(0, 4, 2), tuple([0, 0, 1, 1]))

class HashTest_n4_r3(unittest.TestCase):
  def test_C_Hash_range_1110(self):
      h = C_Hash([1, 1, 1, 0], 3)
      self.assert_(C(4, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101(self):
      h = C_Hash([1, 1, 0, 1], 3)
      self.assert_(C(4, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011(self):
      h = C_Hash([1, 0, 1, 1], 3)
      self.assert_(C(4, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111(self):
      h = C_Hash([0, 1, 1, 1], 3)
      self.assert_(C(4, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 0], 3), None) is None)
    d[C_Hash([1, 1, 1, 0], 3)] = [1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1], 3), None) is None)
    d[C_Hash([1, 1, 0, 1], 3)] = [1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1], 3), None) is None)
    d[C_Hash([1, 0, 1, 1], 3)] = [1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1], 3), None) is None)
    d[C_Hash([0, 1, 1, 1], 3)] = [0, 1, 1, 1]
    self.assertEqual(len(d), 4)

  def test_C_RHash_soundness_1110(self):
      self.assertEqual(C_RHash(3, 4, 3), tuple([1, 1, 1, 0]))

  def test_C_RHash_soundness_1101(self):
      self.assertEqual(C_RHash(2, 4, 3), tuple([1, 1, 0, 1]))

  def test_C_RHash_soundness_1011(self):
      self.assertEqual(C_RHash(1, 4, 3), tuple([1, 0, 1, 1]))

  def test_C_RHash_soundness_0111(self):
      self.assertEqual(C_RHash(0, 4, 3), tuple([0, 1, 1, 1]))

class HashTest_n5_r1(unittest.TestCase):
  def test_C_Hash_range_10000(self):
      h = C_Hash([1, 0, 0, 0, 0], 1)
      self.assert_(C(5, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000(self):
      h = C_Hash([0, 1, 0, 0, 0], 1)
      self.assert_(C(5, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100(self):
      h = C_Hash([0, 0, 1, 0, 0], 1)
      self.assert_(C(5, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010(self):
      h = C_Hash([0, 0, 0, 1, 0], 1)
      self.assert_(C(5, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001(self):
      h = C_Hash([0, 0, 0, 0, 1], 1)
      self.assert_(C(5, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([1, 0, 0, 0, 0], 1)] = [1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 1, 0, 0, 0], 1)] = [0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 1, 0, 0], 1)] = [0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 1, 0], 1)] = [0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 1], 1)] = [0, 0, 0, 0, 1]
    self.assertEqual(len(d), 5)

  def test_C_RHash_soundness_10000(self):
      self.assertEqual(C_RHash(4, 5, 1), tuple([1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01000(self):
      self.assertEqual(C_RHash(3, 5, 1), tuple([0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00100(self):
      self.assertEqual(C_RHash(2, 5, 1), tuple([0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00010(self):
      self.assertEqual(C_RHash(1, 5, 1), tuple([0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00001(self):
      self.assertEqual(C_RHash(0, 5, 1), tuple([0, 0, 0, 0, 1]))

class HashTest_n5_r2(unittest.TestCase):
  def test_C_Hash_range_11000(self):
      h = C_Hash([1, 1, 0, 0, 0], 2)
      self.assert_(C(5, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100(self):
      h = C_Hash([1, 0, 1, 0, 0], 2)
      self.assert_(C(5, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100(self):
      h = C_Hash([0, 1, 1, 0, 0], 2)
      self.assert_(C(5, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010(self):
      h = C_Hash([1, 0, 0, 1, 0], 2)
      self.assert_(C(5, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010(self):
      h = C_Hash([0, 1, 0, 1, 0], 2)
      self.assert_(C(5, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110(self):
      h = C_Hash([0, 0, 1, 1, 0], 2)
      self.assert_(C(5, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001(self):
      h = C_Hash([1, 0, 0, 0, 1], 2)
      self.assert_(C(5, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001(self):
      h = C_Hash([0, 1, 0, 0, 1], 2)
      self.assert_(C(5, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101(self):
      h = C_Hash([0, 0, 1, 0, 1], 2)
      self.assert_(C(5, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011(self):
      h = C_Hash([0, 0, 0, 1, 1], 2)
      self.assert_(C(5, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 1, 0, 0, 0], 2)] = [1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 1, 0, 0], 2)] = [1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 1, 0, 0], 2)] = [0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 1, 0], 2)] = [1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 1, 0], 2)] = [0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 1, 0], 2)] = [0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 1], 2)] = [1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 1], 2)] = [0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 1], 2)] = [0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 1], 2)] = [0, 0, 0, 1, 1]
    self.assertEqual(len(d), 10)

  def test_C_RHash_soundness_11000(self):
      self.assertEqual(C_RHash(9, 5, 2), tuple([1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10100(self):
      self.assertEqual(C_RHash(8, 5, 2), tuple([1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01100(self):
      self.assertEqual(C_RHash(5, 5, 2), tuple([0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10010(self):
      self.assertEqual(C_RHash(7, 5, 2), tuple([1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01010(self):
      self.assertEqual(C_RHash(4, 5, 2), tuple([0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00110(self):
      self.assertEqual(C_RHash(2, 5, 2), tuple([0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10001(self):
      self.assertEqual(C_RHash(6, 5, 2), tuple([1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01001(self):
      self.assertEqual(C_RHash(3, 5, 2), tuple([0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00101(self):
      self.assertEqual(C_RHash(1, 5, 2), tuple([0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00011(self):
      self.assertEqual(C_RHash(0, 5, 2), tuple([0, 0, 0, 1, 1]))

class HashTest_n5_r3(unittest.TestCase):
  def test_C_Hash_range_11100(self):
      h = C_Hash([1, 1, 1, 0, 0], 3)
      self.assert_(C(5, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010(self):
      h = C_Hash([1, 1, 0, 1, 0], 3)
      self.assert_(C(5, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110(self):
      h = C_Hash([1, 0, 1, 1, 0], 3)
      self.assert_(C(5, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110(self):
      h = C_Hash([0, 1, 1, 1, 0], 3)
      self.assert_(C(5, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001(self):
      h = C_Hash([1, 1, 0, 0, 1], 3)
      self.assert_(C(5, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101(self):
      h = C_Hash([1, 0, 1, 0, 1], 3)
      self.assert_(C(5, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101(self):
      h = C_Hash([0, 1, 1, 0, 1], 3)
      self.assert_(C(5, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011(self):
      h = C_Hash([1, 0, 0, 1, 1], 3)
      self.assert_(C(5, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011(self):
      h = C_Hash([0, 1, 0, 1, 1], 3)
      self.assert_(C(5, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111(self):
      h = C_Hash([0, 0, 1, 1, 1], 3)
      self.assert_(C(5, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 1, 0, 0], 3)] = [1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 1, 0], 3)] = [1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 1, 0], 3)] = [1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 1, 0], 3)] = [0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 1], 3)] = [1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 1], 3)] = [1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 1], 3)] = [0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 1], 3)] = [1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 1], 3)] = [0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 1], 3)] = [0, 0, 1, 1, 1]
    self.assertEqual(len(d), 10)

  def test_C_RHash_soundness_11100(self):
      self.assertEqual(C_RHash(9, 5, 3), tuple([1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11010(self):
      self.assertEqual(C_RHash(8, 5, 3), tuple([1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10110(self):
      self.assertEqual(C_RHash(6, 5, 3), tuple([1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01110(self):
      self.assertEqual(C_RHash(3, 5, 3), tuple([0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11001(self):
      self.assertEqual(C_RHash(7, 5, 3), tuple([1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10101(self):
      self.assertEqual(C_RHash(5, 5, 3), tuple([1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01101(self):
      self.assertEqual(C_RHash(2, 5, 3), tuple([0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10011(self):
      self.assertEqual(C_RHash(4, 5, 3), tuple([1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01011(self):
      self.assertEqual(C_RHash(1, 5, 3), tuple([0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00111(self):
      self.assertEqual(C_RHash(0, 5, 3), tuple([0, 0, 1, 1, 1]))

class HashTest_n5_r4(unittest.TestCase):
  def test_C_Hash_range_11110(self):
      h = C_Hash([1, 1, 1, 1, 0], 4)
      self.assert_(C(5, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101(self):
      h = C_Hash([1, 1, 1, 0, 1], 4)
      self.assert_(C(5, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011(self):
      h = C_Hash([1, 1, 0, 1, 1], 4)
      self.assert_(C(5, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111(self):
      h = C_Hash([1, 0, 1, 1, 1], 4)
      self.assert_(C(5, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111(self):
      h = C_Hash([0, 1, 1, 1, 1], 4)
      self.assert_(C(5, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 1, 0], 4)] = [1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 1], 4)] = [1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 1], 4)] = [1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 1], 4)] = [1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 1], 4)] = [0, 1, 1, 1, 1]
    self.assertEqual(len(d), 5)

  def test_C_RHash_soundness_11110(self):
      self.assertEqual(C_RHash(4, 5, 4), tuple([1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11101(self):
      self.assertEqual(C_RHash(3, 5, 4), tuple([1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11011(self):
      self.assertEqual(C_RHash(2, 5, 4), tuple([1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10111(self):
      self.assertEqual(C_RHash(1, 5, 4), tuple([1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01111(self):
      self.assertEqual(C_RHash(0, 5, 4), tuple([0, 1, 1, 1, 1]))

class HashTest_n6_r1(unittest.TestCase):
  def test_C_Hash_range_100000(self):
      h = C_Hash([1, 0, 0, 0, 0, 0], 1)
      self.assert_(C(6, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010000(self):
      h = C_Hash([0, 1, 0, 0, 0, 0], 1)
      self.assert_(C(6, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001000(self):
      h = C_Hash([0, 0, 1, 0, 0, 0], 1)
      self.assert_(C(6, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000100(self):
      h = C_Hash([0, 0, 0, 1, 0, 0], 1)
      self.assert_(C(6, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000010(self):
      h = C_Hash([0, 0, 0, 0, 1, 0], 1)
      self.assert_(C(6, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000001(self):
      h = C_Hash([0, 0, 0, 0, 0, 1], 1)
      self.assert_(C(6, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0], 1)] = [1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0], 1)] = [0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0], 1)] = [0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0], 1)] = [0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0], 1)] = [0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1], 1)] = [0, 0, 0, 0, 0, 1]
    self.assertEqual(len(d), 6)

  def test_C_RHash_soundness_100000(self):
      self.assertEqual(C_RHash(5, 6, 1), tuple([1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_010000(self):
      self.assertEqual(C_RHash(4, 6, 1), tuple([0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_001000(self):
      self.assertEqual(C_RHash(3, 6, 1), tuple([0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_000100(self):
      self.assertEqual(C_RHash(2, 6, 1), tuple([0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_000010(self):
      self.assertEqual(C_RHash(1, 6, 1), tuple([0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_000001(self):
      self.assertEqual(C_RHash(0, 6, 1), tuple([0, 0, 0, 0, 0, 1]))

class HashTest_n6_r2(unittest.TestCase):
  def test_C_Hash_range_110000(self):
      h = C_Hash([1, 1, 0, 0, 0, 0], 2)
      self.assert_(C(6, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101000(self):
      h = C_Hash([1, 0, 1, 0, 0, 0], 2)
      self.assert_(C(6, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011000(self):
      h = C_Hash([0, 1, 1, 0, 0, 0], 2)
      self.assert_(C(6, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100100(self):
      h = C_Hash([1, 0, 0, 1, 0, 0], 2)
      self.assert_(C(6, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010100(self):
      h = C_Hash([0, 1, 0, 1, 0, 0], 2)
      self.assert_(C(6, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001100(self):
      h = C_Hash([0, 0, 1, 1, 0, 0], 2)
      self.assert_(C(6, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100010(self):
      h = C_Hash([1, 0, 0, 0, 1, 0], 2)
      self.assert_(C(6, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010010(self):
      h = C_Hash([0, 1, 0, 0, 1, 0], 2)
      self.assert_(C(6, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001010(self):
      h = C_Hash([0, 0, 1, 0, 1, 0], 2)
      self.assert_(C(6, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000110(self):
      h = C_Hash([0, 0, 0, 1, 1, 0], 2)
      self.assert_(C(6, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100001(self):
      h = C_Hash([1, 0, 0, 0, 0, 1], 2)
      self.assert_(C(6, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010001(self):
      h = C_Hash([0, 1, 0, 0, 0, 1], 2)
      self.assert_(C(6, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001001(self):
      h = C_Hash([0, 0, 1, 0, 0, 1], 2)
      self.assert_(C(6, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000101(self):
      h = C_Hash([0, 0, 0, 1, 0, 1], 2)
      self.assert_(C(6, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000011(self):
      h = C_Hash([0, 0, 0, 0, 1, 1], 2)
      self.assert_(C(6, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0], 2)] = [1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0], 2)] = [1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0], 2)] = [0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0], 2)] = [1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0], 2)] = [0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0], 2)] = [0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0], 2)] = [1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0], 2)] = [0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0], 2)] = [0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0], 2)] = [0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1], 2)] = [1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1], 2)] = [0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1], 2)] = [0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1], 2)] = [0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1], 2)] = [0, 0, 0, 0, 1, 1]
    self.assertEqual(len(d), 15)

  def test_C_RHash_soundness_110000(self):
      self.assertEqual(C_RHash(14, 6, 2), tuple([1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_101000(self):
      self.assertEqual(C_RHash(13, 6, 2), tuple([1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_011000(self):
      self.assertEqual(C_RHash(9, 6, 2), tuple([0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_100100(self):
      self.assertEqual(C_RHash(12, 6, 2), tuple([1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_010100(self):
      self.assertEqual(C_RHash(8, 6, 2), tuple([0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_001100(self):
      self.assertEqual(C_RHash(5, 6, 2), tuple([0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_100010(self):
      self.assertEqual(C_RHash(11, 6, 2), tuple([1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_010010(self):
      self.assertEqual(C_RHash(7, 6, 2), tuple([0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_001010(self):
      self.assertEqual(C_RHash(4, 6, 2), tuple([0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_000110(self):
      self.assertEqual(C_RHash(2, 6, 2), tuple([0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_100001(self):
      self.assertEqual(C_RHash(10, 6, 2), tuple([1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_010001(self):
      self.assertEqual(C_RHash(6, 6, 2), tuple([0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_001001(self):
      self.assertEqual(C_RHash(3, 6, 2), tuple([0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_000101(self):
      self.assertEqual(C_RHash(1, 6, 2), tuple([0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_000011(self):
      self.assertEqual(C_RHash(0, 6, 2), tuple([0, 0, 0, 0, 1, 1]))

class HashTest_n6_r3(unittest.TestCase):
  def test_C_Hash_range_111000(self):
      h = C_Hash([1, 1, 1, 0, 0, 0], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110100(self):
      h = C_Hash([1, 1, 0, 1, 0, 0], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101100(self):
      h = C_Hash([1, 0, 1, 1, 0, 0], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011100(self):
      h = C_Hash([0, 1, 1, 1, 0, 0], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110010(self):
      h = C_Hash([1, 1, 0, 0, 1, 0], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101010(self):
      h = C_Hash([1, 0, 1, 0, 1, 0], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011010(self):
      h = C_Hash([0, 1, 1, 0, 1, 0], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100110(self):
      h = C_Hash([1, 0, 0, 1, 1, 0], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010110(self):
      h = C_Hash([0, 1, 0, 1, 1, 0], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001110(self):
      h = C_Hash([0, 0, 1, 1, 1, 0], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110001(self):
      h = C_Hash([1, 1, 0, 0, 0, 1], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101001(self):
      h = C_Hash([1, 0, 1, 0, 0, 1], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011001(self):
      h = C_Hash([0, 1, 1, 0, 0, 1], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100101(self):
      h = C_Hash([1, 0, 0, 1, 0, 1], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010101(self):
      h = C_Hash([0, 1, 0, 1, 0, 1], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001101(self):
      h = C_Hash([0, 0, 1, 1, 0, 1], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100011(self):
      h = C_Hash([1, 0, 0, 0, 1, 1], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010011(self):
      h = C_Hash([0, 1, 0, 0, 1, 1], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001011(self):
      h = C_Hash([0, 0, 1, 0, 1, 1], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000111(self):
      h = C_Hash([0, 0, 0, 1, 1, 1], 3)
      self.assert_(C(6, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0], 3)] = [1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0], 3)] = [1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0], 3)] = [1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0], 3)] = [0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0], 3)] = [1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0], 3)] = [1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0], 3)] = [0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0], 3)] = [1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0], 3)] = [0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0], 3)] = [0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1], 3)] = [1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1], 3)] = [1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1], 3)] = [0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1], 3)] = [1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1], 3)] = [0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1], 3)] = [0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1], 3)] = [1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1], 3)] = [0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1], 3)] = [0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1], 3)] = [0, 0, 0, 1, 1, 1]
    self.assertEqual(len(d), 20)

  def test_C_RHash_soundness_111000(self):
      self.assertEqual(C_RHash(19, 6, 3), tuple([1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_110100(self):
      self.assertEqual(C_RHash(18, 6, 3), tuple([1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_101100(self):
      self.assertEqual(C_RHash(15, 6, 3), tuple([1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_011100(self):
      self.assertEqual(C_RHash(9, 6, 3), tuple([0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_110010(self):
      self.assertEqual(C_RHash(17, 6, 3), tuple([1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_101010(self):
      self.assertEqual(C_RHash(14, 6, 3), tuple([1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_011010(self):
      self.assertEqual(C_RHash(8, 6, 3), tuple([0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_100110(self):
      self.assertEqual(C_RHash(12, 6, 3), tuple([1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_010110(self):
      self.assertEqual(C_RHash(6, 6, 3), tuple([0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_001110(self):
      self.assertEqual(C_RHash(3, 6, 3), tuple([0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_110001(self):
      self.assertEqual(C_RHash(16, 6, 3), tuple([1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_101001(self):
      self.assertEqual(C_RHash(13, 6, 3), tuple([1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_011001(self):
      self.assertEqual(C_RHash(7, 6, 3), tuple([0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_100101(self):
      self.assertEqual(C_RHash(11, 6, 3), tuple([1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_010101(self):
      self.assertEqual(C_RHash(5, 6, 3), tuple([0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_001101(self):
      self.assertEqual(C_RHash(2, 6, 3), tuple([0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_100011(self):
      self.assertEqual(C_RHash(10, 6, 3), tuple([1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_010011(self):
      self.assertEqual(C_RHash(4, 6, 3), tuple([0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_001011(self):
      self.assertEqual(C_RHash(1, 6, 3), tuple([0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_000111(self):
      self.assertEqual(C_RHash(0, 6, 3), tuple([0, 0, 0, 1, 1, 1]))

class HashTest_n6_r4(unittest.TestCase):
  def test_C_Hash_range_111100(self):
      h = C_Hash([1, 1, 1, 1, 0, 0], 4)
      self.assert_(C(6, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111010(self):
      h = C_Hash([1, 1, 1, 0, 1, 0], 4)
      self.assert_(C(6, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110110(self):
      h = C_Hash([1, 1, 0, 1, 1, 0], 4)
      self.assert_(C(6, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101110(self):
      h = C_Hash([1, 0, 1, 1, 1, 0], 4)
      self.assert_(C(6, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011110(self):
      h = C_Hash([0, 1, 1, 1, 1, 0], 4)
      self.assert_(C(6, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111001(self):
      h = C_Hash([1, 1, 1, 0, 0, 1], 4)
      self.assert_(C(6, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110101(self):
      h = C_Hash([1, 1, 0, 1, 0, 1], 4)
      self.assert_(C(6, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101101(self):
      h = C_Hash([1, 0, 1, 1, 0, 1], 4)
      self.assert_(C(6, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011101(self):
      h = C_Hash([0, 1, 1, 1, 0, 1], 4)
      self.assert_(C(6, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110011(self):
      h = C_Hash([1, 1, 0, 0, 1, 1], 4)
      self.assert_(C(6, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101011(self):
      h = C_Hash([1, 0, 1, 0, 1, 1], 4)
      self.assert_(C(6, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011011(self):
      h = C_Hash([0, 1, 1, 0, 1, 1], 4)
      self.assert_(C(6, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100111(self):
      h = C_Hash([1, 0, 0, 1, 1, 1], 4)
      self.assert_(C(6, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010111(self):
      h = C_Hash([0, 1, 0, 1, 1, 1], 4)
      self.assert_(C(6, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001111(self):
      h = C_Hash([0, 0, 1, 1, 1, 1], 4)
      self.assert_(C(6, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0], 4)] = [1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0], 4)] = [1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0], 4)] = [1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0], 4)] = [1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0], 4)] = [0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1], 4)] = [1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1], 4)] = [1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1], 4)] = [1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1], 4)] = [0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1], 4)] = [1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1], 4)] = [1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1], 4)] = [0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1], 4)] = [1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1], 4)] = [0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1], 4)] = [0, 0, 1, 1, 1, 1]
    self.assertEqual(len(d), 15)

  def test_C_RHash_soundness_111100(self):
      self.assertEqual(C_RHash(14, 6, 4), tuple([1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_111010(self):
      self.assertEqual(C_RHash(13, 6, 4), tuple([1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_110110(self):
      self.assertEqual(C_RHash(11, 6, 4), tuple([1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_101110(self):
      self.assertEqual(C_RHash(8, 6, 4), tuple([1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_011110(self):
      self.assertEqual(C_RHash(4, 6, 4), tuple([0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_111001(self):
      self.assertEqual(C_RHash(12, 6, 4), tuple([1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_110101(self):
      self.assertEqual(C_RHash(10, 6, 4), tuple([1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_101101(self):
      self.assertEqual(C_RHash(7, 6, 4), tuple([1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_011101(self):
      self.assertEqual(C_RHash(3, 6, 4), tuple([0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_110011(self):
      self.assertEqual(C_RHash(9, 6, 4), tuple([1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_101011(self):
      self.assertEqual(C_RHash(6, 6, 4), tuple([1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_011011(self):
      self.assertEqual(C_RHash(2, 6, 4), tuple([0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_100111(self):
      self.assertEqual(C_RHash(5, 6, 4), tuple([1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_010111(self):
      self.assertEqual(C_RHash(1, 6, 4), tuple([0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_001111(self):
      self.assertEqual(C_RHash(0, 6, 4), tuple([0, 0, 1, 1, 1, 1]))

class HashTest_n6_r5(unittest.TestCase):
  def test_C_Hash_range_111110(self):
      h = C_Hash([1, 1, 1, 1, 1, 0], 5)
      self.assert_(C(6, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111101(self):
      h = C_Hash([1, 1, 1, 1, 0, 1], 5)
      self.assert_(C(6, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111011(self):
      h = C_Hash([1, 1, 1, 0, 1, 1], 5)
      self.assert_(C(6, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110111(self):
      h = C_Hash([1, 1, 0, 1, 1, 1], 5)
      self.assert_(C(6, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101111(self):
      h = C_Hash([1, 0, 1, 1, 1, 1], 5)
      self.assert_(C(6, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011111(self):
      h = C_Hash([0, 1, 1, 1, 1, 1], 5)
      self.assert_(C(6, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0], 5)] = [1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1], 5)] = [1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1], 5)] = [1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1], 5)] = [1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1], 5)] = [1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1], 5)] = [0, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 6)

  def test_C_RHash_soundness_111110(self):
      self.assertEqual(C_RHash(5, 6, 5), tuple([1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_111101(self):
      self.assertEqual(C_RHash(4, 6, 5), tuple([1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_111011(self):
      self.assertEqual(C_RHash(3, 6, 5), tuple([1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_110111(self):
      self.assertEqual(C_RHash(2, 6, 5), tuple([1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_101111(self):
      self.assertEqual(C_RHash(1, 6, 5), tuple([1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_011111(self):
      self.assertEqual(C_RHash(0, 6, 5), tuple([0, 1, 1, 1, 1, 1]))

class HashTest_n7_r1(unittest.TestCase):
  def test_C_Hash_range_1000000(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0], 1)
      self.assert_(C(7, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100000(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0], 1)
      self.assert_(C(7, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010000(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0], 1)
      self.assert_(C(7, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001000(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0], 1)
      self.assert_(C(7, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000100(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0], 1)
      self.assert_(C(7, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000010(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0], 1)
      self.assert_(C(7, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000001(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1], 1)
      self.assert_(C(7, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0], 1)] = [1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0], 1)] = [0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0], 1)] = [0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0], 1)] = [0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0], 1)] = [0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0], 1)] = [0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1], 1)] = [0, 0, 0, 0, 0, 0, 1]
    self.assertEqual(len(d), 7)

  def test_C_RHash_soundness_1000000(self):
      self.assertEqual(C_RHash(6, 7, 1), tuple([1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0100000(self):
      self.assertEqual(C_RHash(5, 7, 1), tuple([0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0010000(self):
      self.assertEqual(C_RHash(4, 7, 1), tuple([0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0001000(self):
      self.assertEqual(C_RHash(3, 7, 1), tuple([0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0000100(self):
      self.assertEqual(C_RHash(2, 7, 1), tuple([0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0000010(self):
      self.assertEqual(C_RHash(1, 7, 1), tuple([0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0000001(self):
      self.assertEqual(C_RHash(0, 7, 1), tuple([0, 0, 0, 0, 0, 0, 1]))

class HashTest_n7_r2(unittest.TestCase):
  def test_C_Hash_range_1100000(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010000(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110000(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001000(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101000(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011000(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000100(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100100(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010100(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001100(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000010(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100010(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010010(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001010(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000110(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000001(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100001(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010001(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001001(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000101(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000011(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1], 2)
      self.assert_(C(7, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0], 2)] = [1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0], 2)] = [1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0], 2)] = [0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0], 2)] = [1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0], 2)] = [0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0], 2)] = [0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0], 2)] = [1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0], 2)] = [0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0], 2)] = [0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0], 2)] = [0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0], 2)] = [1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0], 2)] = [0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0], 2)] = [0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0], 2)] = [0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0], 2)] = [0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1], 2)] = [1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1], 2)] = [0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1], 2)] = [0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1], 2)] = [0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1], 2)] = [0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1], 2)] = [0, 0, 0, 0, 0, 1, 1]
    self.assertEqual(len(d), 21)

  def test_C_RHash_soundness_1100000(self):
      self.assertEqual(C_RHash(20, 7, 2), tuple([1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1010000(self):
      self.assertEqual(C_RHash(19, 7, 2), tuple([1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0110000(self):
      self.assertEqual(C_RHash(14, 7, 2), tuple([0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1001000(self):
      self.assertEqual(C_RHash(18, 7, 2), tuple([1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0101000(self):
      self.assertEqual(C_RHash(13, 7, 2), tuple([0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0011000(self):
      self.assertEqual(C_RHash(9, 7, 2), tuple([0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1000100(self):
      self.assertEqual(C_RHash(17, 7, 2), tuple([1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0100100(self):
      self.assertEqual(C_RHash(12, 7, 2), tuple([0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0010100(self):
      self.assertEqual(C_RHash(8, 7, 2), tuple([0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0001100(self):
      self.assertEqual(C_RHash(5, 7, 2), tuple([0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1000010(self):
      self.assertEqual(C_RHash(16, 7, 2), tuple([1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0100010(self):
      self.assertEqual(C_RHash(11, 7, 2), tuple([0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0010010(self):
      self.assertEqual(C_RHash(7, 7, 2), tuple([0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0001010(self):
      self.assertEqual(C_RHash(4, 7, 2), tuple([0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0000110(self):
      self.assertEqual(C_RHash(2, 7, 2), tuple([0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1000001(self):
      self.assertEqual(C_RHash(15, 7, 2), tuple([1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0100001(self):
      self.assertEqual(C_RHash(10, 7, 2), tuple([0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0010001(self):
      self.assertEqual(C_RHash(6, 7, 2), tuple([0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0001001(self):
      self.assertEqual(C_RHash(3, 7, 2), tuple([0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0000101(self):
      self.assertEqual(C_RHash(1, 7, 2), tuple([0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0000011(self):
      self.assertEqual(C_RHash(0, 7, 2), tuple([0, 0, 0, 0, 0, 1, 1]))

class HashTest_n7_r3(unittest.TestCase):
  def test_C_Hash_range_1110000(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101000(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011000(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111000(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100100(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010100(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110100(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001100(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101100(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011100(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100010(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010010(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110010(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001010(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101010(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011010(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000110(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100110(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010110(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001110(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100001(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010001(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110001(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001001(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101001(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011001(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000101(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100101(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010101(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001101(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000011(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100011(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010011(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001011(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000111(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1], 3)
      self.assert_(C(7, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0], 3)] = [1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0], 3)] = [1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0], 3)] = [1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0], 3)] = [0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0], 3)] = [1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0], 3)] = [1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0], 3)] = [0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0], 3)] = [1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0], 3)] = [0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0], 3)] = [0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0], 3)] = [1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0], 3)] = [1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0], 3)] = [0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0], 3)] = [1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0], 3)] = [0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0], 3)] = [0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0], 3)] = [1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0], 3)] = [0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0], 3)] = [0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0], 3)] = [0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1], 3)] = [1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1], 3)] = [1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1], 3)] = [0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1], 3)] = [1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1], 3)] = [0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1], 3)] = [0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1], 3)] = [1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1], 3)] = [0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1], 3)] = [0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1], 3)] = [0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1], 3)] = [1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1], 3)] = [0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1], 3)] = [0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1], 3)] = [0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1], 3)] = [0, 0, 0, 0, 1, 1, 1]
    self.assertEqual(len(d), 35)

  def test_C_RHash_soundness_1110000(self):
      self.assertEqual(C_RHash(34, 7, 3), tuple([1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1101000(self):
      self.assertEqual(C_RHash(33, 7, 3), tuple([1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1011000(self):
      self.assertEqual(C_RHash(29, 7, 3), tuple([1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0111000(self):
      self.assertEqual(C_RHash(19, 7, 3), tuple([0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1100100(self):
      self.assertEqual(C_RHash(32, 7, 3), tuple([1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1010100(self):
      self.assertEqual(C_RHash(28, 7, 3), tuple([1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0110100(self):
      self.assertEqual(C_RHash(18, 7, 3), tuple([0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1001100(self):
      self.assertEqual(C_RHash(25, 7, 3), tuple([1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0101100(self):
      self.assertEqual(C_RHash(15, 7, 3), tuple([0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0011100(self):
      self.assertEqual(C_RHash(9, 7, 3), tuple([0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1100010(self):
      self.assertEqual(C_RHash(31, 7, 3), tuple([1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1010010(self):
      self.assertEqual(C_RHash(27, 7, 3), tuple([1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0110010(self):
      self.assertEqual(C_RHash(17, 7, 3), tuple([0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1001010(self):
      self.assertEqual(C_RHash(24, 7, 3), tuple([1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0101010(self):
      self.assertEqual(C_RHash(14, 7, 3), tuple([0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0011010(self):
      self.assertEqual(C_RHash(8, 7, 3), tuple([0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1000110(self):
      self.assertEqual(C_RHash(22, 7, 3), tuple([1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0100110(self):
      self.assertEqual(C_RHash(12, 7, 3), tuple([0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0010110(self):
      self.assertEqual(C_RHash(6, 7, 3), tuple([0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0001110(self):
      self.assertEqual(C_RHash(3, 7, 3), tuple([0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1100001(self):
      self.assertEqual(C_RHash(30, 7, 3), tuple([1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1010001(self):
      self.assertEqual(C_RHash(26, 7, 3), tuple([1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0110001(self):
      self.assertEqual(C_RHash(16, 7, 3), tuple([0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1001001(self):
      self.assertEqual(C_RHash(23, 7, 3), tuple([1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0101001(self):
      self.assertEqual(C_RHash(13, 7, 3), tuple([0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0011001(self):
      self.assertEqual(C_RHash(7, 7, 3), tuple([0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1000101(self):
      self.assertEqual(C_RHash(21, 7, 3), tuple([1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0100101(self):
      self.assertEqual(C_RHash(11, 7, 3), tuple([0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0010101(self):
      self.assertEqual(C_RHash(5, 7, 3), tuple([0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0001101(self):
      self.assertEqual(C_RHash(2, 7, 3), tuple([0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1000011(self):
      self.assertEqual(C_RHash(20, 7, 3), tuple([1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0100011(self):
      self.assertEqual(C_RHash(10, 7, 3), tuple([0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0010011(self):
      self.assertEqual(C_RHash(4, 7, 3), tuple([0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0001011(self):
      self.assertEqual(C_RHash(1, 7, 3), tuple([0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0000111(self):
      self.assertEqual(C_RHash(0, 7, 3), tuple([0, 0, 0, 0, 1, 1, 1]))

class HashTest_n7_r4(unittest.TestCase):
  def test_C_Hash_range_1111000(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110100(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101100(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011100(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111100(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110010(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101010(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011010(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111010(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100110(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010110(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110110(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001110(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101110(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011110(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110001(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101001(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011001(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111001(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100101(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010101(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110101(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001101(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101101(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011101(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100011(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010011(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110011(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001011(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101011(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011011(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000111(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100111(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010111(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001111(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1], 4)
      self.assert_(C(7, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0], 4)] = [1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0], 4)] = [1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0], 4)] = [1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0], 4)] = [1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0], 4)] = [0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0], 4)] = [1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0], 4)] = [1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0], 4)] = [1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0], 4)] = [0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0], 4)] = [1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0], 4)] = [1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0], 4)] = [0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0], 4)] = [1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0], 4)] = [0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0], 4)] = [0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1], 4)] = [1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1], 4)] = [1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1], 4)] = [1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1], 4)] = [0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1], 4)] = [1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1], 4)] = [1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1], 4)] = [0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1], 4)] = [1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1], 4)] = [0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1], 4)] = [0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1], 4)] = [1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1], 4)] = [1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1], 4)] = [0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1], 4)] = [1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1], 4)] = [0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1], 4)] = [0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1], 4)] = [1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1], 4)] = [0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1], 4)] = [0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1], 4)] = [0, 0, 0, 1, 1, 1, 1]
    self.assertEqual(len(d), 35)

  def test_C_RHash_soundness_1111000(self):
      self.assertEqual(C_RHash(34, 7, 4), tuple([1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1110100(self):
      self.assertEqual(C_RHash(33, 7, 4), tuple([1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1101100(self):
      self.assertEqual(C_RHash(30, 7, 4), tuple([1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1011100(self):
      self.assertEqual(C_RHash(24, 7, 4), tuple([1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0111100(self):
      self.assertEqual(C_RHash(14, 7, 4), tuple([0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1110010(self):
      self.assertEqual(C_RHash(32, 7, 4), tuple([1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1101010(self):
      self.assertEqual(C_RHash(29, 7, 4), tuple([1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1011010(self):
      self.assertEqual(C_RHash(23, 7, 4), tuple([1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0111010(self):
      self.assertEqual(C_RHash(13, 7, 4), tuple([0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1100110(self):
      self.assertEqual(C_RHash(27, 7, 4), tuple([1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1010110(self):
      self.assertEqual(C_RHash(21, 7, 4), tuple([1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0110110(self):
      self.assertEqual(C_RHash(11, 7, 4), tuple([0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1001110(self):
      self.assertEqual(C_RHash(18, 7, 4), tuple([1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0101110(self):
      self.assertEqual(C_RHash(8, 7, 4), tuple([0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0011110(self):
      self.assertEqual(C_RHash(4, 7, 4), tuple([0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1110001(self):
      self.assertEqual(C_RHash(31, 7, 4), tuple([1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1101001(self):
      self.assertEqual(C_RHash(28, 7, 4), tuple([1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1011001(self):
      self.assertEqual(C_RHash(22, 7, 4), tuple([1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0111001(self):
      self.assertEqual(C_RHash(12, 7, 4), tuple([0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1100101(self):
      self.assertEqual(C_RHash(26, 7, 4), tuple([1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1010101(self):
      self.assertEqual(C_RHash(20, 7, 4), tuple([1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0110101(self):
      self.assertEqual(C_RHash(10, 7, 4), tuple([0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1001101(self):
      self.assertEqual(C_RHash(17, 7, 4), tuple([1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0101101(self):
      self.assertEqual(C_RHash(7, 7, 4), tuple([0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0011101(self):
      self.assertEqual(C_RHash(3, 7, 4), tuple([0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1100011(self):
      self.assertEqual(C_RHash(25, 7, 4), tuple([1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1010011(self):
      self.assertEqual(C_RHash(19, 7, 4), tuple([1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0110011(self):
      self.assertEqual(C_RHash(9, 7, 4), tuple([0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1001011(self):
      self.assertEqual(C_RHash(16, 7, 4), tuple([1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0101011(self):
      self.assertEqual(C_RHash(6, 7, 4), tuple([0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0011011(self):
      self.assertEqual(C_RHash(2, 7, 4), tuple([0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1000111(self):
      self.assertEqual(C_RHash(15, 7, 4), tuple([1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0100111(self):
      self.assertEqual(C_RHash(5, 7, 4), tuple([0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0010111(self):
      self.assertEqual(C_RHash(1, 7, 4), tuple([0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0001111(self):
      self.assertEqual(C_RHash(0, 7, 4), tuple([0, 0, 0, 1, 1, 1, 1]))

class HashTest_n7_r5(unittest.TestCase):
  def test_C_Hash_range_1111100(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111010(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110110(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101110(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011110(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111110(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111001(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110101(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101101(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011101(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111101(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110011(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101011(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011011(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111011(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100111(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010111(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110111(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001111(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101111(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011111(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1], 5)
      self.assert_(C(7, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0], 5)] = [1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0], 5)] = [1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0], 5)] = [1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0], 5)] = [1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0], 5)] = [1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0], 5)] = [0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1], 5)] = [1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1], 5)] = [1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1], 5)] = [1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1], 5)] = [1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1], 5)] = [0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1], 5)] = [1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1], 5)] = [1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1], 5)] = [1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1], 5)] = [0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1], 5)] = [1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1], 5)] = [1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1], 5)] = [0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1], 5)] = [1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1], 5)] = [0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1], 5)] = [0, 0, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 21)

  def test_C_RHash_soundness_1111100(self):
      self.assertEqual(C_RHash(20, 7, 5), tuple([1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1111010(self):
      self.assertEqual(C_RHash(19, 7, 5), tuple([1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1110110(self):
      self.assertEqual(C_RHash(17, 7, 5), tuple([1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1101110(self):
      self.assertEqual(C_RHash(14, 7, 5), tuple([1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1011110(self):
      self.assertEqual(C_RHash(10, 7, 5), tuple([1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0111110(self):
      self.assertEqual(C_RHash(5, 7, 5), tuple([0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1111001(self):
      self.assertEqual(C_RHash(18, 7, 5), tuple([1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1110101(self):
      self.assertEqual(C_RHash(16, 7, 5), tuple([1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1101101(self):
      self.assertEqual(C_RHash(13, 7, 5), tuple([1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1011101(self):
      self.assertEqual(C_RHash(9, 7, 5), tuple([1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0111101(self):
      self.assertEqual(C_RHash(4, 7, 5), tuple([0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1110011(self):
      self.assertEqual(C_RHash(15, 7, 5), tuple([1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1101011(self):
      self.assertEqual(C_RHash(12, 7, 5), tuple([1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1011011(self):
      self.assertEqual(C_RHash(8, 7, 5), tuple([1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0111011(self):
      self.assertEqual(C_RHash(3, 7, 5), tuple([0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1100111(self):
      self.assertEqual(C_RHash(11, 7, 5), tuple([1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1010111(self):
      self.assertEqual(C_RHash(7, 7, 5), tuple([1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0110111(self):
      self.assertEqual(C_RHash(2, 7, 5), tuple([0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1001111(self):
      self.assertEqual(C_RHash(6, 7, 5), tuple([1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0101111(self):
      self.assertEqual(C_RHash(1, 7, 5), tuple([0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0011111(self):
      self.assertEqual(C_RHash(0, 7, 5), tuple([0, 0, 1, 1, 1, 1, 1]))

class HashTest_n7_r6(unittest.TestCase):
  def test_C_Hash_range_1111110(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0], 6)
      self.assert_(C(7, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111101(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1], 6)
      self.assert_(C(7, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111011(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1], 6)
      self.assert_(C(7, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110111(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1], 6)
      self.assert_(C(7, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101111(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1], 6)
      self.assert_(C(7, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011111(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1], 6)
      self.assert_(C(7, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111111(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1], 6)
      self.assert_(C(7, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0], 6)] = [1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1], 6)] = [1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1], 6)] = [1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1], 6)] = [1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1], 6)] = [1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1], 6)] = [1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1], 6)] = [0, 1, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 7)

  def test_C_RHash_soundness_1111110(self):
      self.assertEqual(C_RHash(6, 7, 6), tuple([1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1111101(self):
      self.assertEqual(C_RHash(5, 7, 6), tuple([1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1111011(self):
      self.assertEqual(C_RHash(4, 7, 6), tuple([1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1110111(self):
      self.assertEqual(C_RHash(3, 7, 6), tuple([1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1101111(self):
      self.assertEqual(C_RHash(2, 7, 6), tuple([1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1011111(self):
      self.assertEqual(C_RHash(1, 7, 6), tuple([1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0111111(self):
      self.assertEqual(C_RHash(0, 7, 6), tuple([0, 1, 1, 1, 1, 1, 1]))

class HashTest_n8_r1(unittest.TestCase):
  def test_C_Hash_range_10000000(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 0], 1)
      self.assert_(C(8, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000000(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 0], 1)
      self.assert_(C(8, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100000(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 0], 1)
      self.assert_(C(8, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010000(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 0], 1)
      self.assert_(C(8, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001000(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 0], 1)
      self.assert_(C(8, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000100(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 0], 1)
      self.assert_(C(8, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000010(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 0], 1)
      self.assert_(C(8, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000001(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 1], 1)
      self.assert_(C(8, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 0], 1)] = [1, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 0], 1)] = [0, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 0], 1)] = [0, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 0], 1)] = [0, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 0], 1)] = [0, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 0], 1)] = [0, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 0], 1)] = [0, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 1], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 1], 1)] = [0, 0, 0, 0, 0, 0, 0, 1]
    self.assertEqual(len(d), 8)

  def test_C_RHash_soundness_10000000(self):
      self.assertEqual(C_RHash(7, 8, 1), tuple([1, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01000000(self):
      self.assertEqual(C_RHash(6, 8, 1), tuple([0, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00100000(self):
      self.assertEqual(C_RHash(5, 8, 1), tuple([0, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00010000(self):
      self.assertEqual(C_RHash(4, 8, 1), tuple([0, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00001000(self):
      self.assertEqual(C_RHash(3, 8, 1), tuple([0, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00000100(self):
      self.assertEqual(C_RHash(2, 8, 1), tuple([0, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00000010(self):
      self.assertEqual(C_RHash(1, 8, 1), tuple([0, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00000001(self):
      self.assertEqual(C_RHash(0, 8, 1), tuple([0, 0, 0, 0, 0, 0, 0, 1]))

class HashTest_n8_r2(unittest.TestCase):
  def test_C_Hash_range_11000000(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100000(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100000(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010000(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010000(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110000(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001000(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001000(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101000(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011000(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000100(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000100(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100100(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010100(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001100(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000010(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000010(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100010(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010010(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001010(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000110(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 0], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000001(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 1], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000001(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 1], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100001(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 1], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010001(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 1], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001001(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 1], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000101(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 1], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000011(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 1], 2)
      self.assert_(C(8, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 0], 2)] = [1, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 0], 2)] = [1, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 0], 2)] = [0, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 0], 2)] = [1, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 0], 2)] = [0, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 0], 2)] = [0, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 0], 2)] = [1, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 0], 2)] = [0, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 0], 2)] = [0, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 0], 2)] = [0, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 0], 2)] = [1, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 0], 2)] = [0, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 0], 2)] = [0, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 0], 2)] = [0, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 0], 2)] = [0, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 0], 2)] = [1, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 0], 2)] = [0, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 0], 2)] = [0, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 0], 2)] = [0, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 0], 2)] = [0, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 0], 2)] = [0, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 1], 2)] = [1, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 1], 2)] = [0, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 1], 2)] = [0, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 1], 2)] = [0, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 1], 2)] = [0, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 1], 2)] = [0, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 1], 2)] = [0, 0, 0, 0, 0, 0, 1, 1]
    self.assertEqual(len(d), 28)

  def test_C_RHash_soundness_11000000(self):
      self.assertEqual(C_RHash(27, 8, 2), tuple([1, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10100000(self):
      self.assertEqual(C_RHash(26, 8, 2), tuple([1, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01100000(self):
      self.assertEqual(C_RHash(20, 8, 2), tuple([0, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10010000(self):
      self.assertEqual(C_RHash(25, 8, 2), tuple([1, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01010000(self):
      self.assertEqual(C_RHash(19, 8, 2), tuple([0, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00110000(self):
      self.assertEqual(C_RHash(14, 8, 2), tuple([0, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10001000(self):
      self.assertEqual(C_RHash(24, 8, 2), tuple([1, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01001000(self):
      self.assertEqual(C_RHash(18, 8, 2), tuple([0, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00101000(self):
      self.assertEqual(C_RHash(13, 8, 2), tuple([0, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00011000(self):
      self.assertEqual(C_RHash(9, 8, 2), tuple([0, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10000100(self):
      self.assertEqual(C_RHash(23, 8, 2), tuple([1, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01000100(self):
      self.assertEqual(C_RHash(17, 8, 2), tuple([0, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00100100(self):
      self.assertEqual(C_RHash(12, 8, 2), tuple([0, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00010100(self):
      self.assertEqual(C_RHash(8, 8, 2), tuple([0, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00001100(self):
      self.assertEqual(C_RHash(5, 8, 2), tuple([0, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10000010(self):
      self.assertEqual(C_RHash(22, 8, 2), tuple([1, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01000010(self):
      self.assertEqual(C_RHash(16, 8, 2), tuple([0, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00100010(self):
      self.assertEqual(C_RHash(11, 8, 2), tuple([0, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00010010(self):
      self.assertEqual(C_RHash(7, 8, 2), tuple([0, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00001010(self):
      self.assertEqual(C_RHash(4, 8, 2), tuple([0, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00000110(self):
      self.assertEqual(C_RHash(2, 8, 2), tuple([0, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10000001(self):
      self.assertEqual(C_RHash(21, 8, 2), tuple([1, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01000001(self):
      self.assertEqual(C_RHash(15, 8, 2), tuple([0, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00100001(self):
      self.assertEqual(C_RHash(10, 8, 2), tuple([0, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00010001(self):
      self.assertEqual(C_RHash(6, 8, 2), tuple([0, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00001001(self):
      self.assertEqual(C_RHash(3, 8, 2), tuple([0, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00000101(self):
      self.assertEqual(C_RHash(1, 8, 2), tuple([0, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00000011(self):
      self.assertEqual(C_RHash(0, 8, 2), tuple([0, 0, 0, 0, 0, 0, 1, 1]))

class HashTest_n8_r3(unittest.TestCase):
  def test_C_Hash_range_11100000(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010000(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110000(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110000(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001000(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101000(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101000(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011000(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011000(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111000(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000100(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100100(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100100(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010100(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010100(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110100(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001100(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001100(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101100(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011100(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000010(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100010(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100010(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010010(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010010(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110010(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001010(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001010(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101010(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011010(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000110(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000110(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100110(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010110(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001110(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 0], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000001(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100001(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100001(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010001(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010001(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110001(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001001(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001001(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101001(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011001(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000101(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000101(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100101(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010101(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001101(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000011(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000011(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100011(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010011(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001011(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000111(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 1], 3)
      self.assert_(C(8, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 0], 3)] = [1, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 0], 3)] = [1, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 0], 3)] = [1, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 0], 3)] = [0, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 0], 3)] = [1, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 0], 3)] = [1, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 0], 3)] = [0, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 0], 3)] = [1, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 0], 3)] = [0, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 0], 3)] = [0, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 0], 3)] = [1, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 0], 3)] = [1, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 0], 3)] = [0, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 0], 3)] = [1, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 0], 3)] = [0, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 0], 3)] = [0, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 0], 3)] = [1, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 0], 3)] = [0, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 0], 3)] = [0, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 0], 3)] = [0, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 0], 3)] = [1, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 0], 3)] = [1, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 0], 3)] = [0, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 0], 3)] = [1, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 0], 3)] = [0, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 0], 3)] = [0, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 0], 3)] = [1, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 0], 3)] = [0, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 0], 3)] = [0, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 0], 3)] = [0, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 0], 3)] = [1, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 0], 3)] = [0, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 0], 3)] = [0, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 0], 3)] = [0, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 0], 3)] = [0, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 1], 3)] = [1, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 1], 3)] = [1, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 1], 3)] = [0, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 1], 3)] = [1, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 1], 3)] = [0, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 1], 3)] = [0, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 1], 3)] = [1, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 1], 3)] = [0, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 1], 3)] = [0, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 1], 3)] = [0, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 1], 3)] = [1, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 1], 3)] = [0, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 1], 3)] = [0, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 1], 3)] = [0, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 1], 3)] = [0, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 1], 3)] = [1, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 1], 3)] = [0, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 1], 3)] = [0, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 1], 3)] = [0, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 1], 3)] = [0, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 1], 3)] = [0, 0, 0, 0, 0, 1, 1, 1]
    self.assertEqual(len(d), 56)

  def test_C_RHash_soundness_11100000(self):
      self.assertEqual(C_RHash(55, 8, 3), tuple([1, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11010000(self):
      self.assertEqual(C_RHash(54, 8, 3), tuple([1, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10110000(self):
      self.assertEqual(C_RHash(49, 8, 3), tuple([1, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01110000(self):
      self.assertEqual(C_RHash(34, 8, 3), tuple([0, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11001000(self):
      self.assertEqual(C_RHash(53, 8, 3), tuple([1, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10101000(self):
      self.assertEqual(C_RHash(48, 8, 3), tuple([1, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01101000(self):
      self.assertEqual(C_RHash(33, 8, 3), tuple([0, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10011000(self):
      self.assertEqual(C_RHash(44, 8, 3), tuple([1, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01011000(self):
      self.assertEqual(C_RHash(29, 8, 3), tuple([0, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00111000(self):
      self.assertEqual(C_RHash(19, 8, 3), tuple([0, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11000100(self):
      self.assertEqual(C_RHash(52, 8, 3), tuple([1, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10100100(self):
      self.assertEqual(C_RHash(47, 8, 3), tuple([1, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01100100(self):
      self.assertEqual(C_RHash(32, 8, 3), tuple([0, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10010100(self):
      self.assertEqual(C_RHash(43, 8, 3), tuple([1, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01010100(self):
      self.assertEqual(C_RHash(28, 8, 3), tuple([0, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00110100(self):
      self.assertEqual(C_RHash(18, 8, 3), tuple([0, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10001100(self):
      self.assertEqual(C_RHash(40, 8, 3), tuple([1, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01001100(self):
      self.assertEqual(C_RHash(25, 8, 3), tuple([0, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00101100(self):
      self.assertEqual(C_RHash(15, 8, 3), tuple([0, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00011100(self):
      self.assertEqual(C_RHash(9, 8, 3), tuple([0, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11000010(self):
      self.assertEqual(C_RHash(51, 8, 3), tuple([1, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10100010(self):
      self.assertEqual(C_RHash(46, 8, 3), tuple([1, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01100010(self):
      self.assertEqual(C_RHash(31, 8, 3), tuple([0, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10010010(self):
      self.assertEqual(C_RHash(42, 8, 3), tuple([1, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01010010(self):
      self.assertEqual(C_RHash(27, 8, 3), tuple([0, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00110010(self):
      self.assertEqual(C_RHash(17, 8, 3), tuple([0, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10001010(self):
      self.assertEqual(C_RHash(39, 8, 3), tuple([1, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01001010(self):
      self.assertEqual(C_RHash(24, 8, 3), tuple([0, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00101010(self):
      self.assertEqual(C_RHash(14, 8, 3), tuple([0, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00011010(self):
      self.assertEqual(C_RHash(8, 8, 3), tuple([0, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10000110(self):
      self.assertEqual(C_RHash(37, 8, 3), tuple([1, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01000110(self):
      self.assertEqual(C_RHash(22, 8, 3), tuple([0, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00100110(self):
      self.assertEqual(C_RHash(12, 8, 3), tuple([0, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00010110(self):
      self.assertEqual(C_RHash(6, 8, 3), tuple([0, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00001110(self):
      self.assertEqual(C_RHash(3, 8, 3), tuple([0, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11000001(self):
      self.assertEqual(C_RHash(50, 8, 3), tuple([1, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10100001(self):
      self.assertEqual(C_RHash(45, 8, 3), tuple([1, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01100001(self):
      self.assertEqual(C_RHash(30, 8, 3), tuple([0, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10010001(self):
      self.assertEqual(C_RHash(41, 8, 3), tuple([1, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01010001(self):
      self.assertEqual(C_RHash(26, 8, 3), tuple([0, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00110001(self):
      self.assertEqual(C_RHash(16, 8, 3), tuple([0, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10001001(self):
      self.assertEqual(C_RHash(38, 8, 3), tuple([1, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01001001(self):
      self.assertEqual(C_RHash(23, 8, 3), tuple([0, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00101001(self):
      self.assertEqual(C_RHash(13, 8, 3), tuple([0, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00011001(self):
      self.assertEqual(C_RHash(7, 8, 3), tuple([0, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10000101(self):
      self.assertEqual(C_RHash(36, 8, 3), tuple([1, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01000101(self):
      self.assertEqual(C_RHash(21, 8, 3), tuple([0, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00100101(self):
      self.assertEqual(C_RHash(11, 8, 3), tuple([0, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00010101(self):
      self.assertEqual(C_RHash(5, 8, 3), tuple([0, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00001101(self):
      self.assertEqual(C_RHash(2, 8, 3), tuple([0, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10000011(self):
      self.assertEqual(C_RHash(35, 8, 3), tuple([1, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01000011(self):
      self.assertEqual(C_RHash(20, 8, 3), tuple([0, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00100011(self):
      self.assertEqual(C_RHash(10, 8, 3), tuple([0, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00010011(self):
      self.assertEqual(C_RHash(4, 8, 3), tuple([0, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00001011(self):
      self.assertEqual(C_RHash(1, 8, 3), tuple([0, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00000111(self):
      self.assertEqual(C_RHash(0, 8, 3), tuple([0, 0, 0, 0, 0, 1, 1, 1]))

class HashTest_n8_r4(unittest.TestCase):
  def test_C_Hash_range_11110000(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101000(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011000(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111000(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111000(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100100(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010100(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110100(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110100(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001100(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101100(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101100(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011100(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011100(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111100(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100010(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010010(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110010(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110010(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001010(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101010(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101010(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011010(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011010(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111010(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000110(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100110(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100110(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010110(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010110(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110110(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001110(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001110(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101110(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011110(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 0], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100001(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010001(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110001(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110001(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001001(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101001(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101001(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011001(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011001(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111001(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000101(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100101(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100101(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010101(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010101(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110101(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001101(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001101(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101101(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011101(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000011(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100011(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100011(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010011(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010011(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110011(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001011(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001011(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101011(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011011(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000111(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000111(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100111(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010111(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001111(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 1], 4)
      self.assert_(C(8, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 0], 4)] = [1, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 0], 4)] = [1, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 0], 4)] = [1, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 0], 4)] = [1, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 0], 4)] = [0, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 0], 4)] = [1, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 0], 4)] = [1, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 0], 4)] = [1, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 0], 4)] = [0, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 0], 4)] = [1, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 0], 4)] = [1, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 0], 4)] = [0, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 0], 4)] = [1, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 0], 4)] = [0, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 0], 4)] = [0, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 0], 4)] = [1, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 0], 4)] = [1, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 0], 4)] = [1, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 0], 4)] = [0, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 0], 4)] = [1, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 0], 4)] = [1, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 0], 4)] = [0, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 0], 4)] = [1, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 0], 4)] = [0, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 0], 4)] = [0, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 0], 4)] = [1, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 0], 4)] = [1, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 0], 4)] = [0, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 0], 4)] = [1, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 0], 4)] = [0, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 0], 4)] = [0, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 0], 4)] = [1, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 0], 4)] = [0, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 0], 4)] = [0, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 0], 4)] = [0, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 1], 4)] = [1, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 1], 4)] = [1, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 1], 4)] = [1, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 1], 4)] = [0, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 1], 4)] = [1, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 1], 4)] = [1, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 1], 4)] = [0, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 1], 4)] = [1, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 1], 4)] = [0, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 1], 4)] = [0, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 1], 4)] = [1, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 1], 4)] = [1, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 1], 4)] = [0, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 1], 4)] = [1, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 1], 4)] = [0, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 1], 4)] = [0, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 1], 4)] = [1, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 1], 4)] = [0, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 1], 4)] = [0, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 1], 4)] = [0, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 1], 4)] = [1, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 1], 4)] = [1, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 1], 4)] = [0, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 1], 4)] = [1, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 1], 4)] = [0, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 1], 4)] = [0, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 1], 4)] = [1, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 1], 4)] = [0, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 1], 4)] = [0, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 1], 4)] = [0, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 1], 4)] = [1, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 1], 4)] = [0, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 1], 4)] = [0, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 1], 4)] = [0, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 1], 4)] = [0, 0, 0, 0, 1, 1, 1, 1]
    self.assertEqual(len(d), 70)

  def test_C_RHash_soundness_11110000(self):
      self.assertEqual(C_RHash(69, 8, 4), tuple([1, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11101000(self):
      self.assertEqual(C_RHash(68, 8, 4), tuple([1, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11011000(self):
      self.assertEqual(C_RHash(64, 8, 4), tuple([1, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10111000(self):
      self.assertEqual(C_RHash(54, 8, 4), tuple([1, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01111000(self):
      self.assertEqual(C_RHash(34, 8, 4), tuple([0, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11100100(self):
      self.assertEqual(C_RHash(67, 8, 4), tuple([1, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11010100(self):
      self.assertEqual(C_RHash(63, 8, 4), tuple([1, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10110100(self):
      self.assertEqual(C_RHash(53, 8, 4), tuple([1, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01110100(self):
      self.assertEqual(C_RHash(33, 8, 4), tuple([0, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11001100(self):
      self.assertEqual(C_RHash(60, 8, 4), tuple([1, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10101100(self):
      self.assertEqual(C_RHash(50, 8, 4), tuple([1, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01101100(self):
      self.assertEqual(C_RHash(30, 8, 4), tuple([0, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10011100(self):
      self.assertEqual(C_RHash(44, 8, 4), tuple([1, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01011100(self):
      self.assertEqual(C_RHash(24, 8, 4), tuple([0, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00111100(self):
      self.assertEqual(C_RHash(14, 8, 4), tuple([0, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11100010(self):
      self.assertEqual(C_RHash(66, 8, 4), tuple([1, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11010010(self):
      self.assertEqual(C_RHash(62, 8, 4), tuple([1, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10110010(self):
      self.assertEqual(C_RHash(52, 8, 4), tuple([1, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01110010(self):
      self.assertEqual(C_RHash(32, 8, 4), tuple([0, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11001010(self):
      self.assertEqual(C_RHash(59, 8, 4), tuple([1, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10101010(self):
      self.assertEqual(C_RHash(49, 8, 4), tuple([1, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01101010(self):
      self.assertEqual(C_RHash(29, 8, 4), tuple([0, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10011010(self):
      self.assertEqual(C_RHash(43, 8, 4), tuple([1, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01011010(self):
      self.assertEqual(C_RHash(23, 8, 4), tuple([0, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00111010(self):
      self.assertEqual(C_RHash(13, 8, 4), tuple([0, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11000110(self):
      self.assertEqual(C_RHash(57, 8, 4), tuple([1, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10100110(self):
      self.assertEqual(C_RHash(47, 8, 4), tuple([1, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01100110(self):
      self.assertEqual(C_RHash(27, 8, 4), tuple([0, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10010110(self):
      self.assertEqual(C_RHash(41, 8, 4), tuple([1, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01010110(self):
      self.assertEqual(C_RHash(21, 8, 4), tuple([0, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00110110(self):
      self.assertEqual(C_RHash(11, 8, 4), tuple([0, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10001110(self):
      self.assertEqual(C_RHash(38, 8, 4), tuple([1, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01001110(self):
      self.assertEqual(C_RHash(18, 8, 4), tuple([0, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00101110(self):
      self.assertEqual(C_RHash(8, 8, 4), tuple([0, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00011110(self):
      self.assertEqual(C_RHash(4, 8, 4), tuple([0, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11100001(self):
      self.assertEqual(C_RHash(65, 8, 4), tuple([1, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11010001(self):
      self.assertEqual(C_RHash(61, 8, 4), tuple([1, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10110001(self):
      self.assertEqual(C_RHash(51, 8, 4), tuple([1, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01110001(self):
      self.assertEqual(C_RHash(31, 8, 4), tuple([0, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11001001(self):
      self.assertEqual(C_RHash(58, 8, 4), tuple([1, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10101001(self):
      self.assertEqual(C_RHash(48, 8, 4), tuple([1, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01101001(self):
      self.assertEqual(C_RHash(28, 8, 4), tuple([0, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10011001(self):
      self.assertEqual(C_RHash(42, 8, 4), tuple([1, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01011001(self):
      self.assertEqual(C_RHash(22, 8, 4), tuple([0, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00111001(self):
      self.assertEqual(C_RHash(12, 8, 4), tuple([0, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11000101(self):
      self.assertEqual(C_RHash(56, 8, 4), tuple([1, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10100101(self):
      self.assertEqual(C_RHash(46, 8, 4), tuple([1, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01100101(self):
      self.assertEqual(C_RHash(26, 8, 4), tuple([0, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10010101(self):
      self.assertEqual(C_RHash(40, 8, 4), tuple([1, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01010101(self):
      self.assertEqual(C_RHash(20, 8, 4), tuple([0, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00110101(self):
      self.assertEqual(C_RHash(10, 8, 4), tuple([0, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10001101(self):
      self.assertEqual(C_RHash(37, 8, 4), tuple([1, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01001101(self):
      self.assertEqual(C_RHash(17, 8, 4), tuple([0, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00101101(self):
      self.assertEqual(C_RHash(7, 8, 4), tuple([0, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00011101(self):
      self.assertEqual(C_RHash(3, 8, 4), tuple([0, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11000011(self):
      self.assertEqual(C_RHash(55, 8, 4), tuple([1, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10100011(self):
      self.assertEqual(C_RHash(45, 8, 4), tuple([1, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01100011(self):
      self.assertEqual(C_RHash(25, 8, 4), tuple([0, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10010011(self):
      self.assertEqual(C_RHash(39, 8, 4), tuple([1, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01010011(self):
      self.assertEqual(C_RHash(19, 8, 4), tuple([0, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00110011(self):
      self.assertEqual(C_RHash(9, 8, 4), tuple([0, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10001011(self):
      self.assertEqual(C_RHash(36, 8, 4), tuple([1, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01001011(self):
      self.assertEqual(C_RHash(16, 8, 4), tuple([0, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00101011(self):
      self.assertEqual(C_RHash(6, 8, 4), tuple([0, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00011011(self):
      self.assertEqual(C_RHash(2, 8, 4), tuple([0, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10000111(self):
      self.assertEqual(C_RHash(35, 8, 4), tuple([1, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01000111(self):
      self.assertEqual(C_RHash(15, 8, 4), tuple([0, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00100111(self):
      self.assertEqual(C_RHash(5, 8, 4), tuple([0, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00010111(self):
      self.assertEqual(C_RHash(1, 8, 4), tuple([0, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00001111(self):
      self.assertEqual(C_RHash(0, 8, 4), tuple([0, 0, 0, 0, 1, 1, 1, 1]))

class HashTest_n8_r5(unittest.TestCase):
  def test_C_Hash_range_11111000(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110100(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101100(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011100(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111100(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111100(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110010(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101010(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011010(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111010(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111010(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100110(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010110(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110110(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110110(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001110(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101110(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101110(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011110(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011110(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111110(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 0], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110001(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101001(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011001(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111001(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111001(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100101(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010101(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110101(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110101(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001101(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101101(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101101(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011101(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011101(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111101(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100011(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010011(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110011(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110011(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001011(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101011(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101011(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011011(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011011(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111011(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000111(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100111(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100111(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010111(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010111(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110111(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001111(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001111(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101111(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011111(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 1], 5)
      self.assert_(C(8, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 0], 5)] = [1, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 0], 5)] = [1, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 0], 5)] = [1, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 0], 5)] = [1, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 0], 5)] = [1, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 0], 5)] = [0, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 0], 5)] = [1, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 0], 5)] = [1, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 0], 5)] = [1, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 0], 5)] = [1, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 0], 5)] = [0, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 0], 5)] = [1, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 0], 5)] = [1, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 0], 5)] = [1, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 0], 5)] = [0, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 0], 5)] = [1, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 0], 5)] = [1, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 0], 5)] = [0, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 0], 5)] = [1, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 0], 5)] = [0, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 0], 5)] = [0, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 1], 5)] = [1, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 1], 5)] = [1, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 1], 5)] = [1, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 1], 5)] = [1, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 1], 5)] = [0, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 1], 5)] = [1, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 1], 5)] = [1, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 1], 5)] = [1, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 1], 5)] = [0, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 1], 5)] = [1, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 1], 5)] = [1, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 1], 5)] = [0, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 1], 5)] = [1, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 1], 5)] = [0, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 1], 5)] = [0, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 1], 5)] = [1, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 1], 5)] = [1, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 1], 5)] = [1, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 1], 5)] = [0, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 1], 5)] = [1, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 1], 5)] = [1, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 1], 5)] = [0, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 1], 5)] = [1, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 1], 5)] = [0, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 1], 5)] = [0, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 1], 5)] = [1, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 1], 5)] = [1, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 1], 5)] = [0, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 1], 5)] = [1, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 1], 5)] = [0, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 1], 5)] = [0, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 1], 5)] = [1, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 1], 5)] = [0, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 1], 5)] = [0, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 1], 5)] = [0, 0, 0, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 56)

  def test_C_RHash_soundness_11111000(self):
      self.assertEqual(C_RHash(55, 8, 5), tuple([1, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11110100(self):
      self.assertEqual(C_RHash(54, 8, 5), tuple([1, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11101100(self):
      self.assertEqual(C_RHash(51, 8, 5), tuple([1, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11011100(self):
      self.assertEqual(C_RHash(45, 8, 5), tuple([1, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10111100(self):
      self.assertEqual(C_RHash(35, 8, 5), tuple([1, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01111100(self):
      self.assertEqual(C_RHash(20, 8, 5), tuple([0, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11110010(self):
      self.assertEqual(C_RHash(53, 8, 5), tuple([1, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11101010(self):
      self.assertEqual(C_RHash(50, 8, 5), tuple([1, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11011010(self):
      self.assertEqual(C_RHash(44, 8, 5), tuple([1, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10111010(self):
      self.assertEqual(C_RHash(34, 8, 5), tuple([1, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01111010(self):
      self.assertEqual(C_RHash(19, 8, 5), tuple([0, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11100110(self):
      self.assertEqual(C_RHash(48, 8, 5), tuple([1, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11010110(self):
      self.assertEqual(C_RHash(42, 8, 5), tuple([1, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10110110(self):
      self.assertEqual(C_RHash(32, 8, 5), tuple([1, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01110110(self):
      self.assertEqual(C_RHash(17, 8, 5), tuple([0, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11001110(self):
      self.assertEqual(C_RHash(39, 8, 5), tuple([1, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10101110(self):
      self.assertEqual(C_RHash(29, 8, 5), tuple([1, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01101110(self):
      self.assertEqual(C_RHash(14, 8, 5), tuple([0, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10011110(self):
      self.assertEqual(C_RHash(25, 8, 5), tuple([1, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01011110(self):
      self.assertEqual(C_RHash(10, 8, 5), tuple([0, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00111110(self):
      self.assertEqual(C_RHash(5, 8, 5), tuple([0, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11110001(self):
      self.assertEqual(C_RHash(52, 8, 5), tuple([1, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11101001(self):
      self.assertEqual(C_RHash(49, 8, 5), tuple([1, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11011001(self):
      self.assertEqual(C_RHash(43, 8, 5), tuple([1, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10111001(self):
      self.assertEqual(C_RHash(33, 8, 5), tuple([1, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01111001(self):
      self.assertEqual(C_RHash(18, 8, 5), tuple([0, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11100101(self):
      self.assertEqual(C_RHash(47, 8, 5), tuple([1, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11010101(self):
      self.assertEqual(C_RHash(41, 8, 5), tuple([1, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10110101(self):
      self.assertEqual(C_RHash(31, 8, 5), tuple([1, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01110101(self):
      self.assertEqual(C_RHash(16, 8, 5), tuple([0, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11001101(self):
      self.assertEqual(C_RHash(38, 8, 5), tuple([1, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10101101(self):
      self.assertEqual(C_RHash(28, 8, 5), tuple([1, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01101101(self):
      self.assertEqual(C_RHash(13, 8, 5), tuple([0, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10011101(self):
      self.assertEqual(C_RHash(24, 8, 5), tuple([1, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01011101(self):
      self.assertEqual(C_RHash(9, 8, 5), tuple([0, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00111101(self):
      self.assertEqual(C_RHash(4, 8, 5), tuple([0, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11100011(self):
      self.assertEqual(C_RHash(46, 8, 5), tuple([1, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11010011(self):
      self.assertEqual(C_RHash(40, 8, 5), tuple([1, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10110011(self):
      self.assertEqual(C_RHash(30, 8, 5), tuple([1, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01110011(self):
      self.assertEqual(C_RHash(15, 8, 5), tuple([0, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11001011(self):
      self.assertEqual(C_RHash(37, 8, 5), tuple([1, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10101011(self):
      self.assertEqual(C_RHash(27, 8, 5), tuple([1, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01101011(self):
      self.assertEqual(C_RHash(12, 8, 5), tuple([0, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10011011(self):
      self.assertEqual(C_RHash(23, 8, 5), tuple([1, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01011011(self):
      self.assertEqual(C_RHash(8, 8, 5), tuple([0, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00111011(self):
      self.assertEqual(C_RHash(3, 8, 5), tuple([0, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11000111(self):
      self.assertEqual(C_RHash(36, 8, 5), tuple([1, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10100111(self):
      self.assertEqual(C_RHash(26, 8, 5), tuple([1, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01100111(self):
      self.assertEqual(C_RHash(11, 8, 5), tuple([0, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10010111(self):
      self.assertEqual(C_RHash(22, 8, 5), tuple([1, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01010111(self):
      self.assertEqual(C_RHash(7, 8, 5), tuple([0, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00110111(self):
      self.assertEqual(C_RHash(2, 8, 5), tuple([0, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10001111(self):
      self.assertEqual(C_RHash(21, 8, 5), tuple([1, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01001111(self):
      self.assertEqual(C_RHash(6, 8, 5), tuple([0, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00101111(self):
      self.assertEqual(C_RHash(1, 8, 5), tuple([0, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00011111(self):
      self.assertEqual(C_RHash(0, 8, 5), tuple([0, 0, 0, 1, 1, 1, 1, 1]))

class HashTest_n8_r6(unittest.TestCase):
  def test_C_Hash_range_11111100(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111010(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110110(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101110(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011110(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111110(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 0], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111110(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 0], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111001(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110101(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101101(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011101(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111101(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111101(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110011(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101011(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011011(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111011(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111011(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100111(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010111(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110111(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110111(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001111(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101111(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101111(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011111(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011111(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111111(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 1], 6)
      self.assert_(C(8, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 0], 6)] = [1, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 0], 6)] = [1, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 0], 6)] = [1, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 0], 6)] = [1, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 0], 6)] = [1, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 0], 6)] = [1, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 0], 6)] = [0, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 1], 6)] = [1, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 1], 6)] = [1, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 1], 6)] = [1, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 1], 6)] = [1, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 1], 6)] = [1, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 1], 6)] = [0, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 1], 6)] = [1, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 1], 6)] = [1, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 1], 6)] = [1, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 1], 6)] = [1, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 1], 6)] = [0, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 1], 6)] = [1, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 1], 6)] = [1, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 1], 6)] = [1, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 1], 6)] = [0, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 1], 6)] = [1, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 1], 6)] = [1, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 1], 6)] = [0, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 1], 6)] = [1, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 1], 6)] = [0, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 1], 6)] = [0, 0, 1, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 28)

  def test_C_RHash_soundness_11111100(self):
      self.assertEqual(C_RHash(27, 8, 6), tuple([1, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11111010(self):
      self.assertEqual(C_RHash(26, 8, 6), tuple([1, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11110110(self):
      self.assertEqual(C_RHash(24, 8, 6), tuple([1, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11101110(self):
      self.assertEqual(C_RHash(21, 8, 6), tuple([1, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11011110(self):
      self.assertEqual(C_RHash(17, 8, 6), tuple([1, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10111110(self):
      self.assertEqual(C_RHash(12, 8, 6), tuple([1, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01111110(self):
      self.assertEqual(C_RHash(6, 8, 6), tuple([0, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11111001(self):
      self.assertEqual(C_RHash(25, 8, 6), tuple([1, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11110101(self):
      self.assertEqual(C_RHash(23, 8, 6), tuple([1, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11101101(self):
      self.assertEqual(C_RHash(20, 8, 6), tuple([1, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11011101(self):
      self.assertEqual(C_RHash(16, 8, 6), tuple([1, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10111101(self):
      self.assertEqual(C_RHash(11, 8, 6), tuple([1, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01111101(self):
      self.assertEqual(C_RHash(5, 8, 6), tuple([0, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11110011(self):
      self.assertEqual(C_RHash(22, 8, 6), tuple([1, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11101011(self):
      self.assertEqual(C_RHash(19, 8, 6), tuple([1, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11011011(self):
      self.assertEqual(C_RHash(15, 8, 6), tuple([1, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10111011(self):
      self.assertEqual(C_RHash(10, 8, 6), tuple([1, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01111011(self):
      self.assertEqual(C_RHash(4, 8, 6), tuple([0, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11100111(self):
      self.assertEqual(C_RHash(18, 8, 6), tuple([1, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11010111(self):
      self.assertEqual(C_RHash(14, 8, 6), tuple([1, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10110111(self):
      self.assertEqual(C_RHash(9, 8, 6), tuple([1, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01110111(self):
      self.assertEqual(C_RHash(3, 8, 6), tuple([0, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11001111(self):
      self.assertEqual(C_RHash(13, 8, 6), tuple([1, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10101111(self):
      self.assertEqual(C_RHash(8, 8, 6), tuple([1, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01101111(self):
      self.assertEqual(C_RHash(2, 8, 6), tuple([0, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10011111(self):
      self.assertEqual(C_RHash(7, 8, 6), tuple([1, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01011111(self):
      self.assertEqual(C_RHash(1, 8, 6), tuple([0, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00111111(self):
      self.assertEqual(C_RHash(0, 8, 6), tuple([0, 0, 1, 1, 1, 1, 1, 1]))

class HashTest_n8_r7(unittest.TestCase):
  def test_C_Hash_range_11111110(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(8, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111101(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(8, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111011(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(8, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110111(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(8, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101111(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(8, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011111(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(8, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111111(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 1], 7)
      self.assert_(C(8, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111111(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 1], 7)
      self.assert_(C(8, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 0], 7)] = [1, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 1], 7)] = [1, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 1], 7)] = [1, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 1], 7)] = [1, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 1], 7)] = [1, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 1], 7)] = [1, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 1], 7)] = [1, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 1], 7)] = [0, 1, 1, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 8)

  def test_C_RHash_soundness_11111110(self):
      self.assertEqual(C_RHash(7, 8, 7), tuple([1, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11111101(self):
      self.assertEqual(C_RHash(6, 8, 7), tuple([1, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11111011(self):
      self.assertEqual(C_RHash(5, 8, 7), tuple([1, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11110111(self):
      self.assertEqual(C_RHash(4, 8, 7), tuple([1, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11101111(self):
      self.assertEqual(C_RHash(3, 8, 7), tuple([1, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11011111(self):
      self.assertEqual(C_RHash(2, 8, 7), tuple([1, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10111111(self):
      self.assertEqual(C_RHash(1, 8, 7), tuple([1, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01111111(self):
      self.assertEqual(C_RHash(0, 8, 7), tuple([0, 1, 1, 1, 1, 1, 1, 1]))

class HashTest_n9_r1(unittest.TestCase):
  def test_C_Hash_range_100000000(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0], 1)
      self.assert_(C(9, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010000000(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0], 1)
      self.assert_(C(9, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001000000(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0], 1)
      self.assert_(C(9, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000100000(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0], 1)
      self.assert_(C(9, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000010000(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0], 1)
      self.assert_(C(9, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000001000(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0], 1)
      self.assert_(C(9, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000000100(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0], 1)
      self.assert_(C(9, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000000010(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0], 1)
      self.assert_(C(9, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000000001(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1], 1)
      self.assert_(C(9, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0], 1)] = [1, 0, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0], 1)] = [0, 1, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0], 1)] = [0, 0, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0], 1)] = [0, 0, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0], 1)] = [0, 0, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0], 1)] = [0, 0, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0], 1)] = [0, 0, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0], 1)] = [0, 0, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1], 1)] = [0, 0, 0, 0, 0, 0, 0, 0, 1]
    self.assertEqual(len(d), 9)

  def test_C_RHash_soundness_100000000(self):
      self.assertEqual(C_RHash(8, 9, 1), tuple([1, 0, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_010000000(self):
      self.assertEqual(C_RHash(7, 9, 1), tuple([0, 1, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_001000000(self):
      self.assertEqual(C_RHash(6, 9, 1), tuple([0, 0, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_000100000(self):
      self.assertEqual(C_RHash(5, 9, 1), tuple([0, 0, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_000010000(self):
      self.assertEqual(C_RHash(4, 9, 1), tuple([0, 0, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_000001000(self):
      self.assertEqual(C_RHash(3, 9, 1), tuple([0, 0, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_000000100(self):
      self.assertEqual(C_RHash(2, 9, 1), tuple([0, 0, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_000000010(self):
      self.assertEqual(C_RHash(1, 9, 1), tuple([0, 0, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_000000001(self):
      self.assertEqual(C_RHash(0, 9, 1), tuple([0, 0, 0, 0, 0, 0, 0, 0, 1]))

class HashTest_n9_r2(unittest.TestCase):
  def test_C_Hash_range_110000000(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101000000(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011000000(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100100000(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010100000(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001100000(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100010000(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010010000(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001010000(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000110000(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100001000(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010001000(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001001000(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000101000(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000011000(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100000100(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010000100(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001000100(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000100100(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000010100(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000001100(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100000010(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010000010(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001000010(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000100010(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000010010(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000001010(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000000110(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100000001(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010000001(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001000001(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000100001(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000010001(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000001001(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000000101(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000000011(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1], 2)
      self.assert_(C(9, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0], 2)] = [1, 1, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0], 2)] = [1, 0, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0], 2)] = [0, 1, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0], 2)] = [1, 0, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0], 2)] = [0, 1, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0], 2)] = [0, 0, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0], 2)] = [1, 0, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0], 2)] = [0, 1, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0], 2)] = [0, 0, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0], 2)] = [0, 0, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0], 2)] = [1, 0, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0], 2)] = [0, 1, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0], 2)] = [0, 0, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0], 2)] = [0, 0, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0], 2)] = [0, 0, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0], 2)] = [1, 0, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0], 2)] = [0, 1, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0], 2)] = [0, 0, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0], 2)] = [0, 0, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0], 2)] = [0, 0, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0], 2)] = [0, 0, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0], 2)] = [1, 0, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0], 2)] = [0, 1, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0], 2)] = [0, 0, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0], 2)] = [0, 0, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0], 2)] = [0, 0, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0], 2)] = [0, 0, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0], 2)] = [0, 0, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1], 2)] = [1, 0, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1], 2)] = [0, 1, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1], 2)] = [0, 0, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1], 2)] = [0, 0, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1], 2)] = [0, 0, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1], 2)] = [0, 0, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1], 2)] = [0, 0, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1], 2)] = [0, 0, 0, 0, 0, 0, 0, 1, 1]
    self.assertEqual(len(d), 36)

  def test_C_RHash_soundness_110000000(self):
      self.assertEqual(C_RHash(35, 9, 2), tuple([1, 1, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_101000000(self):
      self.assertEqual(C_RHash(34, 9, 2), tuple([1, 0, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_011000000(self):
      self.assertEqual(C_RHash(27, 9, 2), tuple([0, 1, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_100100000(self):
      self.assertEqual(C_RHash(33, 9, 2), tuple([1, 0, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_010100000(self):
      self.assertEqual(C_RHash(26, 9, 2), tuple([0, 1, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_001100000(self):
      self.assertEqual(C_RHash(20, 9, 2), tuple([0, 0, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_100010000(self):
      self.assertEqual(C_RHash(32, 9, 2), tuple([1, 0, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_010010000(self):
      self.assertEqual(C_RHash(25, 9, 2), tuple([0, 1, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_001010000(self):
      self.assertEqual(C_RHash(19, 9, 2), tuple([0, 0, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_000110000(self):
      self.assertEqual(C_RHash(14, 9, 2), tuple([0, 0, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_100001000(self):
      self.assertEqual(C_RHash(31, 9, 2), tuple([1, 0, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_010001000(self):
      self.assertEqual(C_RHash(24, 9, 2), tuple([0, 1, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_001001000(self):
      self.assertEqual(C_RHash(18, 9, 2), tuple([0, 0, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_000101000(self):
      self.assertEqual(C_RHash(13, 9, 2), tuple([0, 0, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_000011000(self):
      self.assertEqual(C_RHash(9, 9, 2), tuple([0, 0, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_100000100(self):
      self.assertEqual(C_RHash(30, 9, 2), tuple([1, 0, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_010000100(self):
      self.assertEqual(C_RHash(23, 9, 2), tuple([0, 1, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_001000100(self):
      self.assertEqual(C_RHash(17, 9, 2), tuple([0, 0, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_000100100(self):
      self.assertEqual(C_RHash(12, 9, 2), tuple([0, 0, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_000010100(self):
      self.assertEqual(C_RHash(8, 9, 2), tuple([0, 0, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_000001100(self):
      self.assertEqual(C_RHash(5, 9, 2), tuple([0, 0, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_100000010(self):
      self.assertEqual(C_RHash(29, 9, 2), tuple([1, 0, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_010000010(self):
      self.assertEqual(C_RHash(22, 9, 2), tuple([0, 1, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_001000010(self):
      self.assertEqual(C_RHash(16, 9, 2), tuple([0, 0, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_000100010(self):
      self.assertEqual(C_RHash(11, 9, 2), tuple([0, 0, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_000010010(self):
      self.assertEqual(C_RHash(7, 9, 2), tuple([0, 0, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_000001010(self):
      self.assertEqual(C_RHash(4, 9, 2), tuple([0, 0, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_000000110(self):
      self.assertEqual(C_RHash(2, 9, 2), tuple([0, 0, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_100000001(self):
      self.assertEqual(C_RHash(28, 9, 2), tuple([1, 0, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_010000001(self):
      self.assertEqual(C_RHash(21, 9, 2), tuple([0, 1, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_001000001(self):
      self.assertEqual(C_RHash(15, 9, 2), tuple([0, 0, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_000100001(self):
      self.assertEqual(C_RHash(10, 9, 2), tuple([0, 0, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_000010001(self):
      self.assertEqual(C_RHash(6, 9, 2), tuple([0, 0, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_000001001(self):
      self.assertEqual(C_RHash(3, 9, 2), tuple([0, 0, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_000000101(self):
      self.assertEqual(C_RHash(1, 9, 2), tuple([0, 0, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_000000011(self):
      self.assertEqual(C_RHash(0, 9, 2), tuple([0, 0, 0, 0, 0, 0, 0, 1, 1]))

class HashTest_n9_r3(unittest.TestCase):
  def test_C_Hash_range_111000000(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110100000(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101100000(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011100000(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110010000(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101010000(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011010000(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100110000(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010110000(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001110000(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110001000(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101001000(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011001000(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100101000(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010101000(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001101000(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100011000(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010011000(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001011000(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000111000(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110000100(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101000100(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011000100(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100100100(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010100100(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001100100(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100010100(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010010100(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001010100(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000110100(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100001100(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010001100(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001001100(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000101100(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000011100(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110000010(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101000010(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011000010(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100100010(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010100010(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001100010(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100010010(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010010010(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001010010(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000110010(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100001010(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010001010(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001001010(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000101010(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000011010(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100000110(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010000110(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001000110(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000100110(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000010110(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000001110(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110000001(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101000001(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011000001(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100100001(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010100001(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001100001(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100010001(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010010001(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001010001(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000110001(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100001001(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010001001(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001001001(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000101001(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000011001(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100000101(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010000101(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001000101(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000100101(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000010101(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000001101(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100000011(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010000011(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001000011(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000100011(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000010011(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000001011(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000000111(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1], 3)
      self.assert_(C(9, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0], 3)] = [1, 1, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0], 3)] = [1, 1, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0], 3)] = [1, 0, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0], 3)] = [0, 1, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0], 3)] = [1, 1, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0], 3)] = [1, 0, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0], 3)] = [0, 1, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0], 3)] = [1, 0, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0], 3)] = [0, 1, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0], 3)] = [0, 0, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0], 3)] = [1, 1, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0], 3)] = [1, 0, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0], 3)] = [0, 1, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0], 3)] = [1, 0, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0], 3)] = [0, 1, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0], 3)] = [0, 0, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0], 3)] = [1, 0, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0], 3)] = [0, 1, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0], 3)] = [0, 0, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0], 3)] = [0, 0, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0], 3)] = [1, 1, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0], 3)] = [1, 0, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0], 3)] = [0, 1, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0], 3)] = [1, 0, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0], 3)] = [0, 1, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0], 3)] = [0, 0, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0], 3)] = [1, 0, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0], 3)] = [0, 1, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0], 3)] = [0, 0, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0], 3)] = [0, 0, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0], 3)] = [1, 0, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0], 3)] = [0, 1, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0], 3)] = [0, 0, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0], 3)] = [0, 0, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0], 3)] = [0, 0, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0], 3)] = [1, 1, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0], 3)] = [1, 0, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0], 3)] = [0, 1, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0], 3)] = [1, 0, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0], 3)] = [0, 1, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0], 3)] = [0, 0, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0], 3)] = [1, 0, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0], 3)] = [0, 1, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0], 3)] = [0, 0, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0], 3)] = [0, 0, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0], 3)] = [1, 0, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0], 3)] = [0, 1, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0], 3)] = [0, 0, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0], 3)] = [0, 0, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0], 3)] = [0, 0, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0], 3)] = [1, 0, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0], 3)] = [0, 1, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0], 3)] = [0, 0, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0], 3)] = [0, 0, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0], 3)] = [0, 0, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0], 3)] = [0, 0, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1], 3)] = [1, 1, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1], 3)] = [1, 0, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1], 3)] = [0, 1, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1], 3)] = [1, 0, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1], 3)] = [0, 1, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1], 3)] = [0, 0, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1], 3)] = [1, 0, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1], 3)] = [0, 1, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1], 3)] = [0, 0, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1], 3)] = [0, 0, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1], 3)] = [1, 0, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1], 3)] = [0, 1, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1], 3)] = [0, 0, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1], 3)] = [0, 0, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1], 3)] = [0, 0, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1], 3)] = [1, 0, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1], 3)] = [0, 1, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1], 3)] = [0, 0, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1], 3)] = [0, 0, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1], 3)] = [0, 0, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1], 3)] = [0, 0, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1], 3)] = [1, 0, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1], 3)] = [0, 1, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1], 3)] = [0, 0, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1], 3)] = [0, 0, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1], 3)] = [0, 0, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1], 3)] = [0, 0, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1], 3)] = [0, 0, 0, 0, 0, 0, 1, 1, 1]
    self.assertEqual(len(d), 84)

  def test_C_RHash_soundness_111000000(self):
      self.assertEqual(C_RHash(83, 9, 3), tuple([1, 1, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_110100000(self):
      self.assertEqual(C_RHash(82, 9, 3), tuple([1, 1, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_101100000(self):
      self.assertEqual(C_RHash(76, 9, 3), tuple([1, 0, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_011100000(self):
      self.assertEqual(C_RHash(55, 9, 3), tuple([0, 1, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_110010000(self):
      self.assertEqual(C_RHash(81, 9, 3), tuple([1, 1, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_101010000(self):
      self.assertEqual(C_RHash(75, 9, 3), tuple([1, 0, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_011010000(self):
      self.assertEqual(C_RHash(54, 9, 3), tuple([0, 1, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_100110000(self):
      self.assertEqual(C_RHash(70, 9, 3), tuple([1, 0, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_010110000(self):
      self.assertEqual(C_RHash(49, 9, 3), tuple([0, 1, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_001110000(self):
      self.assertEqual(C_RHash(34, 9, 3), tuple([0, 0, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_110001000(self):
      self.assertEqual(C_RHash(80, 9, 3), tuple([1, 1, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_101001000(self):
      self.assertEqual(C_RHash(74, 9, 3), tuple([1, 0, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_011001000(self):
      self.assertEqual(C_RHash(53, 9, 3), tuple([0, 1, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_100101000(self):
      self.assertEqual(C_RHash(69, 9, 3), tuple([1, 0, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_010101000(self):
      self.assertEqual(C_RHash(48, 9, 3), tuple([0, 1, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_001101000(self):
      self.assertEqual(C_RHash(33, 9, 3), tuple([0, 0, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_100011000(self):
      self.assertEqual(C_RHash(65, 9, 3), tuple([1, 0, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_010011000(self):
      self.assertEqual(C_RHash(44, 9, 3), tuple([0, 1, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_001011000(self):
      self.assertEqual(C_RHash(29, 9, 3), tuple([0, 0, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_000111000(self):
      self.assertEqual(C_RHash(19, 9, 3), tuple([0, 0, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_110000100(self):
      self.assertEqual(C_RHash(79, 9, 3), tuple([1, 1, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_101000100(self):
      self.assertEqual(C_RHash(73, 9, 3), tuple([1, 0, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_011000100(self):
      self.assertEqual(C_RHash(52, 9, 3), tuple([0, 1, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_100100100(self):
      self.assertEqual(C_RHash(68, 9, 3), tuple([1, 0, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_010100100(self):
      self.assertEqual(C_RHash(47, 9, 3), tuple([0, 1, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_001100100(self):
      self.assertEqual(C_RHash(32, 9, 3), tuple([0, 0, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_100010100(self):
      self.assertEqual(C_RHash(64, 9, 3), tuple([1, 0, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_010010100(self):
      self.assertEqual(C_RHash(43, 9, 3), tuple([0, 1, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_001010100(self):
      self.assertEqual(C_RHash(28, 9, 3), tuple([0, 0, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_000110100(self):
      self.assertEqual(C_RHash(18, 9, 3), tuple([0, 0, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_100001100(self):
      self.assertEqual(C_RHash(61, 9, 3), tuple([1, 0, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_010001100(self):
      self.assertEqual(C_RHash(40, 9, 3), tuple([0, 1, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_001001100(self):
      self.assertEqual(C_RHash(25, 9, 3), tuple([0, 0, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_000101100(self):
      self.assertEqual(C_RHash(15, 9, 3), tuple([0, 0, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_000011100(self):
      self.assertEqual(C_RHash(9, 9, 3), tuple([0, 0, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_110000010(self):
      self.assertEqual(C_RHash(78, 9, 3), tuple([1, 1, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_101000010(self):
      self.assertEqual(C_RHash(72, 9, 3), tuple([1, 0, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_011000010(self):
      self.assertEqual(C_RHash(51, 9, 3), tuple([0, 1, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_100100010(self):
      self.assertEqual(C_RHash(67, 9, 3), tuple([1, 0, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_010100010(self):
      self.assertEqual(C_RHash(46, 9, 3), tuple([0, 1, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_001100010(self):
      self.assertEqual(C_RHash(31, 9, 3), tuple([0, 0, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_100010010(self):
      self.assertEqual(C_RHash(63, 9, 3), tuple([1, 0, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_010010010(self):
      self.assertEqual(C_RHash(42, 9, 3), tuple([0, 1, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_001010010(self):
      self.assertEqual(C_RHash(27, 9, 3), tuple([0, 0, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_000110010(self):
      self.assertEqual(C_RHash(17, 9, 3), tuple([0, 0, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_100001010(self):
      self.assertEqual(C_RHash(60, 9, 3), tuple([1, 0, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_010001010(self):
      self.assertEqual(C_RHash(39, 9, 3), tuple([0, 1, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_001001010(self):
      self.assertEqual(C_RHash(24, 9, 3), tuple([0, 0, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_000101010(self):
      self.assertEqual(C_RHash(14, 9, 3), tuple([0, 0, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_000011010(self):
      self.assertEqual(C_RHash(8, 9, 3), tuple([0, 0, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_100000110(self):
      self.assertEqual(C_RHash(58, 9, 3), tuple([1, 0, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_010000110(self):
      self.assertEqual(C_RHash(37, 9, 3), tuple([0, 1, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_001000110(self):
      self.assertEqual(C_RHash(22, 9, 3), tuple([0, 0, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_000100110(self):
      self.assertEqual(C_RHash(12, 9, 3), tuple([0, 0, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_000010110(self):
      self.assertEqual(C_RHash(6, 9, 3), tuple([0, 0, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_000001110(self):
      self.assertEqual(C_RHash(3, 9, 3), tuple([0, 0, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_110000001(self):
      self.assertEqual(C_RHash(77, 9, 3), tuple([1, 1, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_101000001(self):
      self.assertEqual(C_RHash(71, 9, 3), tuple([1, 0, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_011000001(self):
      self.assertEqual(C_RHash(50, 9, 3), tuple([0, 1, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_100100001(self):
      self.assertEqual(C_RHash(66, 9, 3), tuple([1, 0, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_010100001(self):
      self.assertEqual(C_RHash(45, 9, 3), tuple([0, 1, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_001100001(self):
      self.assertEqual(C_RHash(30, 9, 3), tuple([0, 0, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_100010001(self):
      self.assertEqual(C_RHash(62, 9, 3), tuple([1, 0, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_010010001(self):
      self.assertEqual(C_RHash(41, 9, 3), tuple([0, 1, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_001010001(self):
      self.assertEqual(C_RHash(26, 9, 3), tuple([0, 0, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_000110001(self):
      self.assertEqual(C_RHash(16, 9, 3), tuple([0, 0, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_100001001(self):
      self.assertEqual(C_RHash(59, 9, 3), tuple([1, 0, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_010001001(self):
      self.assertEqual(C_RHash(38, 9, 3), tuple([0, 1, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_001001001(self):
      self.assertEqual(C_RHash(23, 9, 3), tuple([0, 0, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_000101001(self):
      self.assertEqual(C_RHash(13, 9, 3), tuple([0, 0, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_000011001(self):
      self.assertEqual(C_RHash(7, 9, 3), tuple([0, 0, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_100000101(self):
      self.assertEqual(C_RHash(57, 9, 3), tuple([1, 0, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_010000101(self):
      self.assertEqual(C_RHash(36, 9, 3), tuple([0, 1, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_001000101(self):
      self.assertEqual(C_RHash(21, 9, 3), tuple([0, 0, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_000100101(self):
      self.assertEqual(C_RHash(11, 9, 3), tuple([0, 0, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_000010101(self):
      self.assertEqual(C_RHash(5, 9, 3), tuple([0, 0, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_000001101(self):
      self.assertEqual(C_RHash(2, 9, 3), tuple([0, 0, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_100000011(self):
      self.assertEqual(C_RHash(56, 9, 3), tuple([1, 0, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_010000011(self):
      self.assertEqual(C_RHash(35, 9, 3), tuple([0, 1, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_001000011(self):
      self.assertEqual(C_RHash(20, 9, 3), tuple([0, 0, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_000100011(self):
      self.assertEqual(C_RHash(10, 9, 3), tuple([0, 0, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_000010011(self):
      self.assertEqual(C_RHash(4, 9, 3), tuple([0, 0, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_000001011(self):
      self.assertEqual(C_RHash(1, 9, 3), tuple([0, 0, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_000000111(self):
      self.assertEqual(C_RHash(0, 9, 3), tuple([0, 0, 0, 0, 0, 0, 1, 1, 1]))

class HashTest_n9_r4(unittest.TestCase):
  def test_C_Hash_range_111100000(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111010000(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110110000(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101110000(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011110000(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111001000(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110101000(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101101000(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011101000(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110011000(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101011000(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011011000(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100111000(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010111000(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001111000(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111000100(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110100100(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101100100(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011100100(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110010100(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101010100(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011010100(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100110100(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010110100(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001110100(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110001100(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101001100(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011001100(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100101100(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010101100(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001101100(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100011100(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010011100(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001011100(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000111100(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111000010(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110100010(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101100010(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011100010(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110010010(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101010010(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011010010(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100110010(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010110010(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001110010(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110001010(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101001010(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011001010(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100101010(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010101010(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001101010(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100011010(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010011010(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001011010(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000111010(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110000110(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101000110(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011000110(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100100110(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010100110(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001100110(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100010110(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010010110(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001010110(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000110110(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100001110(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010001110(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001001110(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000101110(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000011110(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111000001(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110100001(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101100001(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011100001(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110010001(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101010001(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011010001(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100110001(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010110001(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001110001(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110001001(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101001001(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011001001(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100101001(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010101001(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001101001(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100011001(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010011001(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001011001(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000111001(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110000101(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101000101(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011000101(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100100101(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010100101(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001100101(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100010101(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010010101(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001010101(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000110101(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100001101(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010001101(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001001101(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000101101(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000011101(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110000011(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101000011(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011000011(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100100011(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010100011(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001100011(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100010011(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010010011(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001010011(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000110011(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100001011(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010001011(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001001011(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000101011(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000011011(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100000111(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010000111(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001000111(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000100111(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000010111(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000001111(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1], 4)
      self.assert_(C(9, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0], 4)] = [1, 1, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0], 4)] = [1, 1, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0], 4)] = [1, 1, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0], 4)] = [1, 0, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0], 4)] = [0, 1, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0], 4)] = [1, 1, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0], 4)] = [1, 1, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0], 4)] = [1, 0, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0], 4)] = [0, 1, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0], 4)] = [1, 1, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0], 4)] = [1, 0, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0], 4)] = [0, 1, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0], 4)] = [1, 0, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0], 4)] = [0, 1, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0], 4)] = [0, 0, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0], 4)] = [1, 1, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0], 4)] = [1, 1, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0], 4)] = [1, 0, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0], 4)] = [0, 1, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0], 4)] = [1, 1, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0], 4)] = [1, 0, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0], 4)] = [0, 1, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0], 4)] = [1, 0, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0], 4)] = [0, 1, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0], 4)] = [0, 0, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0], 4)] = [1, 1, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0], 4)] = [1, 0, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0], 4)] = [0, 1, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0], 4)] = [1, 0, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0], 4)] = [0, 1, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0], 4)] = [0, 0, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0], 4)] = [1, 0, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0], 4)] = [0, 1, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0], 4)] = [0, 0, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0], 4)] = [0, 0, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0], 4)] = [1, 1, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0], 4)] = [1, 1, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0], 4)] = [1, 0, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0], 4)] = [0, 1, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0], 4)] = [1, 1, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0], 4)] = [1, 0, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0], 4)] = [0, 1, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0], 4)] = [1, 0, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0], 4)] = [0, 1, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0], 4)] = [0, 0, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0], 4)] = [1, 1, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0], 4)] = [1, 0, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0], 4)] = [0, 1, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0], 4)] = [1, 0, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0], 4)] = [0, 1, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0], 4)] = [0, 0, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0], 4)] = [1, 0, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0], 4)] = [0, 1, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0], 4)] = [0, 0, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0], 4)] = [0, 0, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0], 4)] = [1, 1, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0], 4)] = [1, 0, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0], 4)] = [0, 1, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0], 4)] = [1, 0, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0], 4)] = [0, 1, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0], 4)] = [0, 0, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0], 4)] = [1, 0, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0], 4)] = [0, 1, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0], 4)] = [0, 0, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0], 4)] = [0, 0, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0], 4)] = [1, 0, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0], 4)] = [0, 1, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0], 4)] = [0, 0, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0], 4)] = [0, 0, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0], 4)] = [0, 0, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1], 4)] = [1, 1, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1], 4)] = [1, 1, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1], 4)] = [1, 0, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1], 4)] = [0, 1, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1], 4)] = [1, 1, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1], 4)] = [1, 0, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1], 4)] = [0, 1, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1], 4)] = [1, 0, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1], 4)] = [0, 1, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1], 4)] = [0, 0, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1], 4)] = [1, 1, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1], 4)] = [1, 0, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1], 4)] = [0, 1, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1], 4)] = [1, 0, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1], 4)] = [0, 1, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1], 4)] = [0, 0, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1], 4)] = [1, 0, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1], 4)] = [0, 1, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1], 4)] = [0, 0, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1], 4)] = [0, 0, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1], 4)] = [1, 1, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1], 4)] = [1, 0, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1], 4)] = [0, 1, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1], 4)] = [1, 0, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1], 4)] = [0, 1, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1], 4)] = [0, 0, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1], 4)] = [1, 0, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1], 4)] = [0, 1, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1], 4)] = [0, 0, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1], 4)] = [0, 0, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1], 4)] = [1, 0, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1], 4)] = [0, 1, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1], 4)] = [0, 0, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1], 4)] = [0, 0, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1], 4)] = [0, 0, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1], 4)] = [1, 1, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1], 4)] = [1, 0, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1], 4)] = [0, 1, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1], 4)] = [1, 0, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1], 4)] = [0, 1, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1], 4)] = [0, 0, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1], 4)] = [1, 0, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1], 4)] = [0, 1, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1], 4)] = [0, 0, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1], 4)] = [0, 0, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1], 4)] = [1, 0, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1], 4)] = [0, 1, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1], 4)] = [0, 0, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1], 4)] = [0, 0, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1], 4)] = [0, 0, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1], 4)] = [1, 0, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1], 4)] = [0, 1, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1], 4)] = [0, 0, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1], 4)] = [0, 0, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1], 4)] = [0, 0, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1], 4)] = [0, 0, 0, 0, 0, 1, 1, 1, 1]
    self.assertEqual(len(d), 126)

  def test_C_RHash_soundness_111100000(self):
      self.assertEqual(C_RHash(125, 9, 4), tuple([1, 1, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_111010000(self):
      self.assertEqual(C_RHash(124, 9, 4), tuple([1, 1, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_110110000(self):
      self.assertEqual(C_RHash(119, 9, 4), tuple([1, 1, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_101110000(self):
      self.assertEqual(C_RHash(104, 9, 4), tuple([1, 0, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_011110000(self):
      self.assertEqual(C_RHash(69, 9, 4), tuple([0, 1, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_111001000(self):
      self.assertEqual(C_RHash(123, 9, 4), tuple([1, 1, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_110101000(self):
      self.assertEqual(C_RHash(118, 9, 4), tuple([1, 1, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_101101000(self):
      self.assertEqual(C_RHash(103, 9, 4), tuple([1, 0, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_011101000(self):
      self.assertEqual(C_RHash(68, 9, 4), tuple([0, 1, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_110011000(self):
      self.assertEqual(C_RHash(114, 9, 4), tuple([1, 1, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_101011000(self):
      self.assertEqual(C_RHash(99, 9, 4), tuple([1, 0, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_011011000(self):
      self.assertEqual(C_RHash(64, 9, 4), tuple([0, 1, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_100111000(self):
      self.assertEqual(C_RHash(89, 9, 4), tuple([1, 0, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_010111000(self):
      self.assertEqual(C_RHash(54, 9, 4), tuple([0, 1, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_001111000(self):
      self.assertEqual(C_RHash(34, 9, 4), tuple([0, 0, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_111000100(self):
      self.assertEqual(C_RHash(122, 9, 4), tuple([1, 1, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_110100100(self):
      self.assertEqual(C_RHash(117, 9, 4), tuple([1, 1, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_101100100(self):
      self.assertEqual(C_RHash(102, 9, 4), tuple([1, 0, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_011100100(self):
      self.assertEqual(C_RHash(67, 9, 4), tuple([0, 1, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_110010100(self):
      self.assertEqual(C_RHash(113, 9, 4), tuple([1, 1, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_101010100(self):
      self.assertEqual(C_RHash(98, 9, 4), tuple([1, 0, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_011010100(self):
      self.assertEqual(C_RHash(63, 9, 4), tuple([0, 1, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_100110100(self):
      self.assertEqual(C_RHash(88, 9, 4), tuple([1, 0, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_010110100(self):
      self.assertEqual(C_RHash(53, 9, 4), tuple([0, 1, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_001110100(self):
      self.assertEqual(C_RHash(33, 9, 4), tuple([0, 0, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_110001100(self):
      self.assertEqual(C_RHash(110, 9, 4), tuple([1, 1, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_101001100(self):
      self.assertEqual(C_RHash(95, 9, 4), tuple([1, 0, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_011001100(self):
      self.assertEqual(C_RHash(60, 9, 4), tuple([0, 1, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_100101100(self):
      self.assertEqual(C_RHash(85, 9, 4), tuple([1, 0, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_010101100(self):
      self.assertEqual(C_RHash(50, 9, 4), tuple([0, 1, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_001101100(self):
      self.assertEqual(C_RHash(30, 9, 4), tuple([0, 0, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_100011100(self):
      self.assertEqual(C_RHash(79, 9, 4), tuple([1, 0, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_010011100(self):
      self.assertEqual(C_RHash(44, 9, 4), tuple([0, 1, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_001011100(self):
      self.assertEqual(C_RHash(24, 9, 4), tuple([0, 0, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_000111100(self):
      self.assertEqual(C_RHash(14, 9, 4), tuple([0, 0, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_111000010(self):
      self.assertEqual(C_RHash(121, 9, 4), tuple([1, 1, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_110100010(self):
      self.assertEqual(C_RHash(116, 9, 4), tuple([1, 1, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_101100010(self):
      self.assertEqual(C_RHash(101, 9, 4), tuple([1, 0, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_011100010(self):
      self.assertEqual(C_RHash(66, 9, 4), tuple([0, 1, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_110010010(self):
      self.assertEqual(C_RHash(112, 9, 4), tuple([1, 1, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_101010010(self):
      self.assertEqual(C_RHash(97, 9, 4), tuple([1, 0, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_011010010(self):
      self.assertEqual(C_RHash(62, 9, 4), tuple([0, 1, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_100110010(self):
      self.assertEqual(C_RHash(87, 9, 4), tuple([1, 0, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_010110010(self):
      self.assertEqual(C_RHash(52, 9, 4), tuple([0, 1, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_001110010(self):
      self.assertEqual(C_RHash(32, 9, 4), tuple([0, 0, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_110001010(self):
      self.assertEqual(C_RHash(109, 9, 4), tuple([1, 1, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_101001010(self):
      self.assertEqual(C_RHash(94, 9, 4), tuple([1, 0, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_011001010(self):
      self.assertEqual(C_RHash(59, 9, 4), tuple([0, 1, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_100101010(self):
      self.assertEqual(C_RHash(84, 9, 4), tuple([1, 0, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_010101010(self):
      self.assertEqual(C_RHash(49, 9, 4), tuple([0, 1, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_001101010(self):
      self.assertEqual(C_RHash(29, 9, 4), tuple([0, 0, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_100011010(self):
      self.assertEqual(C_RHash(78, 9, 4), tuple([1, 0, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_010011010(self):
      self.assertEqual(C_RHash(43, 9, 4), tuple([0, 1, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_001011010(self):
      self.assertEqual(C_RHash(23, 9, 4), tuple([0, 0, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_000111010(self):
      self.assertEqual(C_RHash(13, 9, 4), tuple([0, 0, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_110000110(self):
      self.assertEqual(C_RHash(107, 9, 4), tuple([1, 1, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_101000110(self):
      self.assertEqual(C_RHash(92, 9, 4), tuple([1, 0, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_011000110(self):
      self.assertEqual(C_RHash(57, 9, 4), tuple([0, 1, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_100100110(self):
      self.assertEqual(C_RHash(82, 9, 4), tuple([1, 0, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_010100110(self):
      self.assertEqual(C_RHash(47, 9, 4), tuple([0, 1, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_001100110(self):
      self.assertEqual(C_RHash(27, 9, 4), tuple([0, 0, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_100010110(self):
      self.assertEqual(C_RHash(76, 9, 4), tuple([1, 0, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_010010110(self):
      self.assertEqual(C_RHash(41, 9, 4), tuple([0, 1, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_001010110(self):
      self.assertEqual(C_RHash(21, 9, 4), tuple([0, 0, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_000110110(self):
      self.assertEqual(C_RHash(11, 9, 4), tuple([0, 0, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_100001110(self):
      self.assertEqual(C_RHash(73, 9, 4), tuple([1, 0, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_010001110(self):
      self.assertEqual(C_RHash(38, 9, 4), tuple([0, 1, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_001001110(self):
      self.assertEqual(C_RHash(18, 9, 4), tuple([0, 0, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_000101110(self):
      self.assertEqual(C_RHash(8, 9, 4), tuple([0, 0, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_000011110(self):
      self.assertEqual(C_RHash(4, 9, 4), tuple([0, 0, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_111000001(self):
      self.assertEqual(C_RHash(120, 9, 4), tuple([1, 1, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_110100001(self):
      self.assertEqual(C_RHash(115, 9, 4), tuple([1, 1, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_101100001(self):
      self.assertEqual(C_RHash(100, 9, 4), tuple([1, 0, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_011100001(self):
      self.assertEqual(C_RHash(65, 9, 4), tuple([0, 1, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_110010001(self):
      self.assertEqual(C_RHash(111, 9, 4), tuple([1, 1, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_101010001(self):
      self.assertEqual(C_RHash(96, 9, 4), tuple([1, 0, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_011010001(self):
      self.assertEqual(C_RHash(61, 9, 4), tuple([0, 1, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_100110001(self):
      self.assertEqual(C_RHash(86, 9, 4), tuple([1, 0, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_010110001(self):
      self.assertEqual(C_RHash(51, 9, 4), tuple([0, 1, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_001110001(self):
      self.assertEqual(C_RHash(31, 9, 4), tuple([0, 0, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_110001001(self):
      self.assertEqual(C_RHash(108, 9, 4), tuple([1, 1, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_101001001(self):
      self.assertEqual(C_RHash(93, 9, 4), tuple([1, 0, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_011001001(self):
      self.assertEqual(C_RHash(58, 9, 4), tuple([0, 1, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_100101001(self):
      self.assertEqual(C_RHash(83, 9, 4), tuple([1, 0, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_010101001(self):
      self.assertEqual(C_RHash(48, 9, 4), tuple([0, 1, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_001101001(self):
      self.assertEqual(C_RHash(28, 9, 4), tuple([0, 0, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_100011001(self):
      self.assertEqual(C_RHash(77, 9, 4), tuple([1, 0, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_010011001(self):
      self.assertEqual(C_RHash(42, 9, 4), tuple([0, 1, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_001011001(self):
      self.assertEqual(C_RHash(22, 9, 4), tuple([0, 0, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_000111001(self):
      self.assertEqual(C_RHash(12, 9, 4), tuple([0, 0, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_110000101(self):
      self.assertEqual(C_RHash(106, 9, 4), tuple([1, 1, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_101000101(self):
      self.assertEqual(C_RHash(91, 9, 4), tuple([1, 0, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_011000101(self):
      self.assertEqual(C_RHash(56, 9, 4), tuple([0, 1, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_100100101(self):
      self.assertEqual(C_RHash(81, 9, 4), tuple([1, 0, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_010100101(self):
      self.assertEqual(C_RHash(46, 9, 4), tuple([0, 1, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_001100101(self):
      self.assertEqual(C_RHash(26, 9, 4), tuple([0, 0, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_100010101(self):
      self.assertEqual(C_RHash(75, 9, 4), tuple([1, 0, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_010010101(self):
      self.assertEqual(C_RHash(40, 9, 4), tuple([0, 1, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_001010101(self):
      self.assertEqual(C_RHash(20, 9, 4), tuple([0, 0, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_000110101(self):
      self.assertEqual(C_RHash(10, 9, 4), tuple([0, 0, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_100001101(self):
      self.assertEqual(C_RHash(72, 9, 4), tuple([1, 0, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_010001101(self):
      self.assertEqual(C_RHash(37, 9, 4), tuple([0, 1, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_001001101(self):
      self.assertEqual(C_RHash(17, 9, 4), tuple([0, 0, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_000101101(self):
      self.assertEqual(C_RHash(7, 9, 4), tuple([0, 0, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_000011101(self):
      self.assertEqual(C_RHash(3, 9, 4), tuple([0, 0, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_110000011(self):
      self.assertEqual(C_RHash(105, 9, 4), tuple([1, 1, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_101000011(self):
      self.assertEqual(C_RHash(90, 9, 4), tuple([1, 0, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_011000011(self):
      self.assertEqual(C_RHash(55, 9, 4), tuple([0, 1, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_100100011(self):
      self.assertEqual(C_RHash(80, 9, 4), tuple([1, 0, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_010100011(self):
      self.assertEqual(C_RHash(45, 9, 4), tuple([0, 1, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_001100011(self):
      self.assertEqual(C_RHash(25, 9, 4), tuple([0, 0, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_100010011(self):
      self.assertEqual(C_RHash(74, 9, 4), tuple([1, 0, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_010010011(self):
      self.assertEqual(C_RHash(39, 9, 4), tuple([0, 1, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_001010011(self):
      self.assertEqual(C_RHash(19, 9, 4), tuple([0, 0, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_000110011(self):
      self.assertEqual(C_RHash(9, 9, 4), tuple([0, 0, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_100001011(self):
      self.assertEqual(C_RHash(71, 9, 4), tuple([1, 0, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_010001011(self):
      self.assertEqual(C_RHash(36, 9, 4), tuple([0, 1, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_001001011(self):
      self.assertEqual(C_RHash(16, 9, 4), tuple([0, 0, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_000101011(self):
      self.assertEqual(C_RHash(6, 9, 4), tuple([0, 0, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_000011011(self):
      self.assertEqual(C_RHash(2, 9, 4), tuple([0, 0, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_100000111(self):
      self.assertEqual(C_RHash(70, 9, 4), tuple([1, 0, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_010000111(self):
      self.assertEqual(C_RHash(35, 9, 4), tuple([0, 1, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_001000111(self):
      self.assertEqual(C_RHash(15, 9, 4), tuple([0, 0, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_000100111(self):
      self.assertEqual(C_RHash(5, 9, 4), tuple([0, 0, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_000010111(self):
      self.assertEqual(C_RHash(1, 9, 4), tuple([0, 0, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_000001111(self):
      self.assertEqual(C_RHash(0, 9, 4), tuple([0, 0, 0, 0, 0, 1, 1, 1, 1]))

class HashTest_n9_r5(unittest.TestCase):
  def test_C_Hash_range_111110000(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111101000(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111011000(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110111000(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101111000(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011111000(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111100100(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111010100(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110110100(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101110100(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011110100(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111001100(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110101100(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101101100(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011101100(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110011100(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101011100(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011011100(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100111100(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010111100(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001111100(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111100010(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111010010(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110110010(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101110010(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011110010(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111001010(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110101010(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101101010(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011101010(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110011010(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101011010(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011011010(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100111010(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010111010(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001111010(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111000110(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110100110(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101100110(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011100110(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110010110(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101010110(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011010110(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100110110(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010110110(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001110110(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110001110(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101001110(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011001110(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100101110(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010101110(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001101110(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100011110(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010011110(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001011110(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000111110(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111100001(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111010001(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110110001(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101110001(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011110001(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111001001(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110101001(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101101001(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011101001(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110011001(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101011001(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011011001(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100111001(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010111001(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001111001(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111000101(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110100101(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101100101(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011100101(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110010101(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101010101(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011010101(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100110101(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010110101(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001110101(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110001101(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101001101(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011001101(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100101101(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010101101(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001101101(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100011101(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010011101(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001011101(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000111101(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111000011(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110100011(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101100011(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011100011(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110010011(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101010011(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011010011(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100110011(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010110011(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001110011(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110001011(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101001011(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011001011(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100101011(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010101011(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001101011(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100011011(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010011011(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001011011(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000111011(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110000111(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101000111(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011000111(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100100111(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010100111(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001100111(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100010111(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010010111(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001010111(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000110111(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100001111(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010001111(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001001111(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000101111(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000011111(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1], 5)
      self.assert_(C(9, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0], 5)] = [1, 1, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0], 5)] = [1, 1, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0], 5)] = [1, 1, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0], 5)] = [1, 1, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0], 5)] = [1, 0, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0], 5)] = [0, 1, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0], 5)] = [1, 1, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0], 5)] = [1, 1, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0], 5)] = [1, 1, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0], 5)] = [1, 0, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0], 5)] = [0, 1, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0], 5)] = [1, 1, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0], 5)] = [1, 1, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0], 5)] = [1, 0, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0], 5)] = [0, 1, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0], 5)] = [1, 1, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0], 5)] = [1, 0, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0], 5)] = [0, 1, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0], 5)] = [1, 0, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0], 5)] = [0, 1, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0], 5)] = [0, 0, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0], 5)] = [1, 1, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0], 5)] = [1, 1, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0], 5)] = [1, 1, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0], 5)] = [1, 0, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0], 5)] = [0, 1, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0], 5)] = [1, 1, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0], 5)] = [1, 1, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0], 5)] = [1, 0, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0], 5)] = [0, 1, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0], 5)] = [1, 1, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0], 5)] = [1, 0, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0], 5)] = [0, 1, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0], 5)] = [1, 0, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0], 5)] = [0, 1, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0], 5)] = [0, 0, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0], 5)] = [1, 1, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0], 5)] = [1, 1, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0], 5)] = [1, 0, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0], 5)] = [0, 1, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0], 5)] = [1, 1, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0], 5)] = [1, 0, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0], 5)] = [0, 1, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0], 5)] = [1, 0, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0], 5)] = [0, 1, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0], 5)] = [0, 0, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0], 5)] = [1, 1, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0], 5)] = [1, 0, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0], 5)] = [0, 1, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0], 5)] = [1, 0, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0], 5)] = [0, 1, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0], 5)] = [0, 0, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0], 5)] = [1, 0, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0], 5)] = [0, 1, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0], 5)] = [0, 0, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0], 5)] = [0, 0, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1], 5)] = [1, 1, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1], 5)] = [1, 1, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1], 5)] = [1, 1, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1], 5)] = [1, 0, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1], 5)] = [0, 1, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1], 5)] = [1, 1, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1], 5)] = [1, 1, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1], 5)] = [1, 0, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1], 5)] = [0, 1, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1], 5)] = [1, 1, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1], 5)] = [1, 0, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1], 5)] = [0, 1, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1], 5)] = [1, 0, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1], 5)] = [0, 1, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1], 5)] = [0, 0, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1], 5)] = [1, 1, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1], 5)] = [1, 1, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1], 5)] = [1, 0, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1], 5)] = [0, 1, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1], 5)] = [1, 1, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1], 5)] = [1, 0, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1], 5)] = [0, 1, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1], 5)] = [1, 0, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1], 5)] = [0, 1, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1], 5)] = [0, 0, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1], 5)] = [1, 1, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1], 5)] = [1, 0, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1], 5)] = [0, 1, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1], 5)] = [1, 0, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1], 5)] = [0, 1, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1], 5)] = [0, 0, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1], 5)] = [1, 0, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1], 5)] = [0, 1, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1], 5)] = [0, 0, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1], 5)] = [0, 0, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1], 5)] = [1, 1, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1], 5)] = [1, 1, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1], 5)] = [1, 0, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1], 5)] = [0, 1, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1], 5)] = [1, 1, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1], 5)] = [1, 0, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1], 5)] = [0, 1, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1], 5)] = [1, 0, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1], 5)] = [0, 1, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1], 5)] = [0, 0, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1], 5)] = [1, 1, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1], 5)] = [1, 0, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1], 5)] = [0, 1, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1], 5)] = [1, 0, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1], 5)] = [0, 1, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1], 5)] = [0, 0, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1], 5)] = [1, 0, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1], 5)] = [0, 1, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1], 5)] = [0, 0, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1], 5)] = [0, 0, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1], 5)] = [1, 1, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1], 5)] = [1, 0, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1], 5)] = [0, 1, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1], 5)] = [1, 0, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1], 5)] = [0, 1, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1], 5)] = [0, 0, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1], 5)] = [1, 0, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1], 5)] = [0, 1, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1], 5)] = [0, 0, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1], 5)] = [0, 0, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1], 5)] = [1, 0, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1], 5)] = [0, 1, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1], 5)] = [0, 0, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1], 5)] = [0, 0, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1], 5)] = [0, 0, 0, 0, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 126)

  def test_C_RHash_soundness_111110000(self):
      self.assertEqual(C_RHash(125, 9, 5), tuple([1, 1, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_111101000(self):
      self.assertEqual(C_RHash(124, 9, 5), tuple([1, 1, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_111011000(self):
      self.assertEqual(C_RHash(120, 9, 5), tuple([1, 1, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_110111000(self):
      self.assertEqual(C_RHash(110, 9, 5), tuple([1, 1, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_101111000(self):
      self.assertEqual(C_RHash(90, 9, 5), tuple([1, 0, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_011111000(self):
      self.assertEqual(C_RHash(55, 9, 5), tuple([0, 1, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_111100100(self):
      self.assertEqual(C_RHash(123, 9, 5), tuple([1, 1, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_111010100(self):
      self.assertEqual(C_RHash(119, 9, 5), tuple([1, 1, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_110110100(self):
      self.assertEqual(C_RHash(109, 9, 5), tuple([1, 1, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_101110100(self):
      self.assertEqual(C_RHash(89, 9, 5), tuple([1, 0, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_011110100(self):
      self.assertEqual(C_RHash(54, 9, 5), tuple([0, 1, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_111001100(self):
      self.assertEqual(C_RHash(116, 9, 5), tuple([1, 1, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_110101100(self):
      self.assertEqual(C_RHash(106, 9, 5), tuple([1, 1, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_101101100(self):
      self.assertEqual(C_RHash(86, 9, 5), tuple([1, 0, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_011101100(self):
      self.assertEqual(C_RHash(51, 9, 5), tuple([0, 1, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_110011100(self):
      self.assertEqual(C_RHash(100, 9, 5), tuple([1, 1, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_101011100(self):
      self.assertEqual(C_RHash(80, 9, 5), tuple([1, 0, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_011011100(self):
      self.assertEqual(C_RHash(45, 9, 5), tuple([0, 1, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_100111100(self):
      self.assertEqual(C_RHash(70, 9, 5), tuple([1, 0, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_010111100(self):
      self.assertEqual(C_RHash(35, 9, 5), tuple([0, 1, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_001111100(self):
      self.assertEqual(C_RHash(20, 9, 5), tuple([0, 0, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_111100010(self):
      self.assertEqual(C_RHash(122, 9, 5), tuple([1, 1, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_111010010(self):
      self.assertEqual(C_RHash(118, 9, 5), tuple([1, 1, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_110110010(self):
      self.assertEqual(C_RHash(108, 9, 5), tuple([1, 1, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_101110010(self):
      self.assertEqual(C_RHash(88, 9, 5), tuple([1, 0, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_011110010(self):
      self.assertEqual(C_RHash(53, 9, 5), tuple([0, 1, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_111001010(self):
      self.assertEqual(C_RHash(115, 9, 5), tuple([1, 1, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_110101010(self):
      self.assertEqual(C_RHash(105, 9, 5), tuple([1, 1, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_101101010(self):
      self.assertEqual(C_RHash(85, 9, 5), tuple([1, 0, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_011101010(self):
      self.assertEqual(C_RHash(50, 9, 5), tuple([0, 1, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_110011010(self):
      self.assertEqual(C_RHash(99, 9, 5), tuple([1, 1, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_101011010(self):
      self.assertEqual(C_RHash(79, 9, 5), tuple([1, 0, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_011011010(self):
      self.assertEqual(C_RHash(44, 9, 5), tuple([0, 1, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_100111010(self):
      self.assertEqual(C_RHash(69, 9, 5), tuple([1, 0, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_010111010(self):
      self.assertEqual(C_RHash(34, 9, 5), tuple([0, 1, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_001111010(self):
      self.assertEqual(C_RHash(19, 9, 5), tuple([0, 0, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_111000110(self):
      self.assertEqual(C_RHash(113, 9, 5), tuple([1, 1, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_110100110(self):
      self.assertEqual(C_RHash(103, 9, 5), tuple([1, 1, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_101100110(self):
      self.assertEqual(C_RHash(83, 9, 5), tuple([1, 0, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_011100110(self):
      self.assertEqual(C_RHash(48, 9, 5), tuple([0, 1, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_110010110(self):
      self.assertEqual(C_RHash(97, 9, 5), tuple([1, 1, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_101010110(self):
      self.assertEqual(C_RHash(77, 9, 5), tuple([1, 0, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_011010110(self):
      self.assertEqual(C_RHash(42, 9, 5), tuple([0, 1, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_100110110(self):
      self.assertEqual(C_RHash(67, 9, 5), tuple([1, 0, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_010110110(self):
      self.assertEqual(C_RHash(32, 9, 5), tuple([0, 1, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_001110110(self):
      self.assertEqual(C_RHash(17, 9, 5), tuple([0, 0, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_110001110(self):
      self.assertEqual(C_RHash(94, 9, 5), tuple([1, 1, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_101001110(self):
      self.assertEqual(C_RHash(74, 9, 5), tuple([1, 0, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_011001110(self):
      self.assertEqual(C_RHash(39, 9, 5), tuple([0, 1, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_100101110(self):
      self.assertEqual(C_RHash(64, 9, 5), tuple([1, 0, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_010101110(self):
      self.assertEqual(C_RHash(29, 9, 5), tuple([0, 1, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_001101110(self):
      self.assertEqual(C_RHash(14, 9, 5), tuple([0, 0, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_100011110(self):
      self.assertEqual(C_RHash(60, 9, 5), tuple([1, 0, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_010011110(self):
      self.assertEqual(C_RHash(25, 9, 5), tuple([0, 1, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_001011110(self):
      self.assertEqual(C_RHash(10, 9, 5), tuple([0, 0, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_000111110(self):
      self.assertEqual(C_RHash(5, 9, 5), tuple([0, 0, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_111100001(self):
      self.assertEqual(C_RHash(121, 9, 5), tuple([1, 1, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_111010001(self):
      self.assertEqual(C_RHash(117, 9, 5), tuple([1, 1, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_110110001(self):
      self.assertEqual(C_RHash(107, 9, 5), tuple([1, 1, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_101110001(self):
      self.assertEqual(C_RHash(87, 9, 5), tuple([1, 0, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_011110001(self):
      self.assertEqual(C_RHash(52, 9, 5), tuple([0, 1, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_111001001(self):
      self.assertEqual(C_RHash(114, 9, 5), tuple([1, 1, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_110101001(self):
      self.assertEqual(C_RHash(104, 9, 5), tuple([1, 1, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_101101001(self):
      self.assertEqual(C_RHash(84, 9, 5), tuple([1, 0, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_011101001(self):
      self.assertEqual(C_RHash(49, 9, 5), tuple([0, 1, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_110011001(self):
      self.assertEqual(C_RHash(98, 9, 5), tuple([1, 1, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_101011001(self):
      self.assertEqual(C_RHash(78, 9, 5), tuple([1, 0, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_011011001(self):
      self.assertEqual(C_RHash(43, 9, 5), tuple([0, 1, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_100111001(self):
      self.assertEqual(C_RHash(68, 9, 5), tuple([1, 0, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_010111001(self):
      self.assertEqual(C_RHash(33, 9, 5), tuple([0, 1, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_001111001(self):
      self.assertEqual(C_RHash(18, 9, 5), tuple([0, 0, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_111000101(self):
      self.assertEqual(C_RHash(112, 9, 5), tuple([1, 1, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_110100101(self):
      self.assertEqual(C_RHash(102, 9, 5), tuple([1, 1, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_101100101(self):
      self.assertEqual(C_RHash(82, 9, 5), tuple([1, 0, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_011100101(self):
      self.assertEqual(C_RHash(47, 9, 5), tuple([0, 1, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_110010101(self):
      self.assertEqual(C_RHash(96, 9, 5), tuple([1, 1, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_101010101(self):
      self.assertEqual(C_RHash(76, 9, 5), tuple([1, 0, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_011010101(self):
      self.assertEqual(C_RHash(41, 9, 5), tuple([0, 1, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_100110101(self):
      self.assertEqual(C_RHash(66, 9, 5), tuple([1, 0, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_010110101(self):
      self.assertEqual(C_RHash(31, 9, 5), tuple([0, 1, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_001110101(self):
      self.assertEqual(C_RHash(16, 9, 5), tuple([0, 0, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_110001101(self):
      self.assertEqual(C_RHash(93, 9, 5), tuple([1, 1, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_101001101(self):
      self.assertEqual(C_RHash(73, 9, 5), tuple([1, 0, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_011001101(self):
      self.assertEqual(C_RHash(38, 9, 5), tuple([0, 1, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_100101101(self):
      self.assertEqual(C_RHash(63, 9, 5), tuple([1, 0, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_010101101(self):
      self.assertEqual(C_RHash(28, 9, 5), tuple([0, 1, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_001101101(self):
      self.assertEqual(C_RHash(13, 9, 5), tuple([0, 0, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_100011101(self):
      self.assertEqual(C_RHash(59, 9, 5), tuple([1, 0, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_010011101(self):
      self.assertEqual(C_RHash(24, 9, 5), tuple([0, 1, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_001011101(self):
      self.assertEqual(C_RHash(9, 9, 5), tuple([0, 0, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_000111101(self):
      self.assertEqual(C_RHash(4, 9, 5), tuple([0, 0, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_111000011(self):
      self.assertEqual(C_RHash(111, 9, 5), tuple([1, 1, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_110100011(self):
      self.assertEqual(C_RHash(101, 9, 5), tuple([1, 1, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_101100011(self):
      self.assertEqual(C_RHash(81, 9, 5), tuple([1, 0, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_011100011(self):
      self.assertEqual(C_RHash(46, 9, 5), tuple([0, 1, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_110010011(self):
      self.assertEqual(C_RHash(95, 9, 5), tuple([1, 1, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_101010011(self):
      self.assertEqual(C_RHash(75, 9, 5), tuple([1, 0, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_011010011(self):
      self.assertEqual(C_RHash(40, 9, 5), tuple([0, 1, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_100110011(self):
      self.assertEqual(C_RHash(65, 9, 5), tuple([1, 0, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_010110011(self):
      self.assertEqual(C_RHash(30, 9, 5), tuple([0, 1, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_001110011(self):
      self.assertEqual(C_RHash(15, 9, 5), tuple([0, 0, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_110001011(self):
      self.assertEqual(C_RHash(92, 9, 5), tuple([1, 1, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_101001011(self):
      self.assertEqual(C_RHash(72, 9, 5), tuple([1, 0, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_011001011(self):
      self.assertEqual(C_RHash(37, 9, 5), tuple([0, 1, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_100101011(self):
      self.assertEqual(C_RHash(62, 9, 5), tuple([1, 0, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_010101011(self):
      self.assertEqual(C_RHash(27, 9, 5), tuple([0, 1, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_001101011(self):
      self.assertEqual(C_RHash(12, 9, 5), tuple([0, 0, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_100011011(self):
      self.assertEqual(C_RHash(58, 9, 5), tuple([1, 0, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_010011011(self):
      self.assertEqual(C_RHash(23, 9, 5), tuple([0, 1, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_001011011(self):
      self.assertEqual(C_RHash(8, 9, 5), tuple([0, 0, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_000111011(self):
      self.assertEqual(C_RHash(3, 9, 5), tuple([0, 0, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_110000111(self):
      self.assertEqual(C_RHash(91, 9, 5), tuple([1, 1, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_101000111(self):
      self.assertEqual(C_RHash(71, 9, 5), tuple([1, 0, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_011000111(self):
      self.assertEqual(C_RHash(36, 9, 5), tuple([0, 1, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_100100111(self):
      self.assertEqual(C_RHash(61, 9, 5), tuple([1, 0, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_010100111(self):
      self.assertEqual(C_RHash(26, 9, 5), tuple([0, 1, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_001100111(self):
      self.assertEqual(C_RHash(11, 9, 5), tuple([0, 0, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_100010111(self):
      self.assertEqual(C_RHash(57, 9, 5), tuple([1, 0, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_010010111(self):
      self.assertEqual(C_RHash(22, 9, 5), tuple([0, 1, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_001010111(self):
      self.assertEqual(C_RHash(7, 9, 5), tuple([0, 0, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_000110111(self):
      self.assertEqual(C_RHash(2, 9, 5), tuple([0, 0, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_100001111(self):
      self.assertEqual(C_RHash(56, 9, 5), tuple([1, 0, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_010001111(self):
      self.assertEqual(C_RHash(21, 9, 5), tuple([0, 1, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_001001111(self):
      self.assertEqual(C_RHash(6, 9, 5), tuple([0, 0, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_000101111(self):
      self.assertEqual(C_RHash(1, 9, 5), tuple([0, 0, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_000011111(self):
      self.assertEqual(C_RHash(0, 9, 5), tuple([0, 0, 0, 0, 1, 1, 1, 1, 1]))

class HashTest_n9_r6(unittest.TestCase):
  def test_C_Hash_range_111111000(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111110100(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111101100(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111011100(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110111100(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101111100(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011111100(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111110010(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111101010(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111011010(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110111010(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101111010(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011111010(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111100110(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111010110(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110110110(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101110110(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011110110(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111001110(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110101110(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101101110(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011101110(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110011110(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101011110(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011011110(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100111110(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010111110(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001111110(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111110001(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111101001(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111011001(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110111001(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101111001(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011111001(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111100101(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111010101(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110110101(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101110101(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011110101(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111001101(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110101101(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101101101(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011101101(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110011101(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101011101(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011011101(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100111101(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010111101(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001111101(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111100011(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111010011(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110110011(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101110011(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011110011(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111001011(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110101011(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101101011(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011101011(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110011011(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101011011(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011011011(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100111011(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010111011(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001111011(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111000111(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110100111(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101100111(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011100111(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110010111(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101010111(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011010111(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100110111(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010110111(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001110111(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110001111(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101001111(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011001111(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100101111(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010101111(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001101111(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100011111(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010011111(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001011111(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_000111111(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1], 6)
      self.assert_(C(9, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0], 6)] = [1, 1, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0], 6)] = [1, 1, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0], 6)] = [1, 1, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0], 6)] = [1, 1, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0], 6)] = [1, 1, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0], 6)] = [1, 0, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0], 6)] = [0, 1, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0], 6)] = [1, 1, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0], 6)] = [1, 1, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0], 6)] = [1, 1, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0], 6)] = [1, 1, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0], 6)] = [1, 0, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0], 6)] = [0, 1, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0], 6)] = [1, 1, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0], 6)] = [1, 1, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0], 6)] = [1, 1, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0], 6)] = [1, 0, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0], 6)] = [0, 1, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0], 6)] = [1, 1, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0], 6)] = [1, 1, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0], 6)] = [1, 0, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0], 6)] = [0, 1, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0], 6)] = [1, 1, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0], 6)] = [1, 0, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0], 6)] = [0, 1, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0], 6)] = [1, 0, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0], 6)] = [0, 1, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0], 6)] = [0, 0, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1], 6)] = [1, 1, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1], 6)] = [1, 1, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1], 6)] = [1, 1, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1], 6)] = [1, 1, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1], 6)] = [1, 0, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1], 6)] = [0, 1, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1], 6)] = [1, 1, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1], 6)] = [1, 1, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1], 6)] = [1, 1, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1], 6)] = [1, 0, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1], 6)] = [0, 1, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1], 6)] = [1, 1, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1], 6)] = [1, 1, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1], 6)] = [1, 0, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1], 6)] = [0, 1, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1], 6)] = [1, 1, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1], 6)] = [1, 0, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1], 6)] = [0, 1, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1], 6)] = [1, 0, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1], 6)] = [0, 1, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1], 6)] = [0, 0, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1], 6)] = [1, 1, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1], 6)] = [1, 1, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1], 6)] = [1, 1, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1], 6)] = [1, 0, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1], 6)] = [0, 1, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1], 6)] = [1, 1, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1], 6)] = [1, 1, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1], 6)] = [1, 0, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1], 6)] = [0, 1, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1], 6)] = [1, 1, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1], 6)] = [1, 0, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1], 6)] = [0, 1, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1], 6)] = [1, 0, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1], 6)] = [0, 1, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1], 6)] = [0, 0, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1], 6)] = [1, 1, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1], 6)] = [1, 1, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1], 6)] = [1, 0, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1], 6)] = [0, 1, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1], 6)] = [1, 1, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1], 6)] = [1, 0, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1], 6)] = [0, 1, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1], 6)] = [1, 0, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1], 6)] = [0, 1, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1], 6)] = [0, 0, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1], 6)] = [1, 1, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1], 6)] = [1, 0, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1], 6)] = [0, 1, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1], 6)] = [1, 0, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1], 6)] = [0, 1, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1], 6)] = [0, 0, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1], 6)] = [1, 0, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1], 6)] = [0, 1, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1], 6)] = [0, 0, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1], 6)] = [0, 0, 0, 1, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 84)

  def test_C_RHash_soundness_111111000(self):
      self.assertEqual(C_RHash(83, 9, 6), tuple([1, 1, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_111110100(self):
      self.assertEqual(C_RHash(82, 9, 6), tuple([1, 1, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_111101100(self):
      self.assertEqual(C_RHash(79, 9, 6), tuple([1, 1, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_111011100(self):
      self.assertEqual(C_RHash(73, 9, 6), tuple([1, 1, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_110111100(self):
      self.assertEqual(C_RHash(63, 9, 6), tuple([1, 1, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_101111100(self):
      self.assertEqual(C_RHash(48, 9, 6), tuple([1, 0, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_011111100(self):
      self.assertEqual(C_RHash(27, 9, 6), tuple([0, 1, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_111110010(self):
      self.assertEqual(C_RHash(81, 9, 6), tuple([1, 1, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_111101010(self):
      self.assertEqual(C_RHash(78, 9, 6), tuple([1, 1, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_111011010(self):
      self.assertEqual(C_RHash(72, 9, 6), tuple([1, 1, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_110111010(self):
      self.assertEqual(C_RHash(62, 9, 6), tuple([1, 1, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_101111010(self):
      self.assertEqual(C_RHash(47, 9, 6), tuple([1, 0, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_011111010(self):
      self.assertEqual(C_RHash(26, 9, 6), tuple([0, 1, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_111100110(self):
      self.assertEqual(C_RHash(76, 9, 6), tuple([1, 1, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_111010110(self):
      self.assertEqual(C_RHash(70, 9, 6), tuple([1, 1, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_110110110(self):
      self.assertEqual(C_RHash(60, 9, 6), tuple([1, 1, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_101110110(self):
      self.assertEqual(C_RHash(45, 9, 6), tuple([1, 0, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_011110110(self):
      self.assertEqual(C_RHash(24, 9, 6), tuple([0, 1, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_111001110(self):
      self.assertEqual(C_RHash(67, 9, 6), tuple([1, 1, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_110101110(self):
      self.assertEqual(C_RHash(57, 9, 6), tuple([1, 1, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_101101110(self):
      self.assertEqual(C_RHash(42, 9, 6), tuple([1, 0, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_011101110(self):
      self.assertEqual(C_RHash(21, 9, 6), tuple([0, 1, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_110011110(self):
      self.assertEqual(C_RHash(53, 9, 6), tuple([1, 1, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_101011110(self):
      self.assertEqual(C_RHash(38, 9, 6), tuple([1, 0, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_011011110(self):
      self.assertEqual(C_RHash(17, 9, 6), tuple([0, 1, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_100111110(self):
      self.assertEqual(C_RHash(33, 9, 6), tuple([1, 0, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_010111110(self):
      self.assertEqual(C_RHash(12, 9, 6), tuple([0, 1, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_001111110(self):
      self.assertEqual(C_RHash(6, 9, 6), tuple([0, 0, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_111110001(self):
      self.assertEqual(C_RHash(80, 9, 6), tuple([1, 1, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_111101001(self):
      self.assertEqual(C_RHash(77, 9, 6), tuple([1, 1, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_111011001(self):
      self.assertEqual(C_RHash(71, 9, 6), tuple([1, 1, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_110111001(self):
      self.assertEqual(C_RHash(61, 9, 6), tuple([1, 1, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_101111001(self):
      self.assertEqual(C_RHash(46, 9, 6), tuple([1, 0, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_011111001(self):
      self.assertEqual(C_RHash(25, 9, 6), tuple([0, 1, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_111100101(self):
      self.assertEqual(C_RHash(75, 9, 6), tuple([1, 1, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_111010101(self):
      self.assertEqual(C_RHash(69, 9, 6), tuple([1, 1, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_110110101(self):
      self.assertEqual(C_RHash(59, 9, 6), tuple([1, 1, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_101110101(self):
      self.assertEqual(C_RHash(44, 9, 6), tuple([1, 0, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_011110101(self):
      self.assertEqual(C_RHash(23, 9, 6), tuple([0, 1, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_111001101(self):
      self.assertEqual(C_RHash(66, 9, 6), tuple([1, 1, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_110101101(self):
      self.assertEqual(C_RHash(56, 9, 6), tuple([1, 1, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_101101101(self):
      self.assertEqual(C_RHash(41, 9, 6), tuple([1, 0, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_011101101(self):
      self.assertEqual(C_RHash(20, 9, 6), tuple([0, 1, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_110011101(self):
      self.assertEqual(C_RHash(52, 9, 6), tuple([1, 1, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_101011101(self):
      self.assertEqual(C_RHash(37, 9, 6), tuple([1, 0, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_011011101(self):
      self.assertEqual(C_RHash(16, 9, 6), tuple([0, 1, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_100111101(self):
      self.assertEqual(C_RHash(32, 9, 6), tuple([1, 0, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_010111101(self):
      self.assertEqual(C_RHash(11, 9, 6), tuple([0, 1, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_001111101(self):
      self.assertEqual(C_RHash(5, 9, 6), tuple([0, 0, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_111100011(self):
      self.assertEqual(C_RHash(74, 9, 6), tuple([1, 1, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_111010011(self):
      self.assertEqual(C_RHash(68, 9, 6), tuple([1, 1, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_110110011(self):
      self.assertEqual(C_RHash(58, 9, 6), tuple([1, 1, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_101110011(self):
      self.assertEqual(C_RHash(43, 9, 6), tuple([1, 0, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_011110011(self):
      self.assertEqual(C_RHash(22, 9, 6), tuple([0, 1, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_111001011(self):
      self.assertEqual(C_RHash(65, 9, 6), tuple([1, 1, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_110101011(self):
      self.assertEqual(C_RHash(55, 9, 6), tuple([1, 1, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_101101011(self):
      self.assertEqual(C_RHash(40, 9, 6), tuple([1, 0, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_011101011(self):
      self.assertEqual(C_RHash(19, 9, 6), tuple([0, 1, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_110011011(self):
      self.assertEqual(C_RHash(51, 9, 6), tuple([1, 1, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_101011011(self):
      self.assertEqual(C_RHash(36, 9, 6), tuple([1, 0, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_011011011(self):
      self.assertEqual(C_RHash(15, 9, 6), tuple([0, 1, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_100111011(self):
      self.assertEqual(C_RHash(31, 9, 6), tuple([1, 0, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_010111011(self):
      self.assertEqual(C_RHash(10, 9, 6), tuple([0, 1, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_001111011(self):
      self.assertEqual(C_RHash(4, 9, 6), tuple([0, 0, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_111000111(self):
      self.assertEqual(C_RHash(64, 9, 6), tuple([1, 1, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_110100111(self):
      self.assertEqual(C_RHash(54, 9, 6), tuple([1, 1, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_101100111(self):
      self.assertEqual(C_RHash(39, 9, 6), tuple([1, 0, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_011100111(self):
      self.assertEqual(C_RHash(18, 9, 6), tuple([0, 1, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_110010111(self):
      self.assertEqual(C_RHash(50, 9, 6), tuple([1, 1, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_101010111(self):
      self.assertEqual(C_RHash(35, 9, 6), tuple([1, 0, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_011010111(self):
      self.assertEqual(C_RHash(14, 9, 6), tuple([0, 1, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_100110111(self):
      self.assertEqual(C_RHash(30, 9, 6), tuple([1, 0, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_010110111(self):
      self.assertEqual(C_RHash(9, 9, 6), tuple([0, 1, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_001110111(self):
      self.assertEqual(C_RHash(3, 9, 6), tuple([0, 0, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_110001111(self):
      self.assertEqual(C_RHash(49, 9, 6), tuple([1, 1, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_101001111(self):
      self.assertEqual(C_RHash(34, 9, 6), tuple([1, 0, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_011001111(self):
      self.assertEqual(C_RHash(13, 9, 6), tuple([0, 1, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_100101111(self):
      self.assertEqual(C_RHash(29, 9, 6), tuple([1, 0, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_010101111(self):
      self.assertEqual(C_RHash(8, 9, 6), tuple([0, 1, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_001101111(self):
      self.assertEqual(C_RHash(2, 9, 6), tuple([0, 0, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_100011111(self):
      self.assertEqual(C_RHash(28, 9, 6), tuple([1, 0, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_010011111(self):
      self.assertEqual(C_RHash(7, 9, 6), tuple([0, 1, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_001011111(self):
      self.assertEqual(C_RHash(1, 9, 6), tuple([0, 0, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_000111111(self):
      self.assertEqual(C_RHash(0, 9, 6), tuple([0, 0, 0, 1, 1, 1, 1, 1, 1]))

class HashTest_n9_r7(unittest.TestCase):
  def test_C_Hash_range_111111100(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111111010(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111110110(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111101110(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111011110(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110111110(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101111110(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011111110(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111111001(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111110101(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111101101(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111011101(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110111101(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101111101(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011111101(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111110011(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111101011(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111011011(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110111011(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101111011(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011111011(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111100111(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111010111(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110110111(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101110111(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011110111(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111001111(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110101111(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101101111(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011101111(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110011111(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101011111(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011011111(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_100111111(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_010111111(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_001111111(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1], 7)
      self.assert_(C(9, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0], 7)] = [1, 1, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0], 7)] = [1, 1, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0], 7)] = [1, 1, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0], 7)] = [1, 1, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0], 7)] = [1, 1, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0], 7)] = [1, 1, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0], 7)] = [1, 0, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0], 7)] = [0, 1, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1], 7)] = [1, 1, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1], 7)] = [1, 1, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1], 7)] = [1, 1, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1], 7)] = [1, 1, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1], 7)] = [1, 1, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1], 7)] = [1, 0, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1], 7)] = [0, 1, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1], 7)] = [1, 1, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1], 7)] = [1, 1, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1], 7)] = [1, 1, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1], 7)] = [1, 1, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1], 7)] = [1, 0, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1], 7)] = [0, 1, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1], 7)] = [1, 1, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1], 7)] = [1, 1, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1], 7)] = [1, 1, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1], 7)] = [1, 0, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1], 7)] = [0, 1, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1], 7)] = [1, 1, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1], 7)] = [1, 1, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1], 7)] = [1, 0, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1], 7)] = [0, 1, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1], 7)] = [1, 1, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1], 7)] = [1, 0, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1], 7)] = [0, 1, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1], 7)] = [1, 0, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1], 7)] = [0, 1, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1], 7)] = [0, 0, 1, 1, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 36)

  def test_C_RHash_soundness_111111100(self):
      self.assertEqual(C_RHash(35, 9, 7), tuple([1, 1, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_111111010(self):
      self.assertEqual(C_RHash(34, 9, 7), tuple([1, 1, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_111110110(self):
      self.assertEqual(C_RHash(32, 9, 7), tuple([1, 1, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_111101110(self):
      self.assertEqual(C_RHash(29, 9, 7), tuple([1, 1, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_111011110(self):
      self.assertEqual(C_RHash(25, 9, 7), tuple([1, 1, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_110111110(self):
      self.assertEqual(C_RHash(20, 9, 7), tuple([1, 1, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_101111110(self):
      self.assertEqual(C_RHash(14, 9, 7), tuple([1, 0, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_011111110(self):
      self.assertEqual(C_RHash(7, 9, 7), tuple([0, 1, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_111111001(self):
      self.assertEqual(C_RHash(33, 9, 7), tuple([1, 1, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_111110101(self):
      self.assertEqual(C_RHash(31, 9, 7), tuple([1, 1, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_111101101(self):
      self.assertEqual(C_RHash(28, 9, 7), tuple([1, 1, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_111011101(self):
      self.assertEqual(C_RHash(24, 9, 7), tuple([1, 1, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_110111101(self):
      self.assertEqual(C_RHash(19, 9, 7), tuple([1, 1, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_101111101(self):
      self.assertEqual(C_RHash(13, 9, 7), tuple([1, 0, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_011111101(self):
      self.assertEqual(C_RHash(6, 9, 7), tuple([0, 1, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_111110011(self):
      self.assertEqual(C_RHash(30, 9, 7), tuple([1, 1, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_111101011(self):
      self.assertEqual(C_RHash(27, 9, 7), tuple([1, 1, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_111011011(self):
      self.assertEqual(C_RHash(23, 9, 7), tuple([1, 1, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_110111011(self):
      self.assertEqual(C_RHash(18, 9, 7), tuple([1, 1, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_101111011(self):
      self.assertEqual(C_RHash(12, 9, 7), tuple([1, 0, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_011111011(self):
      self.assertEqual(C_RHash(5, 9, 7), tuple([0, 1, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_111100111(self):
      self.assertEqual(C_RHash(26, 9, 7), tuple([1, 1, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_111010111(self):
      self.assertEqual(C_RHash(22, 9, 7), tuple([1, 1, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_110110111(self):
      self.assertEqual(C_RHash(17, 9, 7), tuple([1, 1, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_101110111(self):
      self.assertEqual(C_RHash(11, 9, 7), tuple([1, 0, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_011110111(self):
      self.assertEqual(C_RHash(4, 9, 7), tuple([0, 1, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_111001111(self):
      self.assertEqual(C_RHash(21, 9, 7), tuple([1, 1, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_110101111(self):
      self.assertEqual(C_RHash(16, 9, 7), tuple([1, 1, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_101101111(self):
      self.assertEqual(C_RHash(10, 9, 7), tuple([1, 0, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_011101111(self):
      self.assertEqual(C_RHash(3, 9, 7), tuple([0, 1, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_110011111(self):
      self.assertEqual(C_RHash(15, 9, 7), tuple([1, 1, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_101011111(self):
      self.assertEqual(C_RHash(9, 9, 7), tuple([1, 0, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_011011111(self):
      self.assertEqual(C_RHash(2, 9, 7), tuple([0, 1, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_100111111(self):
      self.assertEqual(C_RHash(8, 9, 7), tuple([1, 0, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_010111111(self):
      self.assertEqual(C_RHash(1, 9, 7), tuple([0, 1, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_001111111(self):
      self.assertEqual(C_RHash(0, 9, 7), tuple([0, 0, 1, 1, 1, 1, 1, 1, 1]))

class HashTest_n9_r8(unittest.TestCase):
  def test_C_Hash_range_111111110(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0], 8)
      self.assert_(C(9, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111111101(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1], 8)
      self.assert_(C(9, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111111011(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1], 8)
      self.assert_(C(9, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111110111(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1], 8)
      self.assert_(C(9, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111101111(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1], 8)
      self.assert_(C(9, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_111011111(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1], 8)
      self.assert_(C(9, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_110111111(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1], 8)
      self.assert_(C(9, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_101111111(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1], 8)
      self.assert_(C(9, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_011111111(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1], 8)
      self.assert_(C(9, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0], 8)] = [1, 1, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1], 8)] = [1, 1, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1], 8)] = [1, 1, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1], 8)] = [1, 1, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1], 8)] = [1, 1, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1], 8)] = [1, 1, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1], 8)] = [1, 1, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1], 8)] = [1, 0, 1, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1], 8)] = [0, 1, 1, 1, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 9)

  def test_C_RHash_soundness_111111110(self):
      self.assertEqual(C_RHash(8, 9, 8), tuple([1, 1, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_111111101(self):
      self.assertEqual(C_RHash(7, 9, 8), tuple([1, 1, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_111111011(self):
      self.assertEqual(C_RHash(6, 9, 8), tuple([1, 1, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_111110111(self):
      self.assertEqual(C_RHash(5, 9, 8), tuple([1, 1, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_111101111(self):
      self.assertEqual(C_RHash(4, 9, 8), tuple([1, 1, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_111011111(self):
      self.assertEqual(C_RHash(3, 9, 8), tuple([1, 1, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_110111111(self):
      self.assertEqual(C_RHash(2, 9, 8), tuple([1, 1, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_101111111(self):
      self.assertEqual(C_RHash(1, 9, 8), tuple([1, 0, 1, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_011111111(self):
      self.assertEqual(C_RHash(0, 9, 8), tuple([0, 1, 1, 1, 1, 1, 1, 1, 1]))

class HashTest_n10_r1(unittest.TestCase):
  def test_C_Hash_range_1000000000(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 1)
      self.assert_(C(10, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100000000(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 1)
      self.assert_(C(10, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010000000(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 1)
      self.assert_(C(10, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001000000(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 1)
      self.assert_(C(10, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000100000(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0, 0], 1)
      self.assert_(C(10, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000010000(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0, 0], 1)
      self.assert_(C(10, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000001000(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0, 0], 1)
      self.assert_(C(10, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000000100(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0, 0], 1)
      self.assert_(C(10, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000000010(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1, 0], 1)
      self.assert_(C(10, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000000001(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 0, 1], 1)
      self.assert_(C(10, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 1)] = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 1)] = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 1)] = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 1)] = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0, 0], 1)] = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0, 0], 1)] = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0, 0], 1)] = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0, 0], 1)] = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1, 0], 1)] = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 0, 1], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 0, 1], 1)] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
    self.assertEqual(len(d), 10)

  def test_C_RHash_soundness_1000000000(self):
      self.assertEqual(C_RHash(9, 10, 1), tuple([1, 0, 0, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0100000000(self):
      self.assertEqual(C_RHash(8, 10, 1), tuple([0, 1, 0, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0010000000(self):
      self.assertEqual(C_RHash(7, 10, 1), tuple([0, 0, 1, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0001000000(self):
      self.assertEqual(C_RHash(6, 10, 1), tuple([0, 0, 0, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0000100000(self):
      self.assertEqual(C_RHash(5, 10, 1), tuple([0, 0, 0, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0000010000(self):
      self.assertEqual(C_RHash(4, 10, 1), tuple([0, 0, 0, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0000001000(self):
      self.assertEqual(C_RHash(3, 10, 1), tuple([0, 0, 0, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0000000100(self):
      self.assertEqual(C_RHash(2, 10, 1), tuple([0, 0, 0, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0000000010(self):
      self.assertEqual(C_RHash(1, 10, 1), tuple([0, 0, 0, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0000000001(self):
      self.assertEqual(C_RHash(0, 10, 1), tuple([0, 0, 0, 0, 0, 0, 0, 0, 0, 1]))

class HashTest_n10_r2(unittest.TestCase):
  def test_C_Hash_range_1100000000(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010000000(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110000000(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001000000(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101000000(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011000000(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000100000(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100100000(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010100000(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001100000(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000010000(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100010000(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010010000(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001010000(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000110000(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000001000(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100001000(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010001000(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001001000(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000101000(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000011000(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000000100(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100000100(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010000100(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001000100(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000100100(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000010100(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000001100(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000000010(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100000010(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010000010(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001000010(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000100010(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000010010(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000001010(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000000110(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1, 0], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000000001(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0, 1], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100000001(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0, 1], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010000001(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0, 1], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001000001(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0, 1], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000100001(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0, 1], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000010001(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0, 1], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000001001(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0, 1], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000000101(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0, 1], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000000011(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1, 1], 2)
      self.assert_(C(10, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0, 0], 2)] = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0, 0], 2)] = [1, 0, 1, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0, 0], 2)] = [0, 1, 1, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0, 0], 2)] = [1, 0, 0, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0, 0], 2)] = [0, 1, 0, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0, 0], 2)] = [0, 0, 1, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0, 0], 2)] = [1, 0, 0, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0, 0], 2)] = [0, 1, 0, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0, 0], 2)] = [0, 0, 1, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0, 0], 2)] = [0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0, 0], 2)] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0, 0], 2)] = [0, 1, 0, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0, 0], 2)] = [0, 0, 1, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0, 0], 2)] = [0, 0, 0, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0, 0], 2)] = [0, 0, 0, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0, 0], 2)] = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0, 0], 2)] = [0, 1, 0, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0, 0], 2)] = [0, 0, 1, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0, 0], 2)] = [0, 0, 0, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0, 0], 2)] = [0, 0, 0, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0, 0], 2)] = [0, 0, 0, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0, 0], 2)] = [1, 0, 0, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0, 0], 2)] = [0, 1, 0, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0, 0], 2)] = [0, 0, 1, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0, 0], 2)] = [0, 0, 0, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0, 0], 2)] = [0, 0, 0, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0, 0], 2)] = [0, 0, 0, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0, 0], 2)] = [0, 0, 0, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1, 0], 2)] = [1, 0, 0, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1, 0], 2)] = [0, 1, 0, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1, 0], 2)] = [0, 0, 1, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1, 0], 2)] = [0, 0, 0, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1, 0], 2)] = [0, 0, 0, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1, 0], 2)] = [0, 0, 0, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1, 0], 2)] = [0, 0, 0, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1, 0], 2)] = [0, 0, 0, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0, 1], 2)] = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0, 1], 2)] = [0, 1, 0, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0, 1], 2)] = [0, 0, 1, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0, 1], 2)] = [0, 0, 0, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0, 1], 2)] = [0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0, 1], 2)] = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0, 1], 2)] = [0, 0, 0, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0, 1], 2)] = [0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1, 1], 2)] = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1]
    self.assertEqual(len(d), 45)

  def test_C_RHash_soundness_1100000000(self):
      self.assertEqual(C_RHash(44, 10, 2), tuple([1, 1, 0, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1010000000(self):
      self.assertEqual(C_RHash(43, 10, 2), tuple([1, 0, 1, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0110000000(self):
      self.assertEqual(C_RHash(35, 10, 2), tuple([0, 1, 1, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1001000000(self):
      self.assertEqual(C_RHash(42, 10, 2), tuple([1, 0, 0, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0101000000(self):
      self.assertEqual(C_RHash(34, 10, 2), tuple([0, 1, 0, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0011000000(self):
      self.assertEqual(C_RHash(27, 10, 2), tuple([0, 0, 1, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1000100000(self):
      self.assertEqual(C_RHash(41, 10, 2), tuple([1, 0, 0, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0100100000(self):
      self.assertEqual(C_RHash(33, 10, 2), tuple([0, 1, 0, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0010100000(self):
      self.assertEqual(C_RHash(26, 10, 2), tuple([0, 0, 1, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0001100000(self):
      self.assertEqual(C_RHash(20, 10, 2), tuple([0, 0, 0, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1000010000(self):
      self.assertEqual(C_RHash(40, 10, 2), tuple([1, 0, 0, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0100010000(self):
      self.assertEqual(C_RHash(32, 10, 2), tuple([0, 1, 0, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0010010000(self):
      self.assertEqual(C_RHash(25, 10, 2), tuple([0, 0, 1, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0001010000(self):
      self.assertEqual(C_RHash(19, 10, 2), tuple([0, 0, 0, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0000110000(self):
      self.assertEqual(C_RHash(14, 10, 2), tuple([0, 0, 0, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1000001000(self):
      self.assertEqual(C_RHash(39, 10, 2), tuple([1, 0, 0, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0100001000(self):
      self.assertEqual(C_RHash(31, 10, 2), tuple([0, 1, 0, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0010001000(self):
      self.assertEqual(C_RHash(24, 10, 2), tuple([0, 0, 1, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0001001000(self):
      self.assertEqual(C_RHash(18, 10, 2), tuple([0, 0, 0, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0000101000(self):
      self.assertEqual(C_RHash(13, 10, 2), tuple([0, 0, 0, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0000011000(self):
      self.assertEqual(C_RHash(9, 10, 2), tuple([0, 0, 0, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1000000100(self):
      self.assertEqual(C_RHash(38, 10, 2), tuple([1, 0, 0, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0100000100(self):
      self.assertEqual(C_RHash(30, 10, 2), tuple([0, 1, 0, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0010000100(self):
      self.assertEqual(C_RHash(23, 10, 2), tuple([0, 0, 1, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0001000100(self):
      self.assertEqual(C_RHash(17, 10, 2), tuple([0, 0, 0, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0000100100(self):
      self.assertEqual(C_RHash(12, 10, 2), tuple([0, 0, 0, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0000010100(self):
      self.assertEqual(C_RHash(8, 10, 2), tuple([0, 0, 0, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0000001100(self):
      self.assertEqual(C_RHash(5, 10, 2), tuple([0, 0, 0, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1000000010(self):
      self.assertEqual(C_RHash(37, 10, 2), tuple([1, 0, 0, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0100000010(self):
      self.assertEqual(C_RHash(29, 10, 2), tuple([0, 1, 0, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0010000010(self):
      self.assertEqual(C_RHash(22, 10, 2), tuple([0, 0, 1, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0001000010(self):
      self.assertEqual(C_RHash(16, 10, 2), tuple([0, 0, 0, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0000100010(self):
      self.assertEqual(C_RHash(11, 10, 2), tuple([0, 0, 0, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0000010010(self):
      self.assertEqual(C_RHash(7, 10, 2), tuple([0, 0, 0, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0000001010(self):
      self.assertEqual(C_RHash(4, 10, 2), tuple([0, 0, 0, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0000000110(self):
      self.assertEqual(C_RHash(2, 10, 2), tuple([0, 0, 0, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1000000001(self):
      self.assertEqual(C_RHash(36, 10, 2), tuple([1, 0, 0, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0100000001(self):
      self.assertEqual(C_RHash(28, 10, 2), tuple([0, 1, 0, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0010000001(self):
      self.assertEqual(C_RHash(21, 10, 2), tuple([0, 0, 1, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0001000001(self):
      self.assertEqual(C_RHash(15, 10, 2), tuple([0, 0, 0, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0000100001(self):
      self.assertEqual(C_RHash(10, 10, 2), tuple([0, 0, 0, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0000010001(self):
      self.assertEqual(C_RHash(6, 10, 2), tuple([0, 0, 0, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0000001001(self):
      self.assertEqual(C_RHash(3, 10, 2), tuple([0, 0, 0, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0000000101(self):
      self.assertEqual(C_RHash(1, 10, 2), tuple([0, 0, 0, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0000000011(self):
      self.assertEqual(C_RHash(0, 10, 2), tuple([0, 0, 0, 0, 0, 0, 0, 0, 1, 1]))

class HashTest_n10_r3(unittest.TestCase):
  def test_C_Hash_range_1110000000(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101000000(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011000000(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111000000(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100100000(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010100000(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110100000(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001100000(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101100000(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011100000(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100010000(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010010000(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110010000(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001010000(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101010000(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011010000(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000110000(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100110000(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010110000(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001110000(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100001000(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010001000(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110001000(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001001000(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101001000(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011001000(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000101000(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100101000(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010101000(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001101000(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000011000(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100011000(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010011000(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001011000(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000111000(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100000100(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010000100(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110000100(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001000100(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101000100(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011000100(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000100100(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100100100(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010100100(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001100100(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000010100(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100010100(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010010100(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001010100(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000110100(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000001100(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100001100(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010001100(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001001100(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000101100(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000011100(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100000010(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010000010(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110000010(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001000010(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101000010(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011000010(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000100010(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100100010(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010100010(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001100010(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000010010(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100010010(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010010010(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001010010(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000110010(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000001010(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100001010(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010001010(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001001010(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000101010(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000011010(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000000110(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100000110(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010000110(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001000110(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000100110(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000010110(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000001110(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1, 0], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100000001(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010000001(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110000001(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001000001(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101000001(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011000001(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000100001(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100100001(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010100001(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001100001(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000010001(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100010001(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010010001(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001010001(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000110001(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000001001(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100001001(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010001001(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001001001(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000101001(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000011001(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000000101(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100000101(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010000101(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001000101(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000100101(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000010101(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000001101(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000000011(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100000011(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010000011(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001000011(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000100011(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000010011(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000001011(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000000111(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1, 1], 3)
      self.assert_(C(10, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 3)] = [1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0, 0], 3)] = [1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0, 0], 3)] = [1, 0, 1, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0, 0], 3)] = [0, 1, 1, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0, 0], 3)] = [1, 1, 0, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0, 0], 3)] = [1, 0, 1, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0, 0], 3)] = [0, 1, 1, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0, 0], 3)] = [1, 0, 0, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0, 0], 3)] = [0, 1, 0, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0, 0], 3)] = [0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0, 0], 3)] = [1, 1, 0, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0, 0], 3)] = [1, 0, 1, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0, 0], 3)] = [0, 1, 1, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0, 0], 3)] = [1, 0, 0, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0, 0], 3)] = [0, 1, 0, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0, 0], 3)] = [0, 0, 1, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0, 0], 3)] = [1, 0, 0, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0, 0], 3)] = [0, 1, 0, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0, 0], 3)] = [0, 0, 1, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0, 0], 3)] = [0, 0, 0, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0, 0], 3)] = [1, 1, 0, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0, 0], 3)] = [1, 0, 1, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0, 0], 3)] = [0, 1, 1, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0, 0], 3)] = [1, 0, 0, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0, 0], 3)] = [0, 1, 0, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0, 0], 3)] = [0, 0, 1, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0, 0], 3)] = [1, 0, 0, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0, 0], 3)] = [0, 1, 0, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0, 0], 3)] = [0, 0, 1, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0, 0], 3)] = [0, 0, 0, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0, 0], 3)] = [1, 0, 0, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0, 0], 3)] = [0, 1, 0, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0, 0], 3)] = [0, 0, 1, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0, 0], 3)] = [0, 0, 0, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0, 0], 3)] = [0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0, 0], 3)] = [1, 1, 0, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0, 0], 3)] = [1, 0, 1, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0, 0], 3)] = [0, 1, 1, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0, 0], 3)] = [1, 0, 0, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0, 0], 3)] = [0, 1, 0, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0, 0], 3)] = [0, 0, 1, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0, 0], 3)] = [1, 0, 0, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0, 0], 3)] = [0, 1, 0, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0, 0], 3)] = [0, 0, 1, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0, 0], 3)] = [0, 0, 0, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0, 0], 3)] = [1, 0, 0, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0, 0], 3)] = [0, 1, 0, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0, 0], 3)] = [0, 0, 1, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0, 0], 3)] = [0, 0, 0, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0, 0], 3)] = [0, 0, 0, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0, 0], 3)] = [1, 0, 0, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0, 0], 3)] = [0, 1, 0, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0, 0], 3)] = [0, 0, 1, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0, 0], 3)] = [0, 0, 0, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0, 0], 3)] = [0, 0, 0, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0, 0], 3)] = [0, 0, 0, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1, 0], 3)] = [1, 1, 0, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1, 0], 3)] = [1, 0, 1, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1, 0], 3)] = [0, 1, 1, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1, 0], 3)] = [1, 0, 0, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1, 0], 3)] = [0, 1, 0, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1, 0], 3)] = [0, 0, 1, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1, 0], 3)] = [1, 0, 0, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1, 0], 3)] = [0, 1, 0, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1, 0], 3)] = [0, 0, 1, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1, 0], 3)] = [0, 0, 0, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1, 0], 3)] = [1, 0, 0, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1, 0], 3)] = [0, 1, 0, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1, 0], 3)] = [0, 0, 1, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1, 0], 3)] = [0, 0, 0, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1, 0], 3)] = [0, 0, 0, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1, 0], 3)] = [1, 0, 0, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1, 0], 3)] = [0, 1, 0, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1, 0], 3)] = [0, 0, 1, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1, 0], 3)] = [0, 0, 0, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1, 0], 3)] = [0, 0, 0, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1, 0], 3)] = [0, 0, 0, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1, 0], 3)] = [1, 0, 0, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1, 0], 3)] = [0, 1, 0, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1, 0], 3)] = [0, 0, 1, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1, 0], 3)] = [0, 0, 0, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1, 0], 3)] = [0, 0, 0, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1, 0], 3)] = [0, 0, 0, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1, 0], 3)] = [0, 0, 0, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0, 1], 3)] = [1, 1, 0, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0, 1], 3)] = [1, 0, 1, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0, 1], 3)] = [0, 1, 1, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0, 1], 3)] = [1, 0, 0, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0, 1], 3)] = [0, 1, 0, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0, 1], 3)] = [0, 0, 1, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0, 1], 3)] = [1, 0, 0, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0, 1], 3)] = [0, 1, 0, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0, 1], 3)] = [0, 0, 1, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0, 1], 3)] = [0, 0, 0, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0, 1], 3)] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0, 1], 3)] = [0, 1, 0, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0, 1], 3)] = [0, 0, 1, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0, 1], 3)] = [0, 0, 0, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0, 1], 3)] = [0, 0, 0, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0, 1], 3)] = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0, 1], 3)] = [0, 1, 0, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0, 1], 3)] = [0, 0, 1, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0, 1], 3)] = [0, 0, 0, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0, 1], 3)] = [0, 0, 0, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0, 1], 3)] = [0, 0, 0, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0, 1], 3)] = [1, 0, 0, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0, 1], 3)] = [0, 1, 0, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0, 1], 3)] = [0, 0, 1, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0, 1], 3)] = [0, 0, 0, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0, 1], 3)] = [0, 0, 0, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0, 1], 3)] = [0, 0, 0, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0, 1], 3)] = [0, 0, 0, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1, 1], 3)] = [1, 0, 0, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1, 1], 3)] = [0, 1, 0, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1, 1], 3)] = [0, 0, 1, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1, 1], 3)] = [0, 0, 0, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1, 1], 3)] = [0, 0, 0, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1, 1], 3)] = [0, 0, 0, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1, 1], 3)] = [0, 0, 0, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1, 1], 3)] = [0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
    self.assertEqual(len(d), 120)

  def test_C_RHash_soundness_1110000000(self):
      self.assertEqual(C_RHash(119, 10, 3), tuple([1, 1, 1, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1101000000(self):
      self.assertEqual(C_RHash(118, 10, 3), tuple([1, 1, 0, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1011000000(self):
      self.assertEqual(C_RHash(111, 10, 3), tuple([1, 0, 1, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0111000000(self):
      self.assertEqual(C_RHash(83, 10, 3), tuple([0, 1, 1, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1100100000(self):
      self.assertEqual(C_RHash(117, 10, 3), tuple([1, 1, 0, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1010100000(self):
      self.assertEqual(C_RHash(110, 10, 3), tuple([1, 0, 1, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0110100000(self):
      self.assertEqual(C_RHash(82, 10, 3), tuple([0, 1, 1, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1001100000(self):
      self.assertEqual(C_RHash(104, 10, 3), tuple([1, 0, 0, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0101100000(self):
      self.assertEqual(C_RHash(76, 10, 3), tuple([0, 1, 0, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0011100000(self):
      self.assertEqual(C_RHash(55, 10, 3), tuple([0, 0, 1, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1100010000(self):
      self.assertEqual(C_RHash(116, 10, 3), tuple([1, 1, 0, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1010010000(self):
      self.assertEqual(C_RHash(109, 10, 3), tuple([1, 0, 1, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0110010000(self):
      self.assertEqual(C_RHash(81, 10, 3), tuple([0, 1, 1, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1001010000(self):
      self.assertEqual(C_RHash(103, 10, 3), tuple([1, 0, 0, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0101010000(self):
      self.assertEqual(C_RHash(75, 10, 3), tuple([0, 1, 0, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0011010000(self):
      self.assertEqual(C_RHash(54, 10, 3), tuple([0, 0, 1, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1000110000(self):
      self.assertEqual(C_RHash(98, 10, 3), tuple([1, 0, 0, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0100110000(self):
      self.assertEqual(C_RHash(70, 10, 3), tuple([0, 1, 0, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0010110000(self):
      self.assertEqual(C_RHash(49, 10, 3), tuple([0, 0, 1, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0001110000(self):
      self.assertEqual(C_RHash(34, 10, 3), tuple([0, 0, 0, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1100001000(self):
      self.assertEqual(C_RHash(115, 10, 3), tuple([1, 1, 0, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1010001000(self):
      self.assertEqual(C_RHash(108, 10, 3), tuple([1, 0, 1, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0110001000(self):
      self.assertEqual(C_RHash(80, 10, 3), tuple([0, 1, 1, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1001001000(self):
      self.assertEqual(C_RHash(102, 10, 3), tuple([1, 0, 0, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0101001000(self):
      self.assertEqual(C_RHash(74, 10, 3), tuple([0, 1, 0, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0011001000(self):
      self.assertEqual(C_RHash(53, 10, 3), tuple([0, 0, 1, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1000101000(self):
      self.assertEqual(C_RHash(97, 10, 3), tuple([1, 0, 0, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0100101000(self):
      self.assertEqual(C_RHash(69, 10, 3), tuple([0, 1, 0, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0010101000(self):
      self.assertEqual(C_RHash(48, 10, 3), tuple([0, 0, 1, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0001101000(self):
      self.assertEqual(C_RHash(33, 10, 3), tuple([0, 0, 0, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1000011000(self):
      self.assertEqual(C_RHash(93, 10, 3), tuple([1, 0, 0, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0100011000(self):
      self.assertEqual(C_RHash(65, 10, 3), tuple([0, 1, 0, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0010011000(self):
      self.assertEqual(C_RHash(44, 10, 3), tuple([0, 0, 1, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0001011000(self):
      self.assertEqual(C_RHash(29, 10, 3), tuple([0, 0, 0, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0000111000(self):
      self.assertEqual(C_RHash(19, 10, 3), tuple([0, 0, 0, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1100000100(self):
      self.assertEqual(C_RHash(114, 10, 3), tuple([1, 1, 0, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1010000100(self):
      self.assertEqual(C_RHash(107, 10, 3), tuple([1, 0, 1, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0110000100(self):
      self.assertEqual(C_RHash(79, 10, 3), tuple([0, 1, 1, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1001000100(self):
      self.assertEqual(C_RHash(101, 10, 3), tuple([1, 0, 0, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0101000100(self):
      self.assertEqual(C_RHash(73, 10, 3), tuple([0, 1, 0, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0011000100(self):
      self.assertEqual(C_RHash(52, 10, 3), tuple([0, 0, 1, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1000100100(self):
      self.assertEqual(C_RHash(96, 10, 3), tuple([1, 0, 0, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0100100100(self):
      self.assertEqual(C_RHash(68, 10, 3), tuple([0, 1, 0, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0010100100(self):
      self.assertEqual(C_RHash(47, 10, 3), tuple([0, 0, 1, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0001100100(self):
      self.assertEqual(C_RHash(32, 10, 3), tuple([0, 0, 0, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1000010100(self):
      self.assertEqual(C_RHash(92, 10, 3), tuple([1, 0, 0, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0100010100(self):
      self.assertEqual(C_RHash(64, 10, 3), tuple([0, 1, 0, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0010010100(self):
      self.assertEqual(C_RHash(43, 10, 3), tuple([0, 0, 1, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0001010100(self):
      self.assertEqual(C_RHash(28, 10, 3), tuple([0, 0, 0, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0000110100(self):
      self.assertEqual(C_RHash(18, 10, 3), tuple([0, 0, 0, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1000001100(self):
      self.assertEqual(C_RHash(89, 10, 3), tuple([1, 0, 0, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0100001100(self):
      self.assertEqual(C_RHash(61, 10, 3), tuple([0, 1, 0, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0010001100(self):
      self.assertEqual(C_RHash(40, 10, 3), tuple([0, 0, 1, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0001001100(self):
      self.assertEqual(C_RHash(25, 10, 3), tuple([0, 0, 0, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0000101100(self):
      self.assertEqual(C_RHash(15, 10, 3), tuple([0, 0, 0, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0000011100(self):
      self.assertEqual(C_RHash(9, 10, 3), tuple([0, 0, 0, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1100000010(self):
      self.assertEqual(C_RHash(113, 10, 3), tuple([1, 1, 0, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1010000010(self):
      self.assertEqual(C_RHash(106, 10, 3), tuple([1, 0, 1, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0110000010(self):
      self.assertEqual(C_RHash(78, 10, 3), tuple([0, 1, 1, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1001000010(self):
      self.assertEqual(C_RHash(100, 10, 3), tuple([1, 0, 0, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0101000010(self):
      self.assertEqual(C_RHash(72, 10, 3), tuple([0, 1, 0, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0011000010(self):
      self.assertEqual(C_RHash(51, 10, 3), tuple([0, 0, 1, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1000100010(self):
      self.assertEqual(C_RHash(95, 10, 3), tuple([1, 0, 0, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0100100010(self):
      self.assertEqual(C_RHash(67, 10, 3), tuple([0, 1, 0, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0010100010(self):
      self.assertEqual(C_RHash(46, 10, 3), tuple([0, 0, 1, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0001100010(self):
      self.assertEqual(C_RHash(31, 10, 3), tuple([0, 0, 0, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1000010010(self):
      self.assertEqual(C_RHash(91, 10, 3), tuple([1, 0, 0, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0100010010(self):
      self.assertEqual(C_RHash(63, 10, 3), tuple([0, 1, 0, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0010010010(self):
      self.assertEqual(C_RHash(42, 10, 3), tuple([0, 0, 1, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0001010010(self):
      self.assertEqual(C_RHash(27, 10, 3), tuple([0, 0, 0, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0000110010(self):
      self.assertEqual(C_RHash(17, 10, 3), tuple([0, 0, 0, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1000001010(self):
      self.assertEqual(C_RHash(88, 10, 3), tuple([1, 0, 0, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0100001010(self):
      self.assertEqual(C_RHash(60, 10, 3), tuple([0, 1, 0, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0010001010(self):
      self.assertEqual(C_RHash(39, 10, 3), tuple([0, 0, 1, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0001001010(self):
      self.assertEqual(C_RHash(24, 10, 3), tuple([0, 0, 0, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0000101010(self):
      self.assertEqual(C_RHash(14, 10, 3), tuple([0, 0, 0, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0000011010(self):
      self.assertEqual(C_RHash(8, 10, 3), tuple([0, 0, 0, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1000000110(self):
      self.assertEqual(C_RHash(86, 10, 3), tuple([1, 0, 0, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0100000110(self):
      self.assertEqual(C_RHash(58, 10, 3), tuple([0, 1, 0, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0010000110(self):
      self.assertEqual(C_RHash(37, 10, 3), tuple([0, 0, 1, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0001000110(self):
      self.assertEqual(C_RHash(22, 10, 3), tuple([0, 0, 0, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0000100110(self):
      self.assertEqual(C_RHash(12, 10, 3), tuple([0, 0, 0, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0000010110(self):
      self.assertEqual(C_RHash(6, 10, 3), tuple([0, 0, 0, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0000001110(self):
      self.assertEqual(C_RHash(3, 10, 3), tuple([0, 0, 0, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1100000001(self):
      self.assertEqual(C_RHash(112, 10, 3), tuple([1, 1, 0, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1010000001(self):
      self.assertEqual(C_RHash(105, 10, 3), tuple([1, 0, 1, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0110000001(self):
      self.assertEqual(C_RHash(77, 10, 3), tuple([0, 1, 1, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1001000001(self):
      self.assertEqual(C_RHash(99, 10, 3), tuple([1, 0, 0, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0101000001(self):
      self.assertEqual(C_RHash(71, 10, 3), tuple([0, 1, 0, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0011000001(self):
      self.assertEqual(C_RHash(50, 10, 3), tuple([0, 0, 1, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1000100001(self):
      self.assertEqual(C_RHash(94, 10, 3), tuple([1, 0, 0, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0100100001(self):
      self.assertEqual(C_RHash(66, 10, 3), tuple([0, 1, 0, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0010100001(self):
      self.assertEqual(C_RHash(45, 10, 3), tuple([0, 0, 1, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0001100001(self):
      self.assertEqual(C_RHash(30, 10, 3), tuple([0, 0, 0, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1000010001(self):
      self.assertEqual(C_RHash(90, 10, 3), tuple([1, 0, 0, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0100010001(self):
      self.assertEqual(C_RHash(62, 10, 3), tuple([0, 1, 0, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0010010001(self):
      self.assertEqual(C_RHash(41, 10, 3), tuple([0, 0, 1, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0001010001(self):
      self.assertEqual(C_RHash(26, 10, 3), tuple([0, 0, 0, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0000110001(self):
      self.assertEqual(C_RHash(16, 10, 3), tuple([0, 0, 0, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1000001001(self):
      self.assertEqual(C_RHash(87, 10, 3), tuple([1, 0, 0, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0100001001(self):
      self.assertEqual(C_RHash(59, 10, 3), tuple([0, 1, 0, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0010001001(self):
      self.assertEqual(C_RHash(38, 10, 3), tuple([0, 0, 1, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0001001001(self):
      self.assertEqual(C_RHash(23, 10, 3), tuple([0, 0, 0, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0000101001(self):
      self.assertEqual(C_RHash(13, 10, 3), tuple([0, 0, 0, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0000011001(self):
      self.assertEqual(C_RHash(7, 10, 3), tuple([0, 0, 0, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1000000101(self):
      self.assertEqual(C_RHash(85, 10, 3), tuple([1, 0, 0, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0100000101(self):
      self.assertEqual(C_RHash(57, 10, 3), tuple([0, 1, 0, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0010000101(self):
      self.assertEqual(C_RHash(36, 10, 3), tuple([0, 0, 1, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0001000101(self):
      self.assertEqual(C_RHash(21, 10, 3), tuple([0, 0, 0, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0000100101(self):
      self.assertEqual(C_RHash(11, 10, 3), tuple([0, 0, 0, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0000010101(self):
      self.assertEqual(C_RHash(5, 10, 3), tuple([0, 0, 0, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0000001101(self):
      self.assertEqual(C_RHash(2, 10, 3), tuple([0, 0, 0, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1000000011(self):
      self.assertEqual(C_RHash(84, 10, 3), tuple([1, 0, 0, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0100000011(self):
      self.assertEqual(C_RHash(56, 10, 3), tuple([0, 1, 0, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0010000011(self):
      self.assertEqual(C_RHash(35, 10, 3), tuple([0, 0, 1, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0001000011(self):
      self.assertEqual(C_RHash(20, 10, 3), tuple([0, 0, 0, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0000100011(self):
      self.assertEqual(C_RHash(10, 10, 3), tuple([0, 0, 0, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0000010011(self):
      self.assertEqual(C_RHash(4, 10, 3), tuple([0, 0, 0, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0000001011(self):
      self.assertEqual(C_RHash(1, 10, 3), tuple([0, 0, 0, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0000000111(self):
      self.assertEqual(C_RHash(0, 10, 3), tuple([0, 0, 0, 0, 0, 0, 0, 1, 1, 1]))

class HashTest_n10_r4(unittest.TestCase):
  def test_C_Hash_range_1111000000(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110100000(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101100000(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011100000(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111100000(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110010000(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101010000(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011010000(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111010000(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100110000(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010110000(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110110000(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001110000(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101110000(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011110000(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110001000(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101001000(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011001000(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111001000(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100101000(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010101000(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110101000(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001101000(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101101000(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011101000(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100011000(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010011000(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110011000(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001011000(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101011000(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011011000(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000111000(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100111000(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010111000(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001111000(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110000100(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101000100(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011000100(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111000100(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100100100(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010100100(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110100100(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001100100(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101100100(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011100100(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100010100(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010010100(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110010100(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001010100(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101010100(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011010100(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000110100(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100110100(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010110100(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001110100(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100001100(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010001100(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110001100(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001001100(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101001100(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011001100(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000101100(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100101100(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010101100(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001101100(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000011100(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100011100(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010011100(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001011100(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000111100(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110000010(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101000010(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011000010(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111000010(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100100010(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010100010(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110100010(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001100010(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101100010(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011100010(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100010010(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010010010(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110010010(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001010010(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101010010(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011010010(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000110010(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100110010(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010110010(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001110010(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100001010(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010001010(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110001010(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001001010(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101001010(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011001010(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000101010(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100101010(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010101010(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001101010(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000011010(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100011010(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010011010(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001011010(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000111010(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100000110(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010000110(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110000110(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001000110(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101000110(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011000110(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000100110(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100100110(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010100110(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001100110(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000010110(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100010110(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010010110(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001010110(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000110110(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000001110(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100001110(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010001110(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001001110(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000101110(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000011110(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1, 0], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110000001(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101000001(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011000001(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111000001(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100100001(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010100001(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110100001(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001100001(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101100001(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011100001(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100010001(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010010001(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110010001(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001010001(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101010001(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011010001(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000110001(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100110001(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010110001(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001110001(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100001001(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010001001(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110001001(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001001001(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101001001(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011001001(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000101001(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100101001(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010101001(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001101001(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000011001(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100011001(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010011001(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001011001(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000111001(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100000101(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010000101(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110000101(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001000101(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101000101(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011000101(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000100101(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100100101(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010100101(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001100101(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000010101(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100010101(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010010101(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001010101(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000110101(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000001101(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100001101(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010001101(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001001101(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000101101(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000011101(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100000011(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010000011(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110000011(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001000011(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101000011(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011000011(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000100011(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100100011(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010100011(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001100011(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000010011(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100010011(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010010011(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001010011(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000110011(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000001011(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100001011(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010001011(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001001011(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000101011(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000011011(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000000111(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100000111(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010000111(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001000111(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000100111(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000010111(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000001111(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1, 1], 4)
      self.assert_(C(10, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 4)] = [1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0, 0], 4)] = [1, 1, 1, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0, 0], 4)] = [1, 1, 0, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0, 0], 4)] = [1, 0, 1, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0, 0], 4)] = [0, 1, 1, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0, 0], 4)] = [1, 1, 1, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0, 0], 4)] = [1, 1, 0, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0, 0], 4)] = [1, 0, 1, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0, 0], 4)] = [0, 1, 1, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0, 0], 4)] = [1, 1, 0, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0, 0], 4)] = [1, 0, 1, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0, 0], 4)] = [0, 1, 1, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0, 0], 4)] = [1, 0, 0, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0, 0], 4)] = [0, 1, 0, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0, 0], 4)] = [0, 0, 1, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0, 0], 4)] = [1, 1, 1, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0, 0], 4)] = [1, 1, 0, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0, 0], 4)] = [1, 0, 1, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0, 0], 4)] = [0, 1, 1, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0, 0], 4)] = [1, 1, 0, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0, 0], 4)] = [1, 0, 1, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0, 0], 4)] = [0, 1, 1, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0, 0], 4)] = [1, 0, 0, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0, 0], 4)] = [0, 1, 0, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0, 0], 4)] = [0, 0, 1, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0, 0], 4)] = [1, 1, 0, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0, 0], 4)] = [1, 0, 1, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0, 0], 4)] = [0, 1, 1, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0, 0], 4)] = [1, 0, 0, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0, 0], 4)] = [0, 1, 0, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0, 0], 4)] = [0, 0, 1, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0, 0], 4)] = [1, 0, 0, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0, 0], 4)] = [0, 1, 0, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0, 0], 4)] = [0, 0, 1, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0, 0], 4)] = [0, 0, 0, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0, 0], 4)] = [1, 1, 1, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0, 0], 4)] = [1, 1, 0, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0, 0], 4)] = [1, 0, 1, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0, 0], 4)] = [0, 1, 1, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0, 0], 4)] = [1, 1, 0, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0, 0], 4)] = [1, 0, 1, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0, 0], 4)] = [0, 1, 1, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0, 0], 4)] = [1, 0, 0, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0, 0], 4)] = [0, 1, 0, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0, 0], 4)] = [0, 0, 1, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0, 0], 4)] = [1, 1, 0, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0, 0], 4)] = [1, 0, 1, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0, 0], 4)] = [0, 1, 1, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0, 0], 4)] = [1, 0, 0, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0, 0], 4)] = [0, 1, 0, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0, 0], 4)] = [0, 0, 1, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0, 0], 4)] = [1, 0, 0, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0, 0], 4)] = [0, 1, 0, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0, 0], 4)] = [0, 0, 1, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0, 0], 4)] = [0, 0, 0, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0, 0], 4)] = [1, 1, 0, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0, 0], 4)] = [1, 0, 1, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0, 0], 4)] = [0, 1, 1, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0, 0], 4)] = [1, 0, 0, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0, 0], 4)] = [0, 1, 0, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0, 0], 4)] = [0, 0, 1, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0, 0], 4)] = [1, 0, 0, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0, 0], 4)] = [0, 1, 0, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0, 0], 4)] = [0, 0, 1, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0, 0], 4)] = [0, 0, 0, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0, 0], 4)] = [1, 0, 0, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0, 0], 4)] = [0, 1, 0, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0, 0], 4)] = [0, 0, 1, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0, 0], 4)] = [0, 0, 0, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0, 0], 4)] = [0, 0, 0, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1, 0], 4)] = [1, 1, 1, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1, 0], 4)] = [1, 1, 0, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1, 0], 4)] = [1, 0, 1, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1, 0], 4)] = [0, 1, 1, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1, 0], 4)] = [1, 1, 0, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1, 0], 4)] = [1, 0, 1, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1, 0], 4)] = [0, 1, 1, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1, 0], 4)] = [1, 0, 0, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1, 0], 4)] = [0, 1, 0, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1, 0], 4)] = [0, 0, 1, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1, 0], 4)] = [1, 1, 0, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1, 0], 4)] = [1, 0, 1, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1, 0], 4)] = [0, 1, 1, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1, 0], 4)] = [1, 0, 0, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1, 0], 4)] = [0, 1, 0, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1, 0], 4)] = [0, 0, 1, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1, 0], 4)] = [1, 0, 0, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1, 0], 4)] = [0, 1, 0, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1, 0], 4)] = [0, 0, 1, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1, 0], 4)] = [0, 0, 0, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1, 0], 4)] = [1, 1, 0, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1, 0], 4)] = [1, 0, 1, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1, 0], 4)] = [0, 1, 1, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1, 0], 4)] = [1, 0, 0, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1, 0], 4)] = [0, 1, 0, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1, 0], 4)] = [0, 0, 1, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1, 0], 4)] = [1, 0, 0, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1, 0], 4)] = [0, 1, 0, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1, 0], 4)] = [0, 0, 1, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1, 0], 4)] = [0, 0, 0, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1, 0], 4)] = [1, 0, 0, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1, 0], 4)] = [0, 1, 0, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1, 0], 4)] = [0, 0, 1, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1, 0], 4)] = [0, 0, 0, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1, 0], 4)] = [0, 0, 0, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1, 0], 4)] = [1, 1, 0, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1, 0], 4)] = [1, 0, 1, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1, 0], 4)] = [0, 1, 1, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1, 0], 4)] = [1, 0, 0, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1, 0], 4)] = [0, 1, 0, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1, 0], 4)] = [0, 0, 1, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1, 0], 4)] = [1, 0, 0, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1, 0], 4)] = [0, 1, 0, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1, 0], 4)] = [0, 0, 1, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1, 0], 4)] = [0, 0, 0, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1, 0], 4)] = [1, 0, 0, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1, 0], 4)] = [0, 1, 0, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1, 0], 4)] = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1, 0], 4)] = [0, 0, 0, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1, 0], 4)] = [0, 0, 0, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1, 0], 4)] = [1, 0, 0, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1, 0], 4)] = [0, 1, 0, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1, 0], 4)] = [0, 0, 1, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1, 0], 4)] = [0, 0, 0, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1, 0], 4)] = [0, 0, 0, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1, 0], 4)] = [0, 0, 0, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0, 1], 4)] = [1, 1, 1, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0, 1], 4)] = [1, 1, 0, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0, 1], 4)] = [1, 0, 1, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0, 1], 4)] = [0, 1, 1, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0, 1], 4)] = [1, 1, 0, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0, 1], 4)] = [1, 0, 1, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0, 1], 4)] = [0, 1, 1, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0, 1], 4)] = [1, 0, 0, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0, 1], 4)] = [0, 1, 0, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0, 1], 4)] = [0, 0, 1, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0, 1], 4)] = [1, 1, 0, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0, 1], 4)] = [1, 0, 1, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0, 1], 4)] = [0, 1, 1, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0, 1], 4)] = [1, 0, 0, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0, 1], 4)] = [0, 1, 0, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0, 1], 4)] = [0, 0, 1, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0, 1], 4)] = [1, 0, 0, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0, 1], 4)] = [0, 1, 0, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0, 1], 4)] = [0, 0, 1, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0, 1], 4)] = [0, 0, 0, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0, 1], 4)] = [1, 1, 0, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0, 1], 4)] = [1, 0, 1, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0, 1], 4)] = [0, 1, 1, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0, 1], 4)] = [1, 0, 0, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0, 1], 4)] = [0, 1, 0, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0, 1], 4)] = [0, 0, 1, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0, 1], 4)] = [1, 0, 0, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0, 1], 4)] = [0, 1, 0, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0, 1], 4)] = [0, 0, 1, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0, 1], 4)] = [0, 0, 0, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0, 1], 4)] = [1, 0, 0, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0, 1], 4)] = [0, 1, 0, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0, 1], 4)] = [0, 0, 1, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0, 1], 4)] = [0, 0, 0, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0, 1], 4)] = [0, 0, 0, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0, 1], 4)] = [1, 1, 0, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0, 1], 4)] = [1, 0, 1, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0, 1], 4)] = [0, 1, 1, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0, 1], 4)] = [1, 0, 0, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0, 1], 4)] = [0, 1, 0, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0, 1], 4)] = [0, 0, 1, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0, 1], 4)] = [1, 0, 0, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0, 1], 4)] = [0, 1, 0, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0, 1], 4)] = [0, 0, 1, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0, 1], 4)] = [0, 0, 0, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0, 1], 4)] = [1, 0, 0, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0, 1], 4)] = [0, 1, 0, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0, 1], 4)] = [0, 0, 1, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0, 1], 4)] = [0, 0, 0, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0, 1], 4)] = [0, 0, 0, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0, 1], 4)] = [1, 0, 0, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0, 1], 4)] = [0, 1, 0, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0, 1], 4)] = [0, 0, 1, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0, 1], 4)] = [0, 0, 0, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0, 1], 4)] = [0, 0, 0, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0, 1], 4)] = [0, 0, 0, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1, 1], 4)] = [1, 1, 0, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1, 1], 4)] = [1, 0, 1, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1, 1], 4)] = [0, 1, 1, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1, 1], 4)] = [1, 0, 0, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1, 1], 4)] = [0, 1, 0, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1, 1], 4)] = [0, 0, 1, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1, 1], 4)] = [1, 0, 0, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1, 1], 4)] = [0, 1, 0, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1, 1], 4)] = [0, 0, 1, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1, 1], 4)] = [0, 0, 0, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1, 1], 4)] = [1, 0, 0, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1, 1], 4)] = [0, 1, 0, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1, 1], 4)] = [0, 0, 1, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1, 1], 4)] = [0, 0, 0, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1, 1], 4)] = [0, 0, 0, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1, 1], 4)] = [1, 0, 0, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1, 1], 4)] = [0, 1, 0, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1, 1], 4)] = [0, 0, 1, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1, 1], 4)] = [0, 0, 0, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1, 1], 4)] = [0, 0, 0, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1, 1], 4)] = [0, 0, 0, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1, 1], 4)] = [1, 0, 0, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1, 1], 4)] = [0, 1, 0, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1, 1], 4)] = [0, 0, 1, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1, 1], 4)] = [0, 0, 0, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1, 1], 4)] = [0, 0, 0, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1, 1], 4)] = [0, 0, 0, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1, 1], 4)] = [0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
    self.assertEqual(len(d), 210)

  def test_C_RHash_soundness_1111000000(self):
      self.assertEqual(C_RHash(209, 10, 4), tuple([1, 1, 1, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1110100000(self):
      self.assertEqual(C_RHash(208, 10, 4), tuple([1, 1, 1, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1101100000(self):
      self.assertEqual(C_RHash(202, 10, 4), tuple([1, 1, 0, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1011100000(self):
      self.assertEqual(C_RHash(181, 10, 4), tuple([1, 0, 1, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0111100000(self):
      self.assertEqual(C_RHash(125, 10, 4), tuple([0, 1, 1, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1110010000(self):
      self.assertEqual(C_RHash(207, 10, 4), tuple([1, 1, 1, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1101010000(self):
      self.assertEqual(C_RHash(201, 10, 4), tuple([1, 1, 0, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1011010000(self):
      self.assertEqual(C_RHash(180, 10, 4), tuple([1, 0, 1, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0111010000(self):
      self.assertEqual(C_RHash(124, 10, 4), tuple([0, 1, 1, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1100110000(self):
      self.assertEqual(C_RHash(196, 10, 4), tuple([1, 1, 0, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1010110000(self):
      self.assertEqual(C_RHash(175, 10, 4), tuple([1, 0, 1, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0110110000(self):
      self.assertEqual(C_RHash(119, 10, 4), tuple([0, 1, 1, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1001110000(self):
      self.assertEqual(C_RHash(160, 10, 4), tuple([1, 0, 0, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0101110000(self):
      self.assertEqual(C_RHash(104, 10, 4), tuple([0, 1, 0, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0011110000(self):
      self.assertEqual(C_RHash(69, 10, 4), tuple([0, 0, 1, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1110001000(self):
      self.assertEqual(C_RHash(206, 10, 4), tuple([1, 1, 1, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1101001000(self):
      self.assertEqual(C_RHash(200, 10, 4), tuple([1, 1, 0, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1011001000(self):
      self.assertEqual(C_RHash(179, 10, 4), tuple([1, 0, 1, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0111001000(self):
      self.assertEqual(C_RHash(123, 10, 4), tuple([0, 1, 1, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1100101000(self):
      self.assertEqual(C_RHash(195, 10, 4), tuple([1, 1, 0, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1010101000(self):
      self.assertEqual(C_RHash(174, 10, 4), tuple([1, 0, 1, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0110101000(self):
      self.assertEqual(C_RHash(118, 10, 4), tuple([0, 1, 1, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1001101000(self):
      self.assertEqual(C_RHash(159, 10, 4), tuple([1, 0, 0, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0101101000(self):
      self.assertEqual(C_RHash(103, 10, 4), tuple([0, 1, 0, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0011101000(self):
      self.assertEqual(C_RHash(68, 10, 4), tuple([0, 0, 1, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1100011000(self):
      self.assertEqual(C_RHash(191, 10, 4), tuple([1, 1, 0, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1010011000(self):
      self.assertEqual(C_RHash(170, 10, 4), tuple([1, 0, 1, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0110011000(self):
      self.assertEqual(C_RHash(114, 10, 4), tuple([0, 1, 1, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1001011000(self):
      self.assertEqual(C_RHash(155, 10, 4), tuple([1, 0, 0, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0101011000(self):
      self.assertEqual(C_RHash(99, 10, 4), tuple([0, 1, 0, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0011011000(self):
      self.assertEqual(C_RHash(64, 10, 4), tuple([0, 0, 1, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1000111000(self):
      self.assertEqual(C_RHash(145, 10, 4), tuple([1, 0, 0, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0100111000(self):
      self.assertEqual(C_RHash(89, 10, 4), tuple([0, 1, 0, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0010111000(self):
      self.assertEqual(C_RHash(54, 10, 4), tuple([0, 0, 1, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0001111000(self):
      self.assertEqual(C_RHash(34, 10, 4), tuple([0, 0, 0, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1110000100(self):
      self.assertEqual(C_RHash(205, 10, 4), tuple([1, 1, 1, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1101000100(self):
      self.assertEqual(C_RHash(199, 10, 4), tuple([1, 1, 0, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1011000100(self):
      self.assertEqual(C_RHash(178, 10, 4), tuple([1, 0, 1, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0111000100(self):
      self.assertEqual(C_RHash(122, 10, 4), tuple([0, 1, 1, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1100100100(self):
      self.assertEqual(C_RHash(194, 10, 4), tuple([1, 1, 0, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1010100100(self):
      self.assertEqual(C_RHash(173, 10, 4), tuple([1, 0, 1, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0110100100(self):
      self.assertEqual(C_RHash(117, 10, 4), tuple([0, 1, 1, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1001100100(self):
      self.assertEqual(C_RHash(158, 10, 4), tuple([1, 0, 0, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0101100100(self):
      self.assertEqual(C_RHash(102, 10, 4), tuple([0, 1, 0, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0011100100(self):
      self.assertEqual(C_RHash(67, 10, 4), tuple([0, 0, 1, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1100010100(self):
      self.assertEqual(C_RHash(190, 10, 4), tuple([1, 1, 0, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1010010100(self):
      self.assertEqual(C_RHash(169, 10, 4), tuple([1, 0, 1, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0110010100(self):
      self.assertEqual(C_RHash(113, 10, 4), tuple([0, 1, 1, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1001010100(self):
      self.assertEqual(C_RHash(154, 10, 4), tuple([1, 0, 0, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0101010100(self):
      self.assertEqual(C_RHash(98, 10, 4), tuple([0, 1, 0, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0011010100(self):
      self.assertEqual(C_RHash(63, 10, 4), tuple([0, 0, 1, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1000110100(self):
      self.assertEqual(C_RHash(144, 10, 4), tuple([1, 0, 0, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0100110100(self):
      self.assertEqual(C_RHash(88, 10, 4), tuple([0, 1, 0, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0010110100(self):
      self.assertEqual(C_RHash(53, 10, 4), tuple([0, 0, 1, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0001110100(self):
      self.assertEqual(C_RHash(33, 10, 4), tuple([0, 0, 0, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1100001100(self):
      self.assertEqual(C_RHash(187, 10, 4), tuple([1, 1, 0, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1010001100(self):
      self.assertEqual(C_RHash(166, 10, 4), tuple([1, 0, 1, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0110001100(self):
      self.assertEqual(C_RHash(110, 10, 4), tuple([0, 1, 1, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1001001100(self):
      self.assertEqual(C_RHash(151, 10, 4), tuple([1, 0, 0, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0101001100(self):
      self.assertEqual(C_RHash(95, 10, 4), tuple([0, 1, 0, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0011001100(self):
      self.assertEqual(C_RHash(60, 10, 4), tuple([0, 0, 1, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1000101100(self):
      self.assertEqual(C_RHash(141, 10, 4), tuple([1, 0, 0, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0100101100(self):
      self.assertEqual(C_RHash(85, 10, 4), tuple([0, 1, 0, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0010101100(self):
      self.assertEqual(C_RHash(50, 10, 4), tuple([0, 0, 1, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0001101100(self):
      self.assertEqual(C_RHash(30, 10, 4), tuple([0, 0, 0, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1000011100(self):
      self.assertEqual(C_RHash(135, 10, 4), tuple([1, 0, 0, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0100011100(self):
      self.assertEqual(C_RHash(79, 10, 4), tuple([0, 1, 0, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0010011100(self):
      self.assertEqual(C_RHash(44, 10, 4), tuple([0, 0, 1, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0001011100(self):
      self.assertEqual(C_RHash(24, 10, 4), tuple([0, 0, 0, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0000111100(self):
      self.assertEqual(C_RHash(14, 10, 4), tuple([0, 0, 0, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1110000010(self):
      self.assertEqual(C_RHash(204, 10, 4), tuple([1, 1, 1, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1101000010(self):
      self.assertEqual(C_RHash(198, 10, 4), tuple([1, 1, 0, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1011000010(self):
      self.assertEqual(C_RHash(177, 10, 4), tuple([1, 0, 1, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0111000010(self):
      self.assertEqual(C_RHash(121, 10, 4), tuple([0, 1, 1, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1100100010(self):
      self.assertEqual(C_RHash(193, 10, 4), tuple([1, 1, 0, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1010100010(self):
      self.assertEqual(C_RHash(172, 10, 4), tuple([1, 0, 1, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0110100010(self):
      self.assertEqual(C_RHash(116, 10, 4), tuple([0, 1, 1, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1001100010(self):
      self.assertEqual(C_RHash(157, 10, 4), tuple([1, 0, 0, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0101100010(self):
      self.assertEqual(C_RHash(101, 10, 4), tuple([0, 1, 0, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0011100010(self):
      self.assertEqual(C_RHash(66, 10, 4), tuple([0, 0, 1, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1100010010(self):
      self.assertEqual(C_RHash(189, 10, 4), tuple([1, 1, 0, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1010010010(self):
      self.assertEqual(C_RHash(168, 10, 4), tuple([1, 0, 1, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0110010010(self):
      self.assertEqual(C_RHash(112, 10, 4), tuple([0, 1, 1, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1001010010(self):
      self.assertEqual(C_RHash(153, 10, 4), tuple([1, 0, 0, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0101010010(self):
      self.assertEqual(C_RHash(97, 10, 4), tuple([0, 1, 0, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0011010010(self):
      self.assertEqual(C_RHash(62, 10, 4), tuple([0, 0, 1, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1000110010(self):
      self.assertEqual(C_RHash(143, 10, 4), tuple([1, 0, 0, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0100110010(self):
      self.assertEqual(C_RHash(87, 10, 4), tuple([0, 1, 0, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0010110010(self):
      self.assertEqual(C_RHash(52, 10, 4), tuple([0, 0, 1, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0001110010(self):
      self.assertEqual(C_RHash(32, 10, 4), tuple([0, 0, 0, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1100001010(self):
      self.assertEqual(C_RHash(186, 10, 4), tuple([1, 1, 0, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1010001010(self):
      self.assertEqual(C_RHash(165, 10, 4), tuple([1, 0, 1, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0110001010(self):
      self.assertEqual(C_RHash(109, 10, 4), tuple([0, 1, 1, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1001001010(self):
      self.assertEqual(C_RHash(150, 10, 4), tuple([1, 0, 0, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0101001010(self):
      self.assertEqual(C_RHash(94, 10, 4), tuple([0, 1, 0, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0011001010(self):
      self.assertEqual(C_RHash(59, 10, 4), tuple([0, 0, 1, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1000101010(self):
      self.assertEqual(C_RHash(140, 10, 4), tuple([1, 0, 0, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0100101010(self):
      self.assertEqual(C_RHash(84, 10, 4), tuple([0, 1, 0, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0010101010(self):
      self.assertEqual(C_RHash(49, 10, 4), tuple([0, 0, 1, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0001101010(self):
      self.assertEqual(C_RHash(29, 10, 4), tuple([0, 0, 0, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1000011010(self):
      self.assertEqual(C_RHash(134, 10, 4), tuple([1, 0, 0, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0100011010(self):
      self.assertEqual(C_RHash(78, 10, 4), tuple([0, 1, 0, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0010011010(self):
      self.assertEqual(C_RHash(43, 10, 4), tuple([0, 0, 1, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0001011010(self):
      self.assertEqual(C_RHash(23, 10, 4), tuple([0, 0, 0, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0000111010(self):
      self.assertEqual(C_RHash(13, 10, 4), tuple([0, 0, 0, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1100000110(self):
      self.assertEqual(C_RHash(184, 10, 4), tuple([1, 1, 0, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1010000110(self):
      self.assertEqual(C_RHash(163, 10, 4), tuple([1, 0, 1, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0110000110(self):
      self.assertEqual(C_RHash(107, 10, 4), tuple([0, 1, 1, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1001000110(self):
      self.assertEqual(C_RHash(148, 10, 4), tuple([1, 0, 0, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0101000110(self):
      self.assertEqual(C_RHash(92, 10, 4), tuple([0, 1, 0, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0011000110(self):
      self.assertEqual(C_RHash(57, 10, 4), tuple([0, 0, 1, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1000100110(self):
      self.assertEqual(C_RHash(138, 10, 4), tuple([1, 0, 0, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0100100110(self):
      self.assertEqual(C_RHash(82, 10, 4), tuple([0, 1, 0, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0010100110(self):
      self.assertEqual(C_RHash(47, 10, 4), tuple([0, 0, 1, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0001100110(self):
      self.assertEqual(C_RHash(27, 10, 4), tuple([0, 0, 0, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1000010110(self):
      self.assertEqual(C_RHash(132, 10, 4), tuple([1, 0, 0, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0100010110(self):
      self.assertEqual(C_RHash(76, 10, 4), tuple([0, 1, 0, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0010010110(self):
      self.assertEqual(C_RHash(41, 10, 4), tuple([0, 0, 1, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0001010110(self):
      self.assertEqual(C_RHash(21, 10, 4), tuple([0, 0, 0, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0000110110(self):
      self.assertEqual(C_RHash(11, 10, 4), tuple([0, 0, 0, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1000001110(self):
      self.assertEqual(C_RHash(129, 10, 4), tuple([1, 0, 0, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0100001110(self):
      self.assertEqual(C_RHash(73, 10, 4), tuple([0, 1, 0, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0010001110(self):
      self.assertEqual(C_RHash(38, 10, 4), tuple([0, 0, 1, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0001001110(self):
      self.assertEqual(C_RHash(18, 10, 4), tuple([0, 0, 0, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0000101110(self):
      self.assertEqual(C_RHash(8, 10, 4), tuple([0, 0, 0, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0000011110(self):
      self.assertEqual(C_RHash(4, 10, 4), tuple([0, 0, 0, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1110000001(self):
      self.assertEqual(C_RHash(203, 10, 4), tuple([1, 1, 1, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1101000001(self):
      self.assertEqual(C_RHash(197, 10, 4), tuple([1, 1, 0, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1011000001(self):
      self.assertEqual(C_RHash(176, 10, 4), tuple([1, 0, 1, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0111000001(self):
      self.assertEqual(C_RHash(120, 10, 4), tuple([0, 1, 1, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1100100001(self):
      self.assertEqual(C_RHash(192, 10, 4), tuple([1, 1, 0, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1010100001(self):
      self.assertEqual(C_RHash(171, 10, 4), tuple([1, 0, 1, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0110100001(self):
      self.assertEqual(C_RHash(115, 10, 4), tuple([0, 1, 1, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1001100001(self):
      self.assertEqual(C_RHash(156, 10, 4), tuple([1, 0, 0, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0101100001(self):
      self.assertEqual(C_RHash(100, 10, 4), tuple([0, 1, 0, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0011100001(self):
      self.assertEqual(C_RHash(65, 10, 4), tuple([0, 0, 1, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1100010001(self):
      self.assertEqual(C_RHash(188, 10, 4), tuple([1, 1, 0, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1010010001(self):
      self.assertEqual(C_RHash(167, 10, 4), tuple([1, 0, 1, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0110010001(self):
      self.assertEqual(C_RHash(111, 10, 4), tuple([0, 1, 1, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1001010001(self):
      self.assertEqual(C_RHash(152, 10, 4), tuple([1, 0, 0, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0101010001(self):
      self.assertEqual(C_RHash(96, 10, 4), tuple([0, 1, 0, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0011010001(self):
      self.assertEqual(C_RHash(61, 10, 4), tuple([0, 0, 1, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1000110001(self):
      self.assertEqual(C_RHash(142, 10, 4), tuple([1, 0, 0, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0100110001(self):
      self.assertEqual(C_RHash(86, 10, 4), tuple([0, 1, 0, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0010110001(self):
      self.assertEqual(C_RHash(51, 10, 4), tuple([0, 0, 1, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0001110001(self):
      self.assertEqual(C_RHash(31, 10, 4), tuple([0, 0, 0, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1100001001(self):
      self.assertEqual(C_RHash(185, 10, 4), tuple([1, 1, 0, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1010001001(self):
      self.assertEqual(C_RHash(164, 10, 4), tuple([1, 0, 1, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0110001001(self):
      self.assertEqual(C_RHash(108, 10, 4), tuple([0, 1, 1, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1001001001(self):
      self.assertEqual(C_RHash(149, 10, 4), tuple([1, 0, 0, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0101001001(self):
      self.assertEqual(C_RHash(93, 10, 4), tuple([0, 1, 0, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0011001001(self):
      self.assertEqual(C_RHash(58, 10, 4), tuple([0, 0, 1, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1000101001(self):
      self.assertEqual(C_RHash(139, 10, 4), tuple([1, 0, 0, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0100101001(self):
      self.assertEqual(C_RHash(83, 10, 4), tuple([0, 1, 0, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0010101001(self):
      self.assertEqual(C_RHash(48, 10, 4), tuple([0, 0, 1, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0001101001(self):
      self.assertEqual(C_RHash(28, 10, 4), tuple([0, 0, 0, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1000011001(self):
      self.assertEqual(C_RHash(133, 10, 4), tuple([1, 0, 0, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0100011001(self):
      self.assertEqual(C_RHash(77, 10, 4), tuple([0, 1, 0, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0010011001(self):
      self.assertEqual(C_RHash(42, 10, 4), tuple([0, 0, 1, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0001011001(self):
      self.assertEqual(C_RHash(22, 10, 4), tuple([0, 0, 0, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0000111001(self):
      self.assertEqual(C_RHash(12, 10, 4), tuple([0, 0, 0, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1100000101(self):
      self.assertEqual(C_RHash(183, 10, 4), tuple([1, 1, 0, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1010000101(self):
      self.assertEqual(C_RHash(162, 10, 4), tuple([1, 0, 1, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0110000101(self):
      self.assertEqual(C_RHash(106, 10, 4), tuple([0, 1, 1, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1001000101(self):
      self.assertEqual(C_RHash(147, 10, 4), tuple([1, 0, 0, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0101000101(self):
      self.assertEqual(C_RHash(91, 10, 4), tuple([0, 1, 0, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0011000101(self):
      self.assertEqual(C_RHash(56, 10, 4), tuple([0, 0, 1, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1000100101(self):
      self.assertEqual(C_RHash(137, 10, 4), tuple([1, 0, 0, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0100100101(self):
      self.assertEqual(C_RHash(81, 10, 4), tuple([0, 1, 0, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0010100101(self):
      self.assertEqual(C_RHash(46, 10, 4), tuple([0, 0, 1, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0001100101(self):
      self.assertEqual(C_RHash(26, 10, 4), tuple([0, 0, 0, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1000010101(self):
      self.assertEqual(C_RHash(131, 10, 4), tuple([1, 0, 0, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0100010101(self):
      self.assertEqual(C_RHash(75, 10, 4), tuple([0, 1, 0, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0010010101(self):
      self.assertEqual(C_RHash(40, 10, 4), tuple([0, 0, 1, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0001010101(self):
      self.assertEqual(C_RHash(20, 10, 4), tuple([0, 0, 0, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0000110101(self):
      self.assertEqual(C_RHash(10, 10, 4), tuple([0, 0, 0, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1000001101(self):
      self.assertEqual(C_RHash(128, 10, 4), tuple([1, 0, 0, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0100001101(self):
      self.assertEqual(C_RHash(72, 10, 4), tuple([0, 1, 0, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0010001101(self):
      self.assertEqual(C_RHash(37, 10, 4), tuple([0, 0, 1, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0001001101(self):
      self.assertEqual(C_RHash(17, 10, 4), tuple([0, 0, 0, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0000101101(self):
      self.assertEqual(C_RHash(7, 10, 4), tuple([0, 0, 0, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0000011101(self):
      self.assertEqual(C_RHash(3, 10, 4), tuple([0, 0, 0, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1100000011(self):
      self.assertEqual(C_RHash(182, 10, 4), tuple([1, 1, 0, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1010000011(self):
      self.assertEqual(C_RHash(161, 10, 4), tuple([1, 0, 1, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0110000011(self):
      self.assertEqual(C_RHash(105, 10, 4), tuple([0, 1, 1, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1001000011(self):
      self.assertEqual(C_RHash(146, 10, 4), tuple([1, 0, 0, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0101000011(self):
      self.assertEqual(C_RHash(90, 10, 4), tuple([0, 1, 0, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0011000011(self):
      self.assertEqual(C_RHash(55, 10, 4), tuple([0, 0, 1, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1000100011(self):
      self.assertEqual(C_RHash(136, 10, 4), tuple([1, 0, 0, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0100100011(self):
      self.assertEqual(C_RHash(80, 10, 4), tuple([0, 1, 0, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0010100011(self):
      self.assertEqual(C_RHash(45, 10, 4), tuple([0, 0, 1, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0001100011(self):
      self.assertEqual(C_RHash(25, 10, 4), tuple([0, 0, 0, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1000010011(self):
      self.assertEqual(C_RHash(130, 10, 4), tuple([1, 0, 0, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0100010011(self):
      self.assertEqual(C_RHash(74, 10, 4), tuple([0, 1, 0, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0010010011(self):
      self.assertEqual(C_RHash(39, 10, 4), tuple([0, 0, 1, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0001010011(self):
      self.assertEqual(C_RHash(19, 10, 4), tuple([0, 0, 0, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0000110011(self):
      self.assertEqual(C_RHash(9, 10, 4), tuple([0, 0, 0, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1000001011(self):
      self.assertEqual(C_RHash(127, 10, 4), tuple([1, 0, 0, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0100001011(self):
      self.assertEqual(C_RHash(71, 10, 4), tuple([0, 1, 0, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0010001011(self):
      self.assertEqual(C_RHash(36, 10, 4), tuple([0, 0, 1, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0001001011(self):
      self.assertEqual(C_RHash(16, 10, 4), tuple([0, 0, 0, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0000101011(self):
      self.assertEqual(C_RHash(6, 10, 4), tuple([0, 0, 0, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0000011011(self):
      self.assertEqual(C_RHash(2, 10, 4), tuple([0, 0, 0, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1000000111(self):
      self.assertEqual(C_RHash(126, 10, 4), tuple([1, 0, 0, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0100000111(self):
      self.assertEqual(C_RHash(70, 10, 4), tuple([0, 1, 0, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0010000111(self):
      self.assertEqual(C_RHash(35, 10, 4), tuple([0, 0, 1, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0001000111(self):
      self.assertEqual(C_RHash(15, 10, 4), tuple([0, 0, 0, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0000100111(self):
      self.assertEqual(C_RHash(5, 10, 4), tuple([0, 0, 0, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0000010111(self):
      self.assertEqual(C_RHash(1, 10, 4), tuple([0, 0, 0, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0000001111(self):
      self.assertEqual(C_RHash(0, 10, 4), tuple([0, 0, 0, 0, 0, 0, 1, 1, 1, 1]))

class HashTest_n10_r5(unittest.TestCase):
  def test_C_Hash_range_1111100000(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111010000(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110110000(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101110000(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011110000(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111110000(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111001000(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110101000(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101101000(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011101000(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111101000(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110011000(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101011000(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011011000(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111011000(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100111000(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010111000(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110111000(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001111000(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101111000(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011111000(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111000100(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110100100(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101100100(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011100100(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111100100(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110010100(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101010100(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011010100(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111010100(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100110100(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010110100(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110110100(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001110100(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101110100(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011110100(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110001100(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101001100(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011001100(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111001100(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100101100(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010101100(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110101100(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001101100(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101101100(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011101100(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100011100(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010011100(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110011100(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001011100(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101011100(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011011100(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000111100(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100111100(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010111100(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001111100(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111000010(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110100010(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101100010(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011100010(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111100010(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110010010(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101010010(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011010010(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111010010(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100110010(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010110010(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110110010(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001110010(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101110010(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011110010(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110001010(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101001010(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011001010(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111001010(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100101010(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010101010(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110101010(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001101010(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101101010(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011101010(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100011010(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010011010(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110011010(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001011010(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101011010(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011011010(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000111010(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100111010(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010111010(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001111010(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110000110(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101000110(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011000110(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111000110(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100100110(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010100110(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110100110(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001100110(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101100110(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011100110(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100010110(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010010110(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110010110(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001010110(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101010110(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011010110(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000110110(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100110110(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010110110(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001110110(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100001110(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010001110(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110001110(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001001110(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101001110(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011001110(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000101110(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100101110(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010101110(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001101110(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000011110(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100011110(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010011110(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001011110(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000111110(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1, 0], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111000001(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110100001(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101100001(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011100001(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111100001(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110010001(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101010001(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011010001(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111010001(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100110001(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010110001(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110110001(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001110001(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101110001(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011110001(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110001001(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101001001(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011001001(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111001001(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100101001(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010101001(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110101001(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001101001(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101101001(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011101001(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100011001(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010011001(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110011001(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001011001(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101011001(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011011001(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000111001(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100111001(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010111001(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001111001(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110000101(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101000101(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011000101(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111000101(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100100101(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010100101(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110100101(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001100101(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101100101(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011100101(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100010101(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010010101(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110010101(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001010101(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101010101(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011010101(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000110101(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100110101(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010110101(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001110101(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100001101(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010001101(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110001101(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001001101(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101001101(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011001101(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000101101(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100101101(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010101101(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001101101(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000011101(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100011101(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010011101(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001011101(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000111101(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110000011(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101000011(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011000011(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111000011(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100100011(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010100011(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110100011(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001100011(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101100011(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011100011(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100010011(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010010011(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110010011(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001010011(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101010011(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011010011(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000110011(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100110011(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010110011(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001110011(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100001011(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010001011(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110001011(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001001011(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101001011(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011001011(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000101011(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100101011(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010101011(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001101011(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000011011(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100011011(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010011011(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001011011(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000111011(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100000111(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010000111(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110000111(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001000111(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101000111(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011000111(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000100111(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100100111(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010100111(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001100111(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000010111(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100010111(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010010111(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001010111(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000110111(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000001111(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100001111(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010001111(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001001111(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000101111(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000011111(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1, 1], 5)
      self.assert_(C(10, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0, 0], 5)] = [1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0, 0], 5)] = [1, 1, 1, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0, 0], 5)] = [1, 1, 1, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0, 0], 5)] = [1, 1, 0, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0, 0], 5)] = [1, 0, 1, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0, 0], 5)] = [0, 1, 1, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 5)] = [1, 1, 1, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0, 0], 5)] = [1, 1, 1, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0, 0], 5)] = [1, 1, 0, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0, 0], 5)] = [1, 0, 1, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0, 0], 5)] = [0, 1, 1, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0, 0], 5)] = [1, 1, 1, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0, 0], 5)] = [1, 1, 0, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0, 0], 5)] = [1, 0, 1, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0, 0], 5)] = [0, 1, 1, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0, 0], 5)] = [1, 1, 0, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0, 0], 5)] = [1, 0, 1, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0, 0], 5)] = [0, 1, 1, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0, 0], 5)] = [1, 0, 0, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0, 0], 5)] = [0, 1, 0, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0, 0], 5)] = [0, 0, 1, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0, 0], 5)] = [1, 1, 1, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0, 0], 5)] = [1, 1, 1, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0, 0], 5)] = [1, 1, 0, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0, 0], 5)] = [1, 0, 1, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0, 0], 5)] = [0, 1, 1, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0, 0], 5)] = [1, 1, 1, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0, 0], 5)] = [1, 1, 0, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0, 0], 5)] = [1, 0, 1, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0, 0], 5)] = [0, 1, 1, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0, 0], 5)] = [1, 1, 0, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0, 0], 5)] = [1, 0, 1, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0, 0], 5)] = [0, 1, 1, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0, 0], 5)] = [1, 0, 0, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0, 0], 5)] = [0, 1, 0, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0, 0], 5)] = [0, 0, 1, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0, 0], 5)] = [1, 1, 1, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0, 0], 5)] = [1, 1, 0, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0, 0], 5)] = [1, 0, 1, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0, 0], 5)] = [0, 1, 1, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0, 0], 5)] = [1, 1, 0, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0, 0], 5)] = [1, 0, 1, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0, 0], 5)] = [0, 1, 1, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0, 0], 5)] = [1, 0, 0, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0, 0], 5)] = [0, 1, 0, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0, 0], 5)] = [0, 0, 1, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0, 0], 5)] = [1, 1, 0, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0, 0], 5)] = [1, 0, 1, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0, 0], 5)] = [0, 1, 1, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0, 0], 5)] = [1, 0, 0, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0, 0], 5)] = [0, 1, 0, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0, 0], 5)] = [0, 0, 1, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0, 0], 5)] = [1, 0, 0, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0, 0], 5)] = [0, 1, 0, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0, 0], 5)] = [0, 0, 1, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0, 0], 5)] = [0, 0, 0, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1, 0], 5)] = [1, 1, 1, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1, 0], 5)] = [1, 1, 1, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1, 0], 5)] = [1, 1, 0, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1, 0], 5)] = [1, 0, 1, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1, 0], 5)] = [0, 1, 1, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1, 0], 5)] = [1, 1, 1, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1, 0], 5)] = [1, 1, 0, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1, 0], 5)] = [1, 0, 1, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1, 0], 5)] = [0, 1, 1, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1, 0], 5)] = [1, 1, 0, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1, 0], 5)] = [1, 0, 1, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1, 0], 5)] = [0, 1, 1, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1, 0], 5)] = [1, 0, 0, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1, 0], 5)] = [0, 1, 0, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1, 0], 5)] = [0, 0, 1, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1, 0], 5)] = [1, 1, 1, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1, 0], 5)] = [1, 1, 0, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1, 0], 5)] = [1, 0, 1, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1, 0], 5)] = [0, 1, 1, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1, 0], 5)] = [1, 1, 0, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1, 0], 5)] = [1, 0, 1, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1, 0], 5)] = [0, 1, 1, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1, 0], 5)] = [1, 0, 0, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1, 0], 5)] = [0, 1, 0, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1, 0], 5)] = [0, 0, 1, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1, 0], 5)] = [1, 1, 0, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1, 0], 5)] = [1, 0, 1, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1, 0], 5)] = [0, 1, 1, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1, 0], 5)] = [1, 0, 0, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1, 0], 5)] = [0, 1, 0, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1, 0], 5)] = [0, 0, 1, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1, 0], 5)] = [1, 0, 0, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1, 0], 5)] = [0, 1, 0, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1, 0], 5)] = [0, 0, 1, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1, 0], 5)] = [0, 0, 0, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1, 0], 5)] = [1, 1, 1, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1, 0], 5)] = [1, 1, 0, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1, 0], 5)] = [1, 0, 1, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1, 0], 5)] = [0, 1, 1, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1, 0], 5)] = [1, 1, 0, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1, 0], 5)] = [1, 0, 1, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1, 0], 5)] = [0, 1, 1, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1, 0], 5)] = [1, 0, 0, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1, 0], 5)] = [0, 1, 0, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1, 0], 5)] = [0, 0, 1, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1, 0], 5)] = [1, 1, 0, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1, 0], 5)] = [1, 0, 1, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1, 0], 5)] = [0, 1, 1, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1, 0], 5)] = [1, 0, 0, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1, 0], 5)] = [0, 1, 0, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1, 0], 5)] = [0, 0, 1, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1, 0], 5)] = [1, 0, 0, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1, 0], 5)] = [0, 1, 0, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1, 0], 5)] = [0, 0, 1, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1, 0], 5)] = [0, 0, 0, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1, 0], 5)] = [1, 1, 0, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1, 0], 5)] = [1, 0, 1, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1, 0], 5)] = [0, 1, 1, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1, 0], 5)] = [1, 0, 0, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1, 0], 5)] = [0, 1, 0, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1, 0], 5)] = [0, 0, 1, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1, 0], 5)] = [1, 0, 0, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1, 0], 5)] = [0, 1, 0, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1, 0], 5)] = [0, 0, 1, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1, 0], 5)] = [0, 0, 0, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1, 0], 5)] = [1, 0, 0, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1, 0], 5)] = [0, 1, 0, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1, 0], 5)] = [0, 0, 1, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1, 0], 5)] = [0, 0, 0, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1, 0], 5)] = [0, 0, 0, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0, 1], 5)] = [1, 1, 1, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0, 1], 5)] = [1, 1, 1, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0, 1], 5)] = [1, 1, 0, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0, 1], 5)] = [1, 0, 1, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0, 1], 5)] = [0, 1, 1, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0, 1], 5)] = [1, 1, 1, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0, 1], 5)] = [1, 1, 0, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0, 1], 5)] = [1, 0, 1, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0, 1], 5)] = [0, 1, 1, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0, 1], 5)] = [1, 1, 0, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0, 1], 5)] = [1, 0, 1, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0, 1], 5)] = [0, 1, 1, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0, 1], 5)] = [1, 0, 0, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0, 1], 5)] = [0, 1, 0, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0, 1], 5)] = [0, 0, 1, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0, 1], 5)] = [1, 1, 1, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0, 1], 5)] = [1, 1, 0, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0, 1], 5)] = [1, 0, 1, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0, 1], 5)] = [0, 1, 1, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0, 1], 5)] = [1, 1, 0, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0, 1], 5)] = [1, 0, 1, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0, 1], 5)] = [0, 1, 1, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0, 1], 5)] = [1, 0, 0, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0, 1], 5)] = [0, 1, 0, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0, 1], 5)] = [0, 0, 1, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0, 1], 5)] = [1, 1, 0, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0, 1], 5)] = [1, 0, 1, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0, 1], 5)] = [0, 1, 1, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0, 1], 5)] = [1, 0, 0, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0, 1], 5)] = [0, 1, 0, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0, 1], 5)] = [0, 0, 1, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0, 1], 5)] = [1, 0, 0, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0, 1], 5)] = [0, 1, 0, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0, 1], 5)] = [0, 0, 1, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0, 1], 5)] = [0, 0, 0, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0, 1], 5)] = [1, 1, 1, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0, 1], 5)] = [1, 1, 0, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0, 1], 5)] = [1, 0, 1, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0, 1], 5)] = [0, 1, 1, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0, 1], 5)] = [1, 1, 0, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0, 1], 5)] = [1, 0, 1, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0, 1], 5)] = [0, 1, 1, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0, 1], 5)] = [1, 0, 0, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0, 1], 5)] = [0, 1, 0, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0, 1], 5)] = [0, 0, 1, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0, 1], 5)] = [1, 1, 0, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0, 1], 5)] = [1, 0, 1, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0, 1], 5)] = [0, 1, 1, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0, 1], 5)] = [1, 0, 0, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0, 1], 5)] = [0, 1, 0, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0, 1], 5)] = [0, 0, 1, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0, 1], 5)] = [1, 0, 0, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0, 1], 5)] = [0, 1, 0, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0, 1], 5)] = [0, 0, 1, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0, 1], 5)] = [0, 0, 0, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0, 1], 5)] = [1, 1, 0, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0, 1], 5)] = [1, 0, 1, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0, 1], 5)] = [0, 1, 1, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0, 1], 5)] = [1, 0, 0, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0, 1], 5)] = [0, 1, 0, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0, 1], 5)] = [0, 0, 1, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0, 1], 5)] = [1, 0, 0, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0, 1], 5)] = [0, 1, 0, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0, 1], 5)] = [0, 0, 1, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0, 1], 5)] = [0, 0, 0, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0, 1], 5)] = [1, 0, 0, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0, 1], 5)] = [0, 1, 0, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0, 1], 5)] = [0, 0, 1, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0, 1], 5)] = [0, 0, 0, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0, 1], 5)] = [0, 0, 0, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1, 1], 5)] = [1, 1, 1, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1, 1], 5)] = [1, 1, 0, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1, 1], 5)] = [1, 0, 1, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1, 1], 5)] = [0, 1, 1, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1, 1], 5)] = [1, 1, 0, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1, 1], 5)] = [1, 0, 1, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1, 1], 5)] = [0, 1, 1, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1, 1], 5)] = [1, 0, 0, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1, 1], 5)] = [0, 1, 0, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1, 1], 5)] = [0, 0, 1, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1, 1], 5)] = [1, 1, 0, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1, 1], 5)] = [1, 0, 1, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1, 1], 5)] = [0, 1, 1, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1, 1], 5)] = [1, 0, 0, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1, 1], 5)] = [0, 1, 0, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1, 1], 5)] = [0, 0, 1, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1, 1], 5)] = [1, 0, 0, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1, 1], 5)] = [0, 1, 0, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1, 1], 5)] = [0, 0, 1, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1, 1], 5)] = [0, 0, 0, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1, 1], 5)] = [1, 1, 0, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1, 1], 5)] = [1, 0, 1, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1, 1], 5)] = [0, 1, 1, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1, 1], 5)] = [1, 0, 0, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1, 1], 5)] = [0, 1, 0, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1, 1], 5)] = [0, 0, 1, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1, 1], 5)] = [1, 0, 0, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1, 1], 5)] = [0, 1, 0, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1, 1], 5)] = [0, 0, 1, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1, 1], 5)] = [0, 0, 0, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1, 1], 5)] = [1, 0, 0, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1, 1], 5)] = [0, 1, 0, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1, 1], 5)] = [0, 0, 1, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1, 1], 5)] = [0, 0, 0, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1, 1], 5)] = [0, 0, 0, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1, 1], 5)] = [1, 1, 0, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1, 1], 5)] = [1, 0, 1, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1, 1], 5)] = [0, 1, 1, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1, 1], 5)] = [1, 0, 0, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1, 1], 5)] = [0, 1, 0, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1, 1], 5)] = [0, 0, 1, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1, 1], 5)] = [1, 0, 0, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1, 1], 5)] = [0, 1, 0, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1, 1], 5)] = [0, 0, 1, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1, 1], 5)] = [0, 0, 0, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1, 1], 5)] = [1, 0, 0, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1, 1], 5)] = [0, 1, 0, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1, 1], 5)] = [0, 0, 1, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1, 1], 5)] = [0, 0, 0, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1, 1], 5)] = [0, 0, 0, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1, 1], 5)] = [1, 0, 0, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1, 1], 5)] = [0, 1, 0, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1, 1], 5)] = [0, 0, 1, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1, 1], 5)] = [0, 0, 0, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1, 1], 5)] = [0, 0, 0, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1, 1], 5)] = [0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 252)

  def test_C_RHash_soundness_1111100000(self):
      self.assertEqual(C_RHash(251, 10, 5), tuple([1, 1, 1, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1111010000(self):
      self.assertEqual(C_RHash(250, 10, 5), tuple([1, 1, 1, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1110110000(self):
      self.assertEqual(C_RHash(245, 10, 5), tuple([1, 1, 1, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1101110000(self):
      self.assertEqual(C_RHash(230, 10, 5), tuple([1, 1, 0, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1011110000(self):
      self.assertEqual(C_RHash(195, 10, 5), tuple([1, 0, 1, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_0111110000(self):
      self.assertEqual(C_RHash(125, 10, 5), tuple([0, 1, 1, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1111001000(self):
      self.assertEqual(C_RHash(249, 10, 5), tuple([1, 1, 1, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1110101000(self):
      self.assertEqual(C_RHash(244, 10, 5), tuple([1, 1, 1, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1101101000(self):
      self.assertEqual(C_RHash(229, 10, 5), tuple([1, 1, 0, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1011101000(self):
      self.assertEqual(C_RHash(194, 10, 5), tuple([1, 0, 1, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0111101000(self):
      self.assertEqual(C_RHash(124, 10, 5), tuple([0, 1, 1, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1110011000(self):
      self.assertEqual(C_RHash(240, 10, 5), tuple([1, 1, 1, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1101011000(self):
      self.assertEqual(C_RHash(225, 10, 5), tuple([1, 1, 0, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1011011000(self):
      self.assertEqual(C_RHash(190, 10, 5), tuple([1, 0, 1, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0111011000(self):
      self.assertEqual(C_RHash(120, 10, 5), tuple([0, 1, 1, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1100111000(self):
      self.assertEqual(C_RHash(215, 10, 5), tuple([1, 1, 0, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1010111000(self):
      self.assertEqual(C_RHash(180, 10, 5), tuple([1, 0, 1, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0110111000(self):
      self.assertEqual(C_RHash(110, 10, 5), tuple([0, 1, 1, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1001111000(self):
      self.assertEqual(C_RHash(160, 10, 5), tuple([1, 0, 0, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0101111000(self):
      self.assertEqual(C_RHash(90, 10, 5), tuple([0, 1, 0, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0011111000(self):
      self.assertEqual(C_RHash(55, 10, 5), tuple([0, 0, 1, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1111000100(self):
      self.assertEqual(C_RHash(248, 10, 5), tuple([1, 1, 1, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1110100100(self):
      self.assertEqual(C_RHash(243, 10, 5), tuple([1, 1, 1, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1101100100(self):
      self.assertEqual(C_RHash(228, 10, 5), tuple([1, 1, 0, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1011100100(self):
      self.assertEqual(C_RHash(193, 10, 5), tuple([1, 0, 1, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0111100100(self):
      self.assertEqual(C_RHash(123, 10, 5), tuple([0, 1, 1, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1110010100(self):
      self.assertEqual(C_RHash(239, 10, 5), tuple([1, 1, 1, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1101010100(self):
      self.assertEqual(C_RHash(224, 10, 5), tuple([1, 1, 0, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1011010100(self):
      self.assertEqual(C_RHash(189, 10, 5), tuple([1, 0, 1, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0111010100(self):
      self.assertEqual(C_RHash(119, 10, 5), tuple([0, 1, 1, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1100110100(self):
      self.assertEqual(C_RHash(214, 10, 5), tuple([1, 1, 0, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1010110100(self):
      self.assertEqual(C_RHash(179, 10, 5), tuple([1, 0, 1, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0110110100(self):
      self.assertEqual(C_RHash(109, 10, 5), tuple([0, 1, 1, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1001110100(self):
      self.assertEqual(C_RHash(159, 10, 5), tuple([1, 0, 0, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0101110100(self):
      self.assertEqual(C_RHash(89, 10, 5), tuple([0, 1, 0, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0011110100(self):
      self.assertEqual(C_RHash(54, 10, 5), tuple([0, 0, 1, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1110001100(self):
      self.assertEqual(C_RHash(236, 10, 5), tuple([1, 1, 1, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1101001100(self):
      self.assertEqual(C_RHash(221, 10, 5), tuple([1, 1, 0, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1011001100(self):
      self.assertEqual(C_RHash(186, 10, 5), tuple([1, 0, 1, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0111001100(self):
      self.assertEqual(C_RHash(116, 10, 5), tuple([0, 1, 1, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1100101100(self):
      self.assertEqual(C_RHash(211, 10, 5), tuple([1, 1, 0, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1010101100(self):
      self.assertEqual(C_RHash(176, 10, 5), tuple([1, 0, 1, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0110101100(self):
      self.assertEqual(C_RHash(106, 10, 5), tuple([0, 1, 1, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1001101100(self):
      self.assertEqual(C_RHash(156, 10, 5), tuple([1, 0, 0, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0101101100(self):
      self.assertEqual(C_RHash(86, 10, 5), tuple([0, 1, 0, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0011101100(self):
      self.assertEqual(C_RHash(51, 10, 5), tuple([0, 0, 1, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1100011100(self):
      self.assertEqual(C_RHash(205, 10, 5), tuple([1, 1, 0, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1010011100(self):
      self.assertEqual(C_RHash(170, 10, 5), tuple([1, 0, 1, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0110011100(self):
      self.assertEqual(C_RHash(100, 10, 5), tuple([0, 1, 1, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1001011100(self):
      self.assertEqual(C_RHash(150, 10, 5), tuple([1, 0, 0, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0101011100(self):
      self.assertEqual(C_RHash(80, 10, 5), tuple([0, 1, 0, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0011011100(self):
      self.assertEqual(C_RHash(45, 10, 5), tuple([0, 0, 1, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1000111100(self):
      self.assertEqual(C_RHash(140, 10, 5), tuple([1, 0, 0, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0100111100(self):
      self.assertEqual(C_RHash(70, 10, 5), tuple([0, 1, 0, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0010111100(self):
      self.assertEqual(C_RHash(35, 10, 5), tuple([0, 0, 1, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0001111100(self):
      self.assertEqual(C_RHash(20, 10, 5), tuple([0, 0, 0, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1111000010(self):
      self.assertEqual(C_RHash(247, 10, 5), tuple([1, 1, 1, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1110100010(self):
      self.assertEqual(C_RHash(242, 10, 5), tuple([1, 1, 1, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1101100010(self):
      self.assertEqual(C_RHash(227, 10, 5), tuple([1, 1, 0, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1011100010(self):
      self.assertEqual(C_RHash(192, 10, 5), tuple([1, 0, 1, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0111100010(self):
      self.assertEqual(C_RHash(122, 10, 5), tuple([0, 1, 1, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1110010010(self):
      self.assertEqual(C_RHash(238, 10, 5), tuple([1, 1, 1, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1101010010(self):
      self.assertEqual(C_RHash(223, 10, 5), tuple([1, 1, 0, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1011010010(self):
      self.assertEqual(C_RHash(188, 10, 5), tuple([1, 0, 1, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0111010010(self):
      self.assertEqual(C_RHash(118, 10, 5), tuple([0, 1, 1, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1100110010(self):
      self.assertEqual(C_RHash(213, 10, 5), tuple([1, 1, 0, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1010110010(self):
      self.assertEqual(C_RHash(178, 10, 5), tuple([1, 0, 1, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0110110010(self):
      self.assertEqual(C_RHash(108, 10, 5), tuple([0, 1, 1, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1001110010(self):
      self.assertEqual(C_RHash(158, 10, 5), tuple([1, 0, 0, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0101110010(self):
      self.assertEqual(C_RHash(88, 10, 5), tuple([0, 1, 0, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0011110010(self):
      self.assertEqual(C_RHash(53, 10, 5), tuple([0, 0, 1, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1110001010(self):
      self.assertEqual(C_RHash(235, 10, 5), tuple([1, 1, 1, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1101001010(self):
      self.assertEqual(C_RHash(220, 10, 5), tuple([1, 1, 0, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1011001010(self):
      self.assertEqual(C_RHash(185, 10, 5), tuple([1, 0, 1, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0111001010(self):
      self.assertEqual(C_RHash(115, 10, 5), tuple([0, 1, 1, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1100101010(self):
      self.assertEqual(C_RHash(210, 10, 5), tuple([1, 1, 0, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1010101010(self):
      self.assertEqual(C_RHash(175, 10, 5), tuple([1, 0, 1, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0110101010(self):
      self.assertEqual(C_RHash(105, 10, 5), tuple([0, 1, 1, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1001101010(self):
      self.assertEqual(C_RHash(155, 10, 5), tuple([1, 0, 0, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0101101010(self):
      self.assertEqual(C_RHash(85, 10, 5), tuple([0, 1, 0, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0011101010(self):
      self.assertEqual(C_RHash(50, 10, 5), tuple([0, 0, 1, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1100011010(self):
      self.assertEqual(C_RHash(204, 10, 5), tuple([1, 1, 0, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1010011010(self):
      self.assertEqual(C_RHash(169, 10, 5), tuple([1, 0, 1, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0110011010(self):
      self.assertEqual(C_RHash(99, 10, 5), tuple([0, 1, 1, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1001011010(self):
      self.assertEqual(C_RHash(149, 10, 5), tuple([1, 0, 0, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0101011010(self):
      self.assertEqual(C_RHash(79, 10, 5), tuple([0, 1, 0, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0011011010(self):
      self.assertEqual(C_RHash(44, 10, 5), tuple([0, 0, 1, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1000111010(self):
      self.assertEqual(C_RHash(139, 10, 5), tuple([1, 0, 0, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0100111010(self):
      self.assertEqual(C_RHash(69, 10, 5), tuple([0, 1, 0, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0010111010(self):
      self.assertEqual(C_RHash(34, 10, 5), tuple([0, 0, 1, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0001111010(self):
      self.assertEqual(C_RHash(19, 10, 5), tuple([0, 0, 0, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1110000110(self):
      self.assertEqual(C_RHash(233, 10, 5), tuple([1, 1, 1, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1101000110(self):
      self.assertEqual(C_RHash(218, 10, 5), tuple([1, 1, 0, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1011000110(self):
      self.assertEqual(C_RHash(183, 10, 5), tuple([1, 0, 1, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0111000110(self):
      self.assertEqual(C_RHash(113, 10, 5), tuple([0, 1, 1, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1100100110(self):
      self.assertEqual(C_RHash(208, 10, 5), tuple([1, 1, 0, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1010100110(self):
      self.assertEqual(C_RHash(173, 10, 5), tuple([1, 0, 1, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0110100110(self):
      self.assertEqual(C_RHash(103, 10, 5), tuple([0, 1, 1, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1001100110(self):
      self.assertEqual(C_RHash(153, 10, 5), tuple([1, 0, 0, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0101100110(self):
      self.assertEqual(C_RHash(83, 10, 5), tuple([0, 1, 0, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0011100110(self):
      self.assertEqual(C_RHash(48, 10, 5), tuple([0, 0, 1, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1100010110(self):
      self.assertEqual(C_RHash(202, 10, 5), tuple([1, 1, 0, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1010010110(self):
      self.assertEqual(C_RHash(167, 10, 5), tuple([1, 0, 1, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0110010110(self):
      self.assertEqual(C_RHash(97, 10, 5), tuple([0, 1, 1, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1001010110(self):
      self.assertEqual(C_RHash(147, 10, 5), tuple([1, 0, 0, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0101010110(self):
      self.assertEqual(C_RHash(77, 10, 5), tuple([0, 1, 0, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0011010110(self):
      self.assertEqual(C_RHash(42, 10, 5), tuple([0, 0, 1, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1000110110(self):
      self.assertEqual(C_RHash(137, 10, 5), tuple([1, 0, 0, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0100110110(self):
      self.assertEqual(C_RHash(67, 10, 5), tuple([0, 1, 0, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0010110110(self):
      self.assertEqual(C_RHash(32, 10, 5), tuple([0, 0, 1, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0001110110(self):
      self.assertEqual(C_RHash(17, 10, 5), tuple([0, 0, 0, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1100001110(self):
      self.assertEqual(C_RHash(199, 10, 5), tuple([1, 1, 0, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1010001110(self):
      self.assertEqual(C_RHash(164, 10, 5), tuple([1, 0, 1, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0110001110(self):
      self.assertEqual(C_RHash(94, 10, 5), tuple([0, 1, 1, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1001001110(self):
      self.assertEqual(C_RHash(144, 10, 5), tuple([1, 0, 0, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0101001110(self):
      self.assertEqual(C_RHash(74, 10, 5), tuple([0, 1, 0, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0011001110(self):
      self.assertEqual(C_RHash(39, 10, 5), tuple([0, 0, 1, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1000101110(self):
      self.assertEqual(C_RHash(134, 10, 5), tuple([1, 0, 0, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0100101110(self):
      self.assertEqual(C_RHash(64, 10, 5), tuple([0, 1, 0, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0010101110(self):
      self.assertEqual(C_RHash(29, 10, 5), tuple([0, 0, 1, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0001101110(self):
      self.assertEqual(C_RHash(14, 10, 5), tuple([0, 0, 0, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1000011110(self):
      self.assertEqual(C_RHash(130, 10, 5), tuple([1, 0, 0, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0100011110(self):
      self.assertEqual(C_RHash(60, 10, 5), tuple([0, 1, 0, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0010011110(self):
      self.assertEqual(C_RHash(25, 10, 5), tuple([0, 0, 1, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0001011110(self):
      self.assertEqual(C_RHash(10, 10, 5), tuple([0, 0, 0, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0000111110(self):
      self.assertEqual(C_RHash(5, 10, 5), tuple([0, 0, 0, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1111000001(self):
      self.assertEqual(C_RHash(246, 10, 5), tuple([1, 1, 1, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1110100001(self):
      self.assertEqual(C_RHash(241, 10, 5), tuple([1, 1, 1, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1101100001(self):
      self.assertEqual(C_RHash(226, 10, 5), tuple([1, 1, 0, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1011100001(self):
      self.assertEqual(C_RHash(191, 10, 5), tuple([1, 0, 1, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0111100001(self):
      self.assertEqual(C_RHash(121, 10, 5), tuple([0, 1, 1, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1110010001(self):
      self.assertEqual(C_RHash(237, 10, 5), tuple([1, 1, 1, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1101010001(self):
      self.assertEqual(C_RHash(222, 10, 5), tuple([1, 1, 0, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1011010001(self):
      self.assertEqual(C_RHash(187, 10, 5), tuple([1, 0, 1, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0111010001(self):
      self.assertEqual(C_RHash(117, 10, 5), tuple([0, 1, 1, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1100110001(self):
      self.assertEqual(C_RHash(212, 10, 5), tuple([1, 1, 0, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1010110001(self):
      self.assertEqual(C_RHash(177, 10, 5), tuple([1, 0, 1, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0110110001(self):
      self.assertEqual(C_RHash(107, 10, 5), tuple([0, 1, 1, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1001110001(self):
      self.assertEqual(C_RHash(157, 10, 5), tuple([1, 0, 0, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0101110001(self):
      self.assertEqual(C_RHash(87, 10, 5), tuple([0, 1, 0, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0011110001(self):
      self.assertEqual(C_RHash(52, 10, 5), tuple([0, 0, 1, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1110001001(self):
      self.assertEqual(C_RHash(234, 10, 5), tuple([1, 1, 1, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1101001001(self):
      self.assertEqual(C_RHash(219, 10, 5), tuple([1, 1, 0, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1011001001(self):
      self.assertEqual(C_RHash(184, 10, 5), tuple([1, 0, 1, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0111001001(self):
      self.assertEqual(C_RHash(114, 10, 5), tuple([0, 1, 1, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1100101001(self):
      self.assertEqual(C_RHash(209, 10, 5), tuple([1, 1, 0, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1010101001(self):
      self.assertEqual(C_RHash(174, 10, 5), tuple([1, 0, 1, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0110101001(self):
      self.assertEqual(C_RHash(104, 10, 5), tuple([0, 1, 1, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1001101001(self):
      self.assertEqual(C_RHash(154, 10, 5), tuple([1, 0, 0, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0101101001(self):
      self.assertEqual(C_RHash(84, 10, 5), tuple([0, 1, 0, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0011101001(self):
      self.assertEqual(C_RHash(49, 10, 5), tuple([0, 0, 1, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1100011001(self):
      self.assertEqual(C_RHash(203, 10, 5), tuple([1, 1, 0, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1010011001(self):
      self.assertEqual(C_RHash(168, 10, 5), tuple([1, 0, 1, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0110011001(self):
      self.assertEqual(C_RHash(98, 10, 5), tuple([0, 1, 1, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1001011001(self):
      self.assertEqual(C_RHash(148, 10, 5), tuple([1, 0, 0, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0101011001(self):
      self.assertEqual(C_RHash(78, 10, 5), tuple([0, 1, 0, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0011011001(self):
      self.assertEqual(C_RHash(43, 10, 5), tuple([0, 0, 1, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1000111001(self):
      self.assertEqual(C_RHash(138, 10, 5), tuple([1, 0, 0, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0100111001(self):
      self.assertEqual(C_RHash(68, 10, 5), tuple([0, 1, 0, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0010111001(self):
      self.assertEqual(C_RHash(33, 10, 5), tuple([0, 0, 1, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0001111001(self):
      self.assertEqual(C_RHash(18, 10, 5), tuple([0, 0, 0, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1110000101(self):
      self.assertEqual(C_RHash(232, 10, 5), tuple([1, 1, 1, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1101000101(self):
      self.assertEqual(C_RHash(217, 10, 5), tuple([1, 1, 0, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1011000101(self):
      self.assertEqual(C_RHash(182, 10, 5), tuple([1, 0, 1, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0111000101(self):
      self.assertEqual(C_RHash(112, 10, 5), tuple([0, 1, 1, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1100100101(self):
      self.assertEqual(C_RHash(207, 10, 5), tuple([1, 1, 0, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1010100101(self):
      self.assertEqual(C_RHash(172, 10, 5), tuple([1, 0, 1, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0110100101(self):
      self.assertEqual(C_RHash(102, 10, 5), tuple([0, 1, 1, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1001100101(self):
      self.assertEqual(C_RHash(152, 10, 5), tuple([1, 0, 0, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0101100101(self):
      self.assertEqual(C_RHash(82, 10, 5), tuple([0, 1, 0, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0011100101(self):
      self.assertEqual(C_RHash(47, 10, 5), tuple([0, 0, 1, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1100010101(self):
      self.assertEqual(C_RHash(201, 10, 5), tuple([1, 1, 0, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1010010101(self):
      self.assertEqual(C_RHash(166, 10, 5), tuple([1, 0, 1, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0110010101(self):
      self.assertEqual(C_RHash(96, 10, 5), tuple([0, 1, 1, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1001010101(self):
      self.assertEqual(C_RHash(146, 10, 5), tuple([1, 0, 0, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0101010101(self):
      self.assertEqual(C_RHash(76, 10, 5), tuple([0, 1, 0, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0011010101(self):
      self.assertEqual(C_RHash(41, 10, 5), tuple([0, 0, 1, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1000110101(self):
      self.assertEqual(C_RHash(136, 10, 5), tuple([1, 0, 0, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0100110101(self):
      self.assertEqual(C_RHash(66, 10, 5), tuple([0, 1, 0, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0010110101(self):
      self.assertEqual(C_RHash(31, 10, 5), tuple([0, 0, 1, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0001110101(self):
      self.assertEqual(C_RHash(16, 10, 5), tuple([0, 0, 0, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1100001101(self):
      self.assertEqual(C_RHash(198, 10, 5), tuple([1, 1, 0, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1010001101(self):
      self.assertEqual(C_RHash(163, 10, 5), tuple([1, 0, 1, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0110001101(self):
      self.assertEqual(C_RHash(93, 10, 5), tuple([0, 1, 1, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1001001101(self):
      self.assertEqual(C_RHash(143, 10, 5), tuple([1, 0, 0, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0101001101(self):
      self.assertEqual(C_RHash(73, 10, 5), tuple([0, 1, 0, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0011001101(self):
      self.assertEqual(C_RHash(38, 10, 5), tuple([0, 0, 1, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1000101101(self):
      self.assertEqual(C_RHash(133, 10, 5), tuple([1, 0, 0, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0100101101(self):
      self.assertEqual(C_RHash(63, 10, 5), tuple([0, 1, 0, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0010101101(self):
      self.assertEqual(C_RHash(28, 10, 5), tuple([0, 0, 1, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0001101101(self):
      self.assertEqual(C_RHash(13, 10, 5), tuple([0, 0, 0, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1000011101(self):
      self.assertEqual(C_RHash(129, 10, 5), tuple([1, 0, 0, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0100011101(self):
      self.assertEqual(C_RHash(59, 10, 5), tuple([0, 1, 0, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0010011101(self):
      self.assertEqual(C_RHash(24, 10, 5), tuple([0, 0, 1, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0001011101(self):
      self.assertEqual(C_RHash(9, 10, 5), tuple([0, 0, 0, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0000111101(self):
      self.assertEqual(C_RHash(4, 10, 5), tuple([0, 0, 0, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1110000011(self):
      self.assertEqual(C_RHash(231, 10, 5), tuple([1, 1, 1, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1101000011(self):
      self.assertEqual(C_RHash(216, 10, 5), tuple([1, 1, 0, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1011000011(self):
      self.assertEqual(C_RHash(181, 10, 5), tuple([1, 0, 1, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0111000011(self):
      self.assertEqual(C_RHash(111, 10, 5), tuple([0, 1, 1, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1100100011(self):
      self.assertEqual(C_RHash(206, 10, 5), tuple([1, 1, 0, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1010100011(self):
      self.assertEqual(C_RHash(171, 10, 5), tuple([1, 0, 1, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0110100011(self):
      self.assertEqual(C_RHash(101, 10, 5), tuple([0, 1, 1, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1001100011(self):
      self.assertEqual(C_RHash(151, 10, 5), tuple([1, 0, 0, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0101100011(self):
      self.assertEqual(C_RHash(81, 10, 5), tuple([0, 1, 0, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0011100011(self):
      self.assertEqual(C_RHash(46, 10, 5), tuple([0, 0, 1, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1100010011(self):
      self.assertEqual(C_RHash(200, 10, 5), tuple([1, 1, 0, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1010010011(self):
      self.assertEqual(C_RHash(165, 10, 5), tuple([1, 0, 1, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0110010011(self):
      self.assertEqual(C_RHash(95, 10, 5), tuple([0, 1, 1, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1001010011(self):
      self.assertEqual(C_RHash(145, 10, 5), tuple([1, 0, 0, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0101010011(self):
      self.assertEqual(C_RHash(75, 10, 5), tuple([0, 1, 0, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0011010011(self):
      self.assertEqual(C_RHash(40, 10, 5), tuple([0, 0, 1, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1000110011(self):
      self.assertEqual(C_RHash(135, 10, 5), tuple([1, 0, 0, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0100110011(self):
      self.assertEqual(C_RHash(65, 10, 5), tuple([0, 1, 0, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0010110011(self):
      self.assertEqual(C_RHash(30, 10, 5), tuple([0, 0, 1, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0001110011(self):
      self.assertEqual(C_RHash(15, 10, 5), tuple([0, 0, 0, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1100001011(self):
      self.assertEqual(C_RHash(197, 10, 5), tuple([1, 1, 0, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1010001011(self):
      self.assertEqual(C_RHash(162, 10, 5), tuple([1, 0, 1, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0110001011(self):
      self.assertEqual(C_RHash(92, 10, 5), tuple([0, 1, 1, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1001001011(self):
      self.assertEqual(C_RHash(142, 10, 5), tuple([1, 0, 0, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0101001011(self):
      self.assertEqual(C_RHash(72, 10, 5), tuple([0, 1, 0, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0011001011(self):
      self.assertEqual(C_RHash(37, 10, 5), tuple([0, 0, 1, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1000101011(self):
      self.assertEqual(C_RHash(132, 10, 5), tuple([1, 0, 0, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0100101011(self):
      self.assertEqual(C_RHash(62, 10, 5), tuple([0, 1, 0, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0010101011(self):
      self.assertEqual(C_RHash(27, 10, 5), tuple([0, 0, 1, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0001101011(self):
      self.assertEqual(C_RHash(12, 10, 5), tuple([0, 0, 0, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1000011011(self):
      self.assertEqual(C_RHash(128, 10, 5), tuple([1, 0, 0, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0100011011(self):
      self.assertEqual(C_RHash(58, 10, 5), tuple([0, 1, 0, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0010011011(self):
      self.assertEqual(C_RHash(23, 10, 5), tuple([0, 0, 1, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0001011011(self):
      self.assertEqual(C_RHash(8, 10, 5), tuple([0, 0, 0, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0000111011(self):
      self.assertEqual(C_RHash(3, 10, 5), tuple([0, 0, 0, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1100000111(self):
      self.assertEqual(C_RHash(196, 10, 5), tuple([1, 1, 0, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1010000111(self):
      self.assertEqual(C_RHash(161, 10, 5), tuple([1, 0, 1, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0110000111(self):
      self.assertEqual(C_RHash(91, 10, 5), tuple([0, 1, 1, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1001000111(self):
      self.assertEqual(C_RHash(141, 10, 5), tuple([1, 0, 0, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0101000111(self):
      self.assertEqual(C_RHash(71, 10, 5), tuple([0, 1, 0, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0011000111(self):
      self.assertEqual(C_RHash(36, 10, 5), tuple([0, 0, 1, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1000100111(self):
      self.assertEqual(C_RHash(131, 10, 5), tuple([1, 0, 0, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0100100111(self):
      self.assertEqual(C_RHash(61, 10, 5), tuple([0, 1, 0, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0010100111(self):
      self.assertEqual(C_RHash(26, 10, 5), tuple([0, 0, 1, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0001100111(self):
      self.assertEqual(C_RHash(11, 10, 5), tuple([0, 0, 0, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1000010111(self):
      self.assertEqual(C_RHash(127, 10, 5), tuple([1, 0, 0, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0100010111(self):
      self.assertEqual(C_RHash(57, 10, 5), tuple([0, 1, 0, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0010010111(self):
      self.assertEqual(C_RHash(22, 10, 5), tuple([0, 0, 1, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0001010111(self):
      self.assertEqual(C_RHash(7, 10, 5), tuple([0, 0, 0, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0000110111(self):
      self.assertEqual(C_RHash(2, 10, 5), tuple([0, 0, 0, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1000001111(self):
      self.assertEqual(C_RHash(126, 10, 5), tuple([1, 0, 0, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0100001111(self):
      self.assertEqual(C_RHash(56, 10, 5), tuple([0, 1, 0, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0010001111(self):
      self.assertEqual(C_RHash(21, 10, 5), tuple([0, 0, 1, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0001001111(self):
      self.assertEqual(C_RHash(6, 10, 5), tuple([0, 0, 0, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0000101111(self):
      self.assertEqual(C_RHash(1, 10, 5), tuple([0, 0, 0, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0000011111(self):
      self.assertEqual(C_RHash(0, 10, 5), tuple([0, 0, 0, 0, 0, 1, 1, 1, 1, 1]))

class HashTest_n10_r6(unittest.TestCase):
  def test_C_Hash_range_1111110000(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111101000(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111011000(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110111000(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101111000(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011111000(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111111000(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111100100(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111010100(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110110100(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101110100(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011110100(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111110100(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111001100(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110101100(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101101100(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011101100(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111101100(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110011100(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101011100(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011011100(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111011100(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100111100(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010111100(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110111100(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001111100(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101111100(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011111100(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111100010(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111010010(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110110010(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101110010(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011110010(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111110010(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111001010(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110101010(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101101010(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011101010(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111101010(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110011010(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101011010(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011011010(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111011010(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100111010(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010111010(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110111010(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001111010(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101111010(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011111010(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111000110(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110100110(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101100110(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011100110(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111100110(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110010110(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101010110(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011010110(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111010110(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100110110(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010110110(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110110110(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001110110(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101110110(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011110110(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110001110(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101001110(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011001110(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111001110(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100101110(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010101110(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110101110(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001101110(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101101110(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011101110(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100011110(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010011110(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110011110(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001011110(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101011110(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011011110(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000111110(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100111110(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010111110(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001111110(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1, 0], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111100001(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111010001(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110110001(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101110001(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011110001(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111110001(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111001001(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110101001(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101101001(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011101001(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111101001(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110011001(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101011001(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011011001(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111011001(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100111001(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010111001(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110111001(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001111001(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101111001(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011111001(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111000101(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110100101(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101100101(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011100101(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111100101(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110010101(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101010101(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011010101(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111010101(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100110101(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010110101(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110110101(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001110101(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101110101(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011110101(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110001101(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101001101(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011001101(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111001101(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100101101(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010101101(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110101101(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001101101(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101101101(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011101101(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100011101(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010011101(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110011101(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001011101(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101011101(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011011101(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000111101(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100111101(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010111101(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001111101(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111000011(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110100011(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101100011(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011100011(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111100011(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110010011(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101010011(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011010011(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111010011(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100110011(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010110011(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110110011(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001110011(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101110011(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011110011(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110001011(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101001011(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011001011(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111001011(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100101011(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010101011(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110101011(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001101011(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101101011(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011101011(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100011011(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010011011(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110011011(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001011011(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101011011(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011011011(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000111011(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100111011(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010111011(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001111011(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110000111(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101000111(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011000111(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111000111(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100100111(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010100111(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110100111(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001100111(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101100111(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011100111(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100010111(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010010111(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110010111(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001010111(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101010111(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011010111(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000110111(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100110111(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010110111(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001110111(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100001111(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010001111(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110001111(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001001111(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101001111(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011001111(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000101111(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100101111(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010101111(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001101111(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000011111(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100011111(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010011111(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001011111(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0000111111(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1, 1], 6)
      self.assert_(C(10, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0, 0], 6)] = [1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0, 0], 6)] = [1, 1, 1, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0, 0], 6)] = [1, 1, 1, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0, 0], 6)] = [1, 1, 1, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0, 0], 6)] = [1, 1, 0, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0, 0], 6)] = [1, 0, 1, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0, 0], 6)] = [0, 1, 1, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0, 0], 6)] = [1, 1, 1, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0, 0], 6)] = [1, 1, 1, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0, 0], 6)] = [1, 1, 1, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0, 0], 6)] = [1, 1, 0, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0, 0], 6)] = [1, 0, 1, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0, 0], 6)] = [0, 1, 1, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0, 0], 6)] = [1, 1, 1, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0, 0], 6)] = [1, 1, 1, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0, 0], 6)] = [1, 1, 0, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0, 0], 6)] = [1, 0, 1, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0, 0], 6)] = [0, 1, 1, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0, 0], 6)] = [1, 1, 1, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0, 0], 6)] = [1, 1, 0, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0, 0], 6)] = [1, 0, 1, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0, 0], 6)] = [0, 1, 1, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0, 0], 6)] = [1, 1, 0, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0, 0], 6)] = [1, 0, 1, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0, 0], 6)] = [0, 1, 1, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0, 0], 6)] = [1, 0, 0, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0, 0], 6)] = [0, 1, 0, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0, 0], 6)] = [0, 0, 1, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1, 0], 6)] = [1, 1, 1, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1, 0], 6)] = [1, 1, 1, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1, 0], 6)] = [1, 1, 1, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1, 0], 6)] = [1, 1, 0, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1, 0], 6)] = [1, 0, 1, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1, 0], 6)] = [0, 1, 1, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1, 0], 6)] = [1, 1, 1, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1, 0], 6)] = [1, 1, 1, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1, 0], 6)] = [1, 1, 0, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1, 0], 6)] = [1, 0, 1, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1, 0], 6)] = [0, 1, 1, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1, 0], 6)] = [1, 1, 1, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1, 0], 6)] = [1, 1, 0, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1, 0], 6)] = [1, 0, 1, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1, 0], 6)] = [0, 1, 1, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1, 0], 6)] = [1, 1, 0, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1, 0], 6)] = [1, 0, 1, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1, 0], 6)] = [0, 1, 1, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1, 0], 6)] = [1, 0, 0, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1, 0], 6)] = [0, 1, 0, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1, 0], 6)] = [0, 0, 1, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1, 0], 6)] = [1, 1, 1, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1, 0], 6)] = [1, 1, 1, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1, 0], 6)] = [1, 1, 0, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1, 0], 6)] = [1, 0, 1, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1, 0], 6)] = [0, 1, 1, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1, 0], 6)] = [1, 1, 1, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1, 0], 6)] = [1, 1, 0, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1, 0], 6)] = [1, 0, 1, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1, 0], 6)] = [0, 1, 1, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1, 0], 6)] = [1, 1, 0, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1, 0], 6)] = [1, 0, 1, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1, 0], 6)] = [0, 1, 1, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1, 0], 6)] = [1, 0, 0, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1, 0], 6)] = [0, 1, 0, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1, 0], 6)] = [0, 0, 1, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1, 0], 6)] = [1, 1, 1, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1, 0], 6)] = [1, 1, 0, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1, 0], 6)] = [1, 0, 1, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1, 0], 6)] = [0, 1, 1, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1, 0], 6)] = [1, 1, 0, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1, 0], 6)] = [1, 0, 1, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1, 0], 6)] = [0, 1, 1, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1, 0], 6)] = [1, 0, 0, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1, 0], 6)] = [0, 1, 0, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1, 0], 6)] = [0, 0, 1, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1, 0], 6)] = [1, 1, 0, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1, 0], 6)] = [1, 0, 1, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1, 0], 6)] = [0, 1, 1, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1, 0], 6)] = [1, 0, 0, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1, 0], 6)] = [0, 1, 0, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1, 0], 6)] = [0, 0, 1, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1, 0], 6)] = [1, 0, 0, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1, 0], 6)] = [0, 1, 0, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1, 0], 6)] = [0, 0, 1, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1, 0], 6)] = [0, 0, 0, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0, 1], 6)] = [1, 1, 1, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0, 1], 6)] = [1, 1, 1, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0, 1], 6)] = [1, 1, 1, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0, 1], 6)] = [1, 1, 0, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0, 1], 6)] = [1, 0, 1, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0, 1], 6)] = [0, 1, 1, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0, 1], 6)] = [1, 1, 1, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0, 1], 6)] = [1, 1, 1, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0, 1], 6)] = [1, 1, 0, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0, 1], 6)] = [1, 0, 1, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0, 1], 6)] = [0, 1, 1, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0, 1], 6)] = [1, 1, 1, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0, 1], 6)] = [1, 1, 0, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0, 1], 6)] = [1, 0, 1, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0, 1], 6)] = [0, 1, 1, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0, 1], 6)] = [1, 1, 0, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0, 1], 6)] = [1, 0, 1, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0, 1], 6)] = [0, 1, 1, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0, 1], 6)] = [1, 0, 0, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0, 1], 6)] = [0, 1, 0, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0, 1], 6)] = [0, 0, 1, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0, 1], 6)] = [1, 1, 1, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0, 1], 6)] = [1, 1, 1, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0, 1], 6)] = [1, 1, 0, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0, 1], 6)] = [1, 0, 1, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0, 1], 6)] = [0, 1, 1, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0, 1], 6)] = [1, 1, 1, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0, 1], 6)] = [1, 1, 0, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0, 1], 6)] = [1, 0, 1, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0, 1], 6)] = [0, 1, 1, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0, 1], 6)] = [1, 1, 0, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0, 1], 6)] = [1, 0, 1, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0, 1], 6)] = [0, 1, 1, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0, 1], 6)] = [1, 0, 0, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0, 1], 6)] = [0, 1, 0, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0, 1], 6)] = [0, 0, 1, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0, 1], 6)] = [1, 1, 1, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0, 1], 6)] = [1, 1, 0, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0, 1], 6)] = [1, 0, 1, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0, 1], 6)] = [0, 1, 1, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0, 1], 6)] = [1, 1, 0, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0, 1], 6)] = [1, 0, 1, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0, 1], 6)] = [0, 1, 1, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0, 1], 6)] = [1, 0, 0, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0, 1], 6)] = [0, 1, 0, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0, 1], 6)] = [0, 0, 1, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0, 1], 6)] = [1, 1, 0, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0, 1], 6)] = [1, 0, 1, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0, 1], 6)] = [0, 1, 1, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0, 1], 6)] = [1, 0, 0, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0, 1], 6)] = [0, 1, 0, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0, 1], 6)] = [0, 0, 1, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0, 1], 6)] = [1, 0, 0, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0, 1], 6)] = [0, 1, 0, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0, 1], 6)] = [0, 0, 1, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0, 1], 6)] = [0, 0, 0, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1, 1], 6)] = [1, 1, 1, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1, 1], 6)] = [1, 1, 1, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1, 1], 6)] = [1, 1, 0, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1, 1], 6)] = [1, 0, 1, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1, 1], 6)] = [0, 1, 1, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1, 1], 6)] = [1, 1, 1, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1, 1], 6)] = [1, 1, 0, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1, 1], 6)] = [1, 0, 1, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1, 1], 6)] = [0, 1, 1, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1, 1], 6)] = [1, 1, 0, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1, 1], 6)] = [1, 0, 1, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1, 1], 6)] = [0, 1, 1, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1, 1], 6)] = [1, 0, 0, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1, 1], 6)] = [0, 1, 0, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1, 1], 6)] = [0, 0, 1, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1, 1], 6)] = [1, 1, 1, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1, 1], 6)] = [1, 1, 0, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1, 1], 6)] = [1, 0, 1, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1, 1], 6)] = [0, 1, 1, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1, 1], 6)] = [1, 1, 0, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1, 1], 6)] = [1, 0, 1, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1, 1], 6)] = [0, 1, 1, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1, 1], 6)] = [1, 0, 0, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1, 1], 6)] = [0, 1, 0, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1, 1], 6)] = [0, 0, 1, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1, 1], 6)] = [1, 1, 0, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1, 1], 6)] = [1, 0, 1, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1, 1], 6)] = [0, 1, 1, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1, 1], 6)] = [1, 0, 0, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1, 1], 6)] = [0, 1, 0, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1, 1], 6)] = [0, 0, 1, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1, 1], 6)] = [1, 0, 0, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1, 1], 6)] = [0, 1, 0, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1, 1], 6)] = [0, 0, 1, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1, 1], 6)] = [0, 0, 0, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1, 1], 6)] = [1, 1, 1, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1, 1], 6)] = [1, 1, 0, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1, 1], 6)] = [1, 0, 1, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1, 1], 6)] = [0, 1, 1, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1, 1], 6)] = [1, 1, 0, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1, 1], 6)] = [1, 0, 1, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1, 1], 6)] = [0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1, 1], 6)] = [1, 0, 0, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1, 1], 6)] = [0, 1, 0, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1, 1], 6)] = [0, 0, 1, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1, 1], 6)] = [1, 1, 0, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1, 1], 6)] = [1, 0, 1, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1, 1], 6)] = [0, 1, 1, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1, 1], 6)] = [1, 0, 0, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1, 1], 6)] = [0, 1, 0, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1, 1], 6)] = [0, 0, 1, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1, 1], 6)] = [1, 0, 0, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1, 1], 6)] = [0, 1, 0, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1, 1], 6)] = [0, 0, 1, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1, 1], 6)] = [0, 0, 0, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1, 1], 6)] = [1, 1, 0, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1, 1], 6)] = [1, 0, 1, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1, 1], 6)] = [0, 1, 1, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1, 1], 6)] = [1, 0, 0, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1, 1], 6)] = [0, 1, 0, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1, 1], 6)] = [0, 0, 1, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1, 1], 6)] = [1, 0, 0, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1, 1], 6)] = [0, 1, 0, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1, 1], 6)] = [0, 0, 1, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1, 1], 6)] = [0, 0, 0, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1, 1], 6)] = [1, 0, 0, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1, 1], 6)] = [0, 1, 0, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1, 1], 6)] = [0, 0, 1, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1, 1], 6)] = [0, 0, 0, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1, 1], 6)] = [0, 0, 0, 0, 1, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 210)

  def test_C_RHash_soundness_1111110000(self):
      self.assertEqual(C_RHash(209, 10, 6), tuple([1, 1, 1, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_1111101000(self):
      self.assertEqual(C_RHash(208, 10, 6), tuple([1, 1, 1, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1111011000(self):
      self.assertEqual(C_RHash(204, 10, 6), tuple([1, 1, 1, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1110111000(self):
      self.assertEqual(C_RHash(194, 10, 6), tuple([1, 1, 1, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1101111000(self):
      self.assertEqual(C_RHash(174, 10, 6), tuple([1, 1, 0, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1011111000(self):
      self.assertEqual(C_RHash(139, 10, 6), tuple([1, 0, 1, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_0111111000(self):
      self.assertEqual(C_RHash(83, 10, 6), tuple([0, 1, 1, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1111100100(self):
      self.assertEqual(C_RHash(207, 10, 6), tuple([1, 1, 1, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1111010100(self):
      self.assertEqual(C_RHash(203, 10, 6), tuple([1, 1, 1, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1110110100(self):
      self.assertEqual(C_RHash(193, 10, 6), tuple([1, 1, 1, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1101110100(self):
      self.assertEqual(C_RHash(173, 10, 6), tuple([1, 1, 0, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1011110100(self):
      self.assertEqual(C_RHash(138, 10, 6), tuple([1, 0, 1, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_0111110100(self):
      self.assertEqual(C_RHash(82, 10, 6), tuple([0, 1, 1, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1111001100(self):
      self.assertEqual(C_RHash(200, 10, 6), tuple([1, 1, 1, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1110101100(self):
      self.assertEqual(C_RHash(190, 10, 6), tuple([1, 1, 1, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1101101100(self):
      self.assertEqual(C_RHash(170, 10, 6), tuple([1, 1, 0, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1011101100(self):
      self.assertEqual(C_RHash(135, 10, 6), tuple([1, 0, 1, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0111101100(self):
      self.assertEqual(C_RHash(79, 10, 6), tuple([0, 1, 1, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1110011100(self):
      self.assertEqual(C_RHash(184, 10, 6), tuple([1, 1, 1, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1101011100(self):
      self.assertEqual(C_RHash(164, 10, 6), tuple([1, 1, 0, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1011011100(self):
      self.assertEqual(C_RHash(129, 10, 6), tuple([1, 0, 1, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0111011100(self):
      self.assertEqual(C_RHash(73, 10, 6), tuple([0, 1, 1, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1100111100(self):
      self.assertEqual(C_RHash(154, 10, 6), tuple([1, 1, 0, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1010111100(self):
      self.assertEqual(C_RHash(119, 10, 6), tuple([1, 0, 1, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0110111100(self):
      self.assertEqual(C_RHash(63, 10, 6), tuple([0, 1, 1, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1001111100(self):
      self.assertEqual(C_RHash(104, 10, 6), tuple([1, 0, 0, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0101111100(self):
      self.assertEqual(C_RHash(48, 10, 6), tuple([0, 1, 0, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0011111100(self):
      self.assertEqual(C_RHash(27, 10, 6), tuple([0, 0, 1, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1111100010(self):
      self.assertEqual(C_RHash(206, 10, 6), tuple([1, 1, 1, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1111010010(self):
      self.assertEqual(C_RHash(202, 10, 6), tuple([1, 1, 1, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1110110010(self):
      self.assertEqual(C_RHash(192, 10, 6), tuple([1, 1, 1, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1101110010(self):
      self.assertEqual(C_RHash(172, 10, 6), tuple([1, 1, 0, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1011110010(self):
      self.assertEqual(C_RHash(137, 10, 6), tuple([1, 0, 1, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_0111110010(self):
      self.assertEqual(C_RHash(81, 10, 6), tuple([0, 1, 1, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1111001010(self):
      self.assertEqual(C_RHash(199, 10, 6), tuple([1, 1, 1, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1110101010(self):
      self.assertEqual(C_RHash(189, 10, 6), tuple([1, 1, 1, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1101101010(self):
      self.assertEqual(C_RHash(169, 10, 6), tuple([1, 1, 0, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1011101010(self):
      self.assertEqual(C_RHash(134, 10, 6), tuple([1, 0, 1, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0111101010(self):
      self.assertEqual(C_RHash(78, 10, 6), tuple([0, 1, 1, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1110011010(self):
      self.assertEqual(C_RHash(183, 10, 6), tuple([1, 1, 1, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1101011010(self):
      self.assertEqual(C_RHash(163, 10, 6), tuple([1, 1, 0, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1011011010(self):
      self.assertEqual(C_RHash(128, 10, 6), tuple([1, 0, 1, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0111011010(self):
      self.assertEqual(C_RHash(72, 10, 6), tuple([0, 1, 1, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1100111010(self):
      self.assertEqual(C_RHash(153, 10, 6), tuple([1, 1, 0, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1010111010(self):
      self.assertEqual(C_RHash(118, 10, 6), tuple([1, 0, 1, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0110111010(self):
      self.assertEqual(C_RHash(62, 10, 6), tuple([0, 1, 1, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1001111010(self):
      self.assertEqual(C_RHash(103, 10, 6), tuple([1, 0, 0, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0101111010(self):
      self.assertEqual(C_RHash(47, 10, 6), tuple([0, 1, 0, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0011111010(self):
      self.assertEqual(C_RHash(26, 10, 6), tuple([0, 0, 1, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1111000110(self):
      self.assertEqual(C_RHash(197, 10, 6), tuple([1, 1, 1, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1110100110(self):
      self.assertEqual(C_RHash(187, 10, 6), tuple([1, 1, 1, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1101100110(self):
      self.assertEqual(C_RHash(167, 10, 6), tuple([1, 1, 0, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1011100110(self):
      self.assertEqual(C_RHash(132, 10, 6), tuple([1, 0, 1, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0111100110(self):
      self.assertEqual(C_RHash(76, 10, 6), tuple([0, 1, 1, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1110010110(self):
      self.assertEqual(C_RHash(181, 10, 6), tuple([1, 1, 1, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1101010110(self):
      self.assertEqual(C_RHash(161, 10, 6), tuple([1, 1, 0, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1011010110(self):
      self.assertEqual(C_RHash(126, 10, 6), tuple([1, 0, 1, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0111010110(self):
      self.assertEqual(C_RHash(70, 10, 6), tuple([0, 1, 1, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1100110110(self):
      self.assertEqual(C_RHash(151, 10, 6), tuple([1, 1, 0, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1010110110(self):
      self.assertEqual(C_RHash(116, 10, 6), tuple([1, 0, 1, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0110110110(self):
      self.assertEqual(C_RHash(60, 10, 6), tuple([0, 1, 1, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1001110110(self):
      self.assertEqual(C_RHash(101, 10, 6), tuple([1, 0, 0, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0101110110(self):
      self.assertEqual(C_RHash(45, 10, 6), tuple([0, 1, 0, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0011110110(self):
      self.assertEqual(C_RHash(24, 10, 6), tuple([0, 0, 1, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1110001110(self):
      self.assertEqual(C_RHash(178, 10, 6), tuple([1, 1, 1, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1101001110(self):
      self.assertEqual(C_RHash(158, 10, 6), tuple([1, 1, 0, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1011001110(self):
      self.assertEqual(C_RHash(123, 10, 6), tuple([1, 0, 1, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0111001110(self):
      self.assertEqual(C_RHash(67, 10, 6), tuple([0, 1, 1, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1100101110(self):
      self.assertEqual(C_RHash(148, 10, 6), tuple([1, 1, 0, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1010101110(self):
      self.assertEqual(C_RHash(113, 10, 6), tuple([1, 0, 1, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0110101110(self):
      self.assertEqual(C_RHash(57, 10, 6), tuple([0, 1, 1, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1001101110(self):
      self.assertEqual(C_RHash(98, 10, 6), tuple([1, 0, 0, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0101101110(self):
      self.assertEqual(C_RHash(42, 10, 6), tuple([0, 1, 0, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0011101110(self):
      self.assertEqual(C_RHash(21, 10, 6), tuple([0, 0, 1, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1100011110(self):
      self.assertEqual(C_RHash(144, 10, 6), tuple([1, 1, 0, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1010011110(self):
      self.assertEqual(C_RHash(109, 10, 6), tuple([1, 0, 1, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0110011110(self):
      self.assertEqual(C_RHash(53, 10, 6), tuple([0, 1, 1, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1001011110(self):
      self.assertEqual(C_RHash(94, 10, 6), tuple([1, 0, 0, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0101011110(self):
      self.assertEqual(C_RHash(38, 10, 6), tuple([0, 1, 0, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0011011110(self):
      self.assertEqual(C_RHash(17, 10, 6), tuple([0, 0, 1, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1000111110(self):
      self.assertEqual(C_RHash(89, 10, 6), tuple([1, 0, 0, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0100111110(self):
      self.assertEqual(C_RHash(33, 10, 6), tuple([0, 1, 0, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0010111110(self):
      self.assertEqual(C_RHash(12, 10, 6), tuple([0, 0, 1, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0001111110(self):
      self.assertEqual(C_RHash(6, 10, 6), tuple([0, 0, 0, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1111100001(self):
      self.assertEqual(C_RHash(205, 10, 6), tuple([1, 1, 1, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1111010001(self):
      self.assertEqual(C_RHash(201, 10, 6), tuple([1, 1, 1, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1110110001(self):
      self.assertEqual(C_RHash(191, 10, 6), tuple([1, 1, 1, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1101110001(self):
      self.assertEqual(C_RHash(171, 10, 6), tuple([1, 1, 0, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1011110001(self):
      self.assertEqual(C_RHash(136, 10, 6), tuple([1, 0, 1, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_0111110001(self):
      self.assertEqual(C_RHash(80, 10, 6), tuple([0, 1, 1, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1111001001(self):
      self.assertEqual(C_RHash(198, 10, 6), tuple([1, 1, 1, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1110101001(self):
      self.assertEqual(C_RHash(188, 10, 6), tuple([1, 1, 1, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1101101001(self):
      self.assertEqual(C_RHash(168, 10, 6), tuple([1, 1, 0, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1011101001(self):
      self.assertEqual(C_RHash(133, 10, 6), tuple([1, 0, 1, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0111101001(self):
      self.assertEqual(C_RHash(77, 10, 6), tuple([0, 1, 1, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1110011001(self):
      self.assertEqual(C_RHash(182, 10, 6), tuple([1, 1, 1, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1101011001(self):
      self.assertEqual(C_RHash(162, 10, 6), tuple([1, 1, 0, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1011011001(self):
      self.assertEqual(C_RHash(127, 10, 6), tuple([1, 0, 1, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0111011001(self):
      self.assertEqual(C_RHash(71, 10, 6), tuple([0, 1, 1, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1100111001(self):
      self.assertEqual(C_RHash(152, 10, 6), tuple([1, 1, 0, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1010111001(self):
      self.assertEqual(C_RHash(117, 10, 6), tuple([1, 0, 1, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0110111001(self):
      self.assertEqual(C_RHash(61, 10, 6), tuple([0, 1, 1, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1001111001(self):
      self.assertEqual(C_RHash(102, 10, 6), tuple([1, 0, 0, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0101111001(self):
      self.assertEqual(C_RHash(46, 10, 6), tuple([0, 1, 0, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0011111001(self):
      self.assertEqual(C_RHash(25, 10, 6), tuple([0, 0, 1, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1111000101(self):
      self.assertEqual(C_RHash(196, 10, 6), tuple([1, 1, 1, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1110100101(self):
      self.assertEqual(C_RHash(186, 10, 6), tuple([1, 1, 1, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1101100101(self):
      self.assertEqual(C_RHash(166, 10, 6), tuple([1, 1, 0, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1011100101(self):
      self.assertEqual(C_RHash(131, 10, 6), tuple([1, 0, 1, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0111100101(self):
      self.assertEqual(C_RHash(75, 10, 6), tuple([0, 1, 1, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1110010101(self):
      self.assertEqual(C_RHash(180, 10, 6), tuple([1, 1, 1, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1101010101(self):
      self.assertEqual(C_RHash(160, 10, 6), tuple([1, 1, 0, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1011010101(self):
      self.assertEqual(C_RHash(125, 10, 6), tuple([1, 0, 1, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0111010101(self):
      self.assertEqual(C_RHash(69, 10, 6), tuple([0, 1, 1, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1100110101(self):
      self.assertEqual(C_RHash(150, 10, 6), tuple([1, 1, 0, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1010110101(self):
      self.assertEqual(C_RHash(115, 10, 6), tuple([1, 0, 1, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0110110101(self):
      self.assertEqual(C_RHash(59, 10, 6), tuple([0, 1, 1, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1001110101(self):
      self.assertEqual(C_RHash(100, 10, 6), tuple([1, 0, 0, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0101110101(self):
      self.assertEqual(C_RHash(44, 10, 6), tuple([0, 1, 0, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0011110101(self):
      self.assertEqual(C_RHash(23, 10, 6), tuple([0, 0, 1, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1110001101(self):
      self.assertEqual(C_RHash(177, 10, 6), tuple([1, 1, 1, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1101001101(self):
      self.assertEqual(C_RHash(157, 10, 6), tuple([1, 1, 0, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1011001101(self):
      self.assertEqual(C_RHash(122, 10, 6), tuple([1, 0, 1, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0111001101(self):
      self.assertEqual(C_RHash(66, 10, 6), tuple([0, 1, 1, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1100101101(self):
      self.assertEqual(C_RHash(147, 10, 6), tuple([1, 1, 0, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1010101101(self):
      self.assertEqual(C_RHash(112, 10, 6), tuple([1, 0, 1, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0110101101(self):
      self.assertEqual(C_RHash(56, 10, 6), tuple([0, 1, 1, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1001101101(self):
      self.assertEqual(C_RHash(97, 10, 6), tuple([1, 0, 0, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0101101101(self):
      self.assertEqual(C_RHash(41, 10, 6), tuple([0, 1, 0, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0011101101(self):
      self.assertEqual(C_RHash(20, 10, 6), tuple([0, 0, 1, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1100011101(self):
      self.assertEqual(C_RHash(143, 10, 6), tuple([1, 1, 0, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1010011101(self):
      self.assertEqual(C_RHash(108, 10, 6), tuple([1, 0, 1, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0110011101(self):
      self.assertEqual(C_RHash(52, 10, 6), tuple([0, 1, 1, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1001011101(self):
      self.assertEqual(C_RHash(93, 10, 6), tuple([1, 0, 0, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0101011101(self):
      self.assertEqual(C_RHash(37, 10, 6), tuple([0, 1, 0, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0011011101(self):
      self.assertEqual(C_RHash(16, 10, 6), tuple([0, 0, 1, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1000111101(self):
      self.assertEqual(C_RHash(88, 10, 6), tuple([1, 0, 0, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0100111101(self):
      self.assertEqual(C_RHash(32, 10, 6), tuple([0, 1, 0, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0010111101(self):
      self.assertEqual(C_RHash(11, 10, 6), tuple([0, 0, 1, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0001111101(self):
      self.assertEqual(C_RHash(5, 10, 6), tuple([0, 0, 0, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1111000011(self):
      self.assertEqual(C_RHash(195, 10, 6), tuple([1, 1, 1, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1110100011(self):
      self.assertEqual(C_RHash(185, 10, 6), tuple([1, 1, 1, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1101100011(self):
      self.assertEqual(C_RHash(165, 10, 6), tuple([1, 1, 0, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1011100011(self):
      self.assertEqual(C_RHash(130, 10, 6), tuple([1, 0, 1, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0111100011(self):
      self.assertEqual(C_RHash(74, 10, 6), tuple([0, 1, 1, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1110010011(self):
      self.assertEqual(C_RHash(179, 10, 6), tuple([1, 1, 1, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1101010011(self):
      self.assertEqual(C_RHash(159, 10, 6), tuple([1, 1, 0, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1011010011(self):
      self.assertEqual(C_RHash(124, 10, 6), tuple([1, 0, 1, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0111010011(self):
      self.assertEqual(C_RHash(68, 10, 6), tuple([0, 1, 1, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1100110011(self):
      self.assertEqual(C_RHash(149, 10, 6), tuple([1, 1, 0, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1010110011(self):
      self.assertEqual(C_RHash(114, 10, 6), tuple([1, 0, 1, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0110110011(self):
      self.assertEqual(C_RHash(58, 10, 6), tuple([0, 1, 1, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1001110011(self):
      self.assertEqual(C_RHash(99, 10, 6), tuple([1, 0, 0, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0101110011(self):
      self.assertEqual(C_RHash(43, 10, 6), tuple([0, 1, 0, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0011110011(self):
      self.assertEqual(C_RHash(22, 10, 6), tuple([0, 0, 1, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1110001011(self):
      self.assertEqual(C_RHash(176, 10, 6), tuple([1, 1, 1, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1101001011(self):
      self.assertEqual(C_RHash(156, 10, 6), tuple([1, 1, 0, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1011001011(self):
      self.assertEqual(C_RHash(121, 10, 6), tuple([1, 0, 1, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0111001011(self):
      self.assertEqual(C_RHash(65, 10, 6), tuple([0, 1, 1, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1100101011(self):
      self.assertEqual(C_RHash(146, 10, 6), tuple([1, 1, 0, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1010101011(self):
      self.assertEqual(C_RHash(111, 10, 6), tuple([1, 0, 1, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0110101011(self):
      self.assertEqual(C_RHash(55, 10, 6), tuple([0, 1, 1, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1001101011(self):
      self.assertEqual(C_RHash(96, 10, 6), tuple([1, 0, 0, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0101101011(self):
      self.assertEqual(C_RHash(40, 10, 6), tuple([0, 1, 0, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0011101011(self):
      self.assertEqual(C_RHash(19, 10, 6), tuple([0, 0, 1, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1100011011(self):
      self.assertEqual(C_RHash(142, 10, 6), tuple([1, 1, 0, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1010011011(self):
      self.assertEqual(C_RHash(107, 10, 6), tuple([1, 0, 1, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0110011011(self):
      self.assertEqual(C_RHash(51, 10, 6), tuple([0, 1, 1, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1001011011(self):
      self.assertEqual(C_RHash(92, 10, 6), tuple([1, 0, 0, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0101011011(self):
      self.assertEqual(C_RHash(36, 10, 6), tuple([0, 1, 0, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0011011011(self):
      self.assertEqual(C_RHash(15, 10, 6), tuple([0, 0, 1, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1000111011(self):
      self.assertEqual(C_RHash(87, 10, 6), tuple([1, 0, 0, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0100111011(self):
      self.assertEqual(C_RHash(31, 10, 6), tuple([0, 1, 0, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0010111011(self):
      self.assertEqual(C_RHash(10, 10, 6), tuple([0, 0, 1, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0001111011(self):
      self.assertEqual(C_RHash(4, 10, 6), tuple([0, 0, 0, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1110000111(self):
      self.assertEqual(C_RHash(175, 10, 6), tuple([1, 1, 1, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1101000111(self):
      self.assertEqual(C_RHash(155, 10, 6), tuple([1, 1, 0, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1011000111(self):
      self.assertEqual(C_RHash(120, 10, 6), tuple([1, 0, 1, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0111000111(self):
      self.assertEqual(C_RHash(64, 10, 6), tuple([0, 1, 1, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1100100111(self):
      self.assertEqual(C_RHash(145, 10, 6), tuple([1, 1, 0, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1010100111(self):
      self.assertEqual(C_RHash(110, 10, 6), tuple([1, 0, 1, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0110100111(self):
      self.assertEqual(C_RHash(54, 10, 6), tuple([0, 1, 1, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1001100111(self):
      self.assertEqual(C_RHash(95, 10, 6), tuple([1, 0, 0, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0101100111(self):
      self.assertEqual(C_RHash(39, 10, 6), tuple([0, 1, 0, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0011100111(self):
      self.assertEqual(C_RHash(18, 10, 6), tuple([0, 0, 1, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1100010111(self):
      self.assertEqual(C_RHash(141, 10, 6), tuple([1, 1, 0, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1010010111(self):
      self.assertEqual(C_RHash(106, 10, 6), tuple([1, 0, 1, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0110010111(self):
      self.assertEqual(C_RHash(50, 10, 6), tuple([0, 1, 1, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1001010111(self):
      self.assertEqual(C_RHash(91, 10, 6), tuple([1, 0, 0, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0101010111(self):
      self.assertEqual(C_RHash(35, 10, 6), tuple([0, 1, 0, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0011010111(self):
      self.assertEqual(C_RHash(14, 10, 6), tuple([0, 0, 1, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1000110111(self):
      self.assertEqual(C_RHash(86, 10, 6), tuple([1, 0, 0, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0100110111(self):
      self.assertEqual(C_RHash(30, 10, 6), tuple([0, 1, 0, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0010110111(self):
      self.assertEqual(C_RHash(9, 10, 6), tuple([0, 0, 1, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0001110111(self):
      self.assertEqual(C_RHash(3, 10, 6), tuple([0, 0, 0, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1100001111(self):
      self.assertEqual(C_RHash(140, 10, 6), tuple([1, 1, 0, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1010001111(self):
      self.assertEqual(C_RHash(105, 10, 6), tuple([1, 0, 1, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0110001111(self):
      self.assertEqual(C_RHash(49, 10, 6), tuple([0, 1, 1, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1001001111(self):
      self.assertEqual(C_RHash(90, 10, 6), tuple([1, 0, 0, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0101001111(self):
      self.assertEqual(C_RHash(34, 10, 6), tuple([0, 1, 0, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0011001111(self):
      self.assertEqual(C_RHash(13, 10, 6), tuple([0, 0, 1, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1000101111(self):
      self.assertEqual(C_RHash(85, 10, 6), tuple([1, 0, 0, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0100101111(self):
      self.assertEqual(C_RHash(29, 10, 6), tuple([0, 1, 0, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0010101111(self):
      self.assertEqual(C_RHash(8, 10, 6), tuple([0, 0, 1, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0001101111(self):
      self.assertEqual(C_RHash(2, 10, 6), tuple([0, 0, 0, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1000011111(self):
      self.assertEqual(C_RHash(84, 10, 6), tuple([1, 0, 0, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0100011111(self):
      self.assertEqual(C_RHash(28, 10, 6), tuple([0, 1, 0, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0010011111(self):
      self.assertEqual(C_RHash(7, 10, 6), tuple([0, 0, 1, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0001011111(self):
      self.assertEqual(C_RHash(1, 10, 6), tuple([0, 0, 0, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0000111111(self):
      self.assertEqual(C_RHash(0, 10, 6), tuple([0, 0, 0, 0, 1, 1, 1, 1, 1, 1]))

class HashTest_n10_r7(unittest.TestCase):
  def test_C_Hash_range_1111111000(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111110100(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111101100(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111011100(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110111100(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101111100(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011111100(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111111100(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111110010(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111101010(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111011010(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110111010(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101111010(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011111010(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111111010(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111100110(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111010110(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110110110(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101110110(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011110110(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111110110(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111001110(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110101110(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101101110(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011101110(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111101110(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110011110(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101011110(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011011110(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111011110(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100111110(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010111110(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110111110(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001111110(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101111110(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011111110(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111110001(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111101001(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111011001(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110111001(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101111001(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011111001(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111111001(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111100101(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111010101(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110110101(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101110101(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011110101(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111110101(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111001101(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110101101(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101101101(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011101101(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111101101(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110011101(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101011101(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011011101(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111011101(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100111101(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010111101(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110111101(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001111101(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101111101(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011111101(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111100011(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111010011(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110110011(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101110011(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011110011(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111110011(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111001011(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110101011(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101101011(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011101011(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111101011(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110011011(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101011011(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011011011(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111011011(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100111011(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010111011(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110111011(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001111011(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101111011(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011111011(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111000111(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110100111(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101100111(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011100111(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111100111(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110010111(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101010111(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011010111(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111010111(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100110111(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010110111(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110110111(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001110111(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101110111(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011110111(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110001111(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101001111(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011001111(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111001111(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100101111(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010101111(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110101111(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001101111(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101101111(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011101111(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100011111(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010011111(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110011111(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001011111(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101011111(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011011111(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1000111111(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0100111111(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0010111111(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0001111111(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1, 1], 7)
      self.assert_(C(10, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0, 0], 7)] = [1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0, 0], 7)] = [1, 1, 1, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0, 0], 7)] = [1, 1, 1, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0, 0], 7)] = [1, 1, 1, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0, 0], 7)] = [1, 1, 1, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0, 0], 7)] = [1, 1, 0, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0, 0], 7)] = [1, 0, 1, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0, 0], 7)] = [0, 1, 1, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1, 0], 7)] = [1, 1, 1, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1, 0], 7)] = [1, 1, 1, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1, 0], 7)] = [1, 1, 1, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1, 0], 7)] = [1, 1, 1, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1, 0], 7)] = [1, 1, 0, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1, 0], 7)] = [1, 0, 1, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1, 0], 7)] = [0, 1, 1, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1, 0], 7)] = [1, 1, 1, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1, 0], 7)] = [1, 1, 1, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1, 0], 7)] = [1, 1, 1, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1, 0], 7)] = [1, 1, 0, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1, 0], 7)] = [1, 0, 1, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1, 0], 7)] = [0, 1, 1, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1, 0], 7)] = [1, 1, 1, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1, 0], 7)] = [1, 1, 1, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1, 0], 7)] = [1, 1, 0, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1, 0], 7)] = [1, 0, 1, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1, 0], 7)] = [0, 1, 1, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1, 0], 7)] = [1, 1, 1, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1, 0], 7)] = [1, 1, 0, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1, 0], 7)] = [1, 0, 1, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1, 0], 7)] = [0, 1, 1, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1, 0], 7)] = [1, 1, 0, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1, 0], 7)] = [1, 0, 1, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1, 0], 7)] = [0, 1, 1, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1, 0], 7)] = [1, 0, 0, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1, 0], 7)] = [0, 1, 0, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1, 0], 7)] = [0, 0, 1, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0, 1], 7)] = [1, 1, 1, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0, 1], 7)] = [1, 1, 1, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0, 1], 7)] = [1, 1, 1, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0, 1], 7)] = [1, 1, 1, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0, 1], 7)] = [1, 1, 0, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0, 1], 7)] = [1, 0, 1, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0, 1], 7)] = [0, 1, 1, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0, 1], 7)] = [1, 1, 1, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0, 1], 7)] = [1, 1, 1, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0, 1], 7)] = [1, 1, 1, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0, 1], 7)] = [1, 1, 0, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0, 1], 7)] = [1, 0, 1, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0, 1], 7)] = [0, 1, 1, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0, 1], 7)] = [1, 1, 1, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0, 1], 7)] = [1, 1, 1, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0, 1], 7)] = [1, 1, 0, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0, 1], 7)] = [1, 0, 1, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0, 1], 7)] = [0, 1, 1, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0, 1], 7)] = [1, 1, 1, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0, 1], 7)] = [1, 1, 0, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0, 1], 7)] = [1, 0, 1, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0, 1], 7)] = [0, 1, 1, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0, 1], 7)] = [1, 1, 0, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0, 1], 7)] = [1, 0, 1, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0, 1], 7)] = [0, 1, 1, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0, 1], 7)] = [1, 0, 0, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0, 1], 7)] = [0, 1, 0, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0, 1], 7)] = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1, 1], 7)] = [1, 1, 1, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1, 1], 7)] = [1, 1, 1, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1, 1], 7)] = [1, 1, 1, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1, 1], 7)] = [1, 1, 0, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1, 1], 7)] = [1, 0, 1, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1, 1], 7)] = [0, 1, 1, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1, 1], 7)] = [1, 1, 1, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1, 1], 7)] = [1, 1, 1, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1, 1], 7)] = [1, 1, 0, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1, 1], 7)] = [1, 0, 1, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1, 1], 7)] = [0, 1, 1, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1, 1], 7)] = [1, 1, 1, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1, 1], 7)] = [1, 1, 0, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1, 1], 7)] = [1, 0, 1, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1, 1], 7)] = [0, 1, 1, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1, 1], 7)] = [1, 1, 0, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1, 1], 7)] = [1, 0, 1, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1, 1], 7)] = [0, 1, 1, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1, 1], 7)] = [1, 0, 0, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1, 1], 7)] = [0, 1, 0, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1, 1], 7)] = [0, 0, 1, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1, 1], 7)] = [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1, 1], 7)] = [1, 1, 1, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1, 1], 7)] = [1, 1, 0, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1, 1], 7)] = [1, 0, 1, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1, 1], 7)] = [0, 1, 1, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1, 1], 7)] = [1, 1, 1, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1, 1], 7)] = [1, 1, 0, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1, 1], 7)] = [1, 0, 1, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1, 1], 7)] = [0, 1, 1, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1, 1], 7)] = [1, 1, 0, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1, 1], 7)] = [1, 0, 1, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1, 1], 7)] = [0, 1, 1, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1, 1], 7)] = [1, 0, 0, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1, 1], 7)] = [0, 1, 0, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1, 1], 7)] = [0, 0, 1, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1, 1], 7)] = [1, 1, 1, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1, 1], 7)] = [1, 1, 0, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1, 1], 7)] = [1, 0, 1, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1, 1], 7)] = [0, 1, 1, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1, 1], 7)] = [1, 1, 0, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1, 1], 7)] = [1, 0, 1, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1, 1], 7)] = [0, 1, 1, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1, 1], 7)] = [1, 0, 0, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1, 1], 7)] = [0, 1, 0, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1, 1], 7)] = [0, 0, 1, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1, 1], 7)] = [1, 1, 0, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1, 1], 7)] = [1, 0, 1, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1, 1], 7)] = [0, 1, 1, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1, 1], 7)] = [1, 0, 0, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1, 1], 7)] = [0, 1, 0, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1, 1], 7)] = [0, 0, 1, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1, 1], 7)] = [1, 0, 0, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1, 1], 7)] = [0, 1, 0, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1, 1], 7)] = [0, 0, 1, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1, 1], 7)] = [0, 0, 0, 1, 1, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 120)

  def test_C_RHash_soundness_1111111000(self):
      self.assertEqual(C_RHash(119, 10, 7), tuple([1, 1, 1, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_1111110100(self):
      self.assertEqual(C_RHash(118, 10, 7), tuple([1, 1, 1, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_1111101100(self):
      self.assertEqual(C_RHash(115, 10, 7), tuple([1, 1, 1, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1111011100(self):
      self.assertEqual(C_RHash(109, 10, 7), tuple([1, 1, 1, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1110111100(self):
      self.assertEqual(C_RHash(99, 10, 7), tuple([1, 1, 1, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1101111100(self):
      self.assertEqual(C_RHash(84, 10, 7), tuple([1, 1, 0, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1011111100(self):
      self.assertEqual(C_RHash(63, 10, 7), tuple([1, 0, 1, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_0111111100(self):
      self.assertEqual(C_RHash(35, 10, 7), tuple([0, 1, 1, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1111110010(self):
      self.assertEqual(C_RHash(117, 10, 7), tuple([1, 1, 1, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_1111101010(self):
      self.assertEqual(C_RHash(114, 10, 7), tuple([1, 1, 1, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1111011010(self):
      self.assertEqual(C_RHash(108, 10, 7), tuple([1, 1, 1, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1110111010(self):
      self.assertEqual(C_RHash(98, 10, 7), tuple([1, 1, 1, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1101111010(self):
      self.assertEqual(C_RHash(83, 10, 7), tuple([1, 1, 0, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1011111010(self):
      self.assertEqual(C_RHash(62, 10, 7), tuple([1, 0, 1, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_0111111010(self):
      self.assertEqual(C_RHash(34, 10, 7), tuple([0, 1, 1, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1111100110(self):
      self.assertEqual(C_RHash(112, 10, 7), tuple([1, 1, 1, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1111010110(self):
      self.assertEqual(C_RHash(106, 10, 7), tuple([1, 1, 1, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1110110110(self):
      self.assertEqual(C_RHash(96, 10, 7), tuple([1, 1, 1, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1101110110(self):
      self.assertEqual(C_RHash(81, 10, 7), tuple([1, 1, 0, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1011110110(self):
      self.assertEqual(C_RHash(60, 10, 7), tuple([1, 0, 1, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_0111110110(self):
      self.assertEqual(C_RHash(32, 10, 7), tuple([0, 1, 1, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1111001110(self):
      self.assertEqual(C_RHash(103, 10, 7), tuple([1, 1, 1, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1110101110(self):
      self.assertEqual(C_RHash(93, 10, 7), tuple([1, 1, 1, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1101101110(self):
      self.assertEqual(C_RHash(78, 10, 7), tuple([1, 1, 0, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1011101110(self):
      self.assertEqual(C_RHash(57, 10, 7), tuple([1, 0, 1, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0111101110(self):
      self.assertEqual(C_RHash(29, 10, 7), tuple([0, 1, 1, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1110011110(self):
      self.assertEqual(C_RHash(89, 10, 7), tuple([1, 1, 1, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1101011110(self):
      self.assertEqual(C_RHash(74, 10, 7), tuple([1, 1, 0, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1011011110(self):
      self.assertEqual(C_RHash(53, 10, 7), tuple([1, 0, 1, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0111011110(self):
      self.assertEqual(C_RHash(25, 10, 7), tuple([0, 1, 1, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1100111110(self):
      self.assertEqual(C_RHash(69, 10, 7), tuple([1, 1, 0, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1010111110(self):
      self.assertEqual(C_RHash(48, 10, 7), tuple([1, 0, 1, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0110111110(self):
      self.assertEqual(C_RHash(20, 10, 7), tuple([0, 1, 1, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1001111110(self):
      self.assertEqual(C_RHash(42, 10, 7), tuple([1, 0, 0, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0101111110(self):
      self.assertEqual(C_RHash(14, 10, 7), tuple([0, 1, 0, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0011111110(self):
      self.assertEqual(C_RHash(7, 10, 7), tuple([0, 0, 1, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1111110001(self):
      self.assertEqual(C_RHash(116, 10, 7), tuple([1, 1, 1, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_1111101001(self):
      self.assertEqual(C_RHash(113, 10, 7), tuple([1, 1, 1, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1111011001(self):
      self.assertEqual(C_RHash(107, 10, 7), tuple([1, 1, 1, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1110111001(self):
      self.assertEqual(C_RHash(97, 10, 7), tuple([1, 1, 1, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1101111001(self):
      self.assertEqual(C_RHash(82, 10, 7), tuple([1, 1, 0, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1011111001(self):
      self.assertEqual(C_RHash(61, 10, 7), tuple([1, 0, 1, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_0111111001(self):
      self.assertEqual(C_RHash(33, 10, 7), tuple([0, 1, 1, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1111100101(self):
      self.assertEqual(C_RHash(111, 10, 7), tuple([1, 1, 1, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1111010101(self):
      self.assertEqual(C_RHash(105, 10, 7), tuple([1, 1, 1, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1110110101(self):
      self.assertEqual(C_RHash(95, 10, 7), tuple([1, 1, 1, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1101110101(self):
      self.assertEqual(C_RHash(80, 10, 7), tuple([1, 1, 0, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1011110101(self):
      self.assertEqual(C_RHash(59, 10, 7), tuple([1, 0, 1, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_0111110101(self):
      self.assertEqual(C_RHash(31, 10, 7), tuple([0, 1, 1, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1111001101(self):
      self.assertEqual(C_RHash(102, 10, 7), tuple([1, 1, 1, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1110101101(self):
      self.assertEqual(C_RHash(92, 10, 7), tuple([1, 1, 1, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1101101101(self):
      self.assertEqual(C_RHash(77, 10, 7), tuple([1, 1, 0, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1011101101(self):
      self.assertEqual(C_RHash(56, 10, 7), tuple([1, 0, 1, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0111101101(self):
      self.assertEqual(C_RHash(28, 10, 7), tuple([0, 1, 1, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1110011101(self):
      self.assertEqual(C_RHash(88, 10, 7), tuple([1, 1, 1, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1101011101(self):
      self.assertEqual(C_RHash(73, 10, 7), tuple([1, 1, 0, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1011011101(self):
      self.assertEqual(C_RHash(52, 10, 7), tuple([1, 0, 1, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0111011101(self):
      self.assertEqual(C_RHash(24, 10, 7), tuple([0, 1, 1, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1100111101(self):
      self.assertEqual(C_RHash(68, 10, 7), tuple([1, 1, 0, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1010111101(self):
      self.assertEqual(C_RHash(47, 10, 7), tuple([1, 0, 1, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0110111101(self):
      self.assertEqual(C_RHash(19, 10, 7), tuple([0, 1, 1, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1001111101(self):
      self.assertEqual(C_RHash(41, 10, 7), tuple([1, 0, 0, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0101111101(self):
      self.assertEqual(C_RHash(13, 10, 7), tuple([0, 1, 0, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0011111101(self):
      self.assertEqual(C_RHash(6, 10, 7), tuple([0, 0, 1, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1111100011(self):
      self.assertEqual(C_RHash(110, 10, 7), tuple([1, 1, 1, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1111010011(self):
      self.assertEqual(C_RHash(104, 10, 7), tuple([1, 1, 1, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1110110011(self):
      self.assertEqual(C_RHash(94, 10, 7), tuple([1, 1, 1, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1101110011(self):
      self.assertEqual(C_RHash(79, 10, 7), tuple([1, 1, 0, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1011110011(self):
      self.assertEqual(C_RHash(58, 10, 7), tuple([1, 0, 1, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_0111110011(self):
      self.assertEqual(C_RHash(30, 10, 7), tuple([0, 1, 1, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1111001011(self):
      self.assertEqual(C_RHash(101, 10, 7), tuple([1, 1, 1, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1110101011(self):
      self.assertEqual(C_RHash(91, 10, 7), tuple([1, 1, 1, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1101101011(self):
      self.assertEqual(C_RHash(76, 10, 7), tuple([1, 1, 0, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1011101011(self):
      self.assertEqual(C_RHash(55, 10, 7), tuple([1, 0, 1, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0111101011(self):
      self.assertEqual(C_RHash(27, 10, 7), tuple([0, 1, 1, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1110011011(self):
      self.assertEqual(C_RHash(87, 10, 7), tuple([1, 1, 1, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1101011011(self):
      self.assertEqual(C_RHash(72, 10, 7), tuple([1, 1, 0, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1011011011(self):
      self.assertEqual(C_RHash(51, 10, 7), tuple([1, 0, 1, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0111011011(self):
      self.assertEqual(C_RHash(23, 10, 7), tuple([0, 1, 1, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1100111011(self):
      self.assertEqual(C_RHash(67, 10, 7), tuple([1, 1, 0, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1010111011(self):
      self.assertEqual(C_RHash(46, 10, 7), tuple([1, 0, 1, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0110111011(self):
      self.assertEqual(C_RHash(18, 10, 7), tuple([0, 1, 1, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1001111011(self):
      self.assertEqual(C_RHash(40, 10, 7), tuple([1, 0, 0, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0101111011(self):
      self.assertEqual(C_RHash(12, 10, 7), tuple([0, 1, 0, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0011111011(self):
      self.assertEqual(C_RHash(5, 10, 7), tuple([0, 0, 1, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1111000111(self):
      self.assertEqual(C_RHash(100, 10, 7), tuple([1, 1, 1, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1110100111(self):
      self.assertEqual(C_RHash(90, 10, 7), tuple([1, 1, 1, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1101100111(self):
      self.assertEqual(C_RHash(75, 10, 7), tuple([1, 1, 0, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1011100111(self):
      self.assertEqual(C_RHash(54, 10, 7), tuple([1, 0, 1, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0111100111(self):
      self.assertEqual(C_RHash(26, 10, 7), tuple([0, 1, 1, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1110010111(self):
      self.assertEqual(C_RHash(86, 10, 7), tuple([1, 1, 1, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1101010111(self):
      self.assertEqual(C_RHash(71, 10, 7), tuple([1, 1, 0, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1011010111(self):
      self.assertEqual(C_RHash(50, 10, 7), tuple([1, 0, 1, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0111010111(self):
      self.assertEqual(C_RHash(22, 10, 7), tuple([0, 1, 1, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1100110111(self):
      self.assertEqual(C_RHash(66, 10, 7), tuple([1, 1, 0, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1010110111(self):
      self.assertEqual(C_RHash(45, 10, 7), tuple([1, 0, 1, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0110110111(self):
      self.assertEqual(C_RHash(17, 10, 7), tuple([0, 1, 1, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1001110111(self):
      self.assertEqual(C_RHash(39, 10, 7), tuple([1, 0, 0, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0101110111(self):
      self.assertEqual(C_RHash(11, 10, 7), tuple([0, 1, 0, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0011110111(self):
      self.assertEqual(C_RHash(4, 10, 7), tuple([0, 0, 1, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1110001111(self):
      self.assertEqual(C_RHash(85, 10, 7), tuple([1, 1, 1, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1101001111(self):
      self.assertEqual(C_RHash(70, 10, 7), tuple([1, 1, 0, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1011001111(self):
      self.assertEqual(C_RHash(49, 10, 7), tuple([1, 0, 1, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0111001111(self):
      self.assertEqual(C_RHash(21, 10, 7), tuple([0, 1, 1, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1100101111(self):
      self.assertEqual(C_RHash(65, 10, 7), tuple([1, 1, 0, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1010101111(self):
      self.assertEqual(C_RHash(44, 10, 7), tuple([1, 0, 1, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0110101111(self):
      self.assertEqual(C_RHash(16, 10, 7), tuple([0, 1, 1, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1001101111(self):
      self.assertEqual(C_RHash(38, 10, 7), tuple([1, 0, 0, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0101101111(self):
      self.assertEqual(C_RHash(10, 10, 7), tuple([0, 1, 0, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0011101111(self):
      self.assertEqual(C_RHash(3, 10, 7), tuple([0, 0, 1, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1100011111(self):
      self.assertEqual(C_RHash(64, 10, 7), tuple([1, 1, 0, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1010011111(self):
      self.assertEqual(C_RHash(43, 10, 7), tuple([1, 0, 1, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0110011111(self):
      self.assertEqual(C_RHash(15, 10, 7), tuple([0, 1, 1, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1001011111(self):
      self.assertEqual(C_RHash(37, 10, 7), tuple([1, 0, 0, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0101011111(self):
      self.assertEqual(C_RHash(9, 10, 7), tuple([0, 1, 0, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0011011111(self):
      self.assertEqual(C_RHash(2, 10, 7), tuple([0, 0, 1, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1000111111(self):
      self.assertEqual(C_RHash(36, 10, 7), tuple([1, 0, 0, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0100111111(self):
      self.assertEqual(C_RHash(8, 10, 7), tuple([0, 1, 0, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0010111111(self):
      self.assertEqual(C_RHash(1, 10, 7), tuple([0, 0, 1, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0001111111(self):
      self.assertEqual(C_RHash(0, 10, 7), tuple([0, 0, 0, 1, 1, 1, 1, 1, 1, 1]))

class HashTest_n10_r8(unittest.TestCase):
  def test_C_Hash_range_1111111100(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0, 0], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111111010(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1, 0], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111110110(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1, 0], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111101110(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1, 0], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111011110(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1, 0], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110111110(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1, 0], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101111110(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1, 0], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011111110(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1, 0], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111111110(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1, 0], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111111001(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111110101(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111101101(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111011101(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110111101(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101111101(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011111101(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111111101(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111110011(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111101011(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111011011(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110111011(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101111011(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011111011(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111111011(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111100111(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111010111(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110110111(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101110111(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011110111(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111110111(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111001111(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110101111(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101101111(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011101111(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111101111(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110011111(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101011111(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011011111(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111011111(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1100111111(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1010111111(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0110111111(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1001111111(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0101111111(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0011111111(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1, 1], 8)
      self.assert_(C(10, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0, 0], 8)] = [1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1, 0], 8)] = [1, 1, 1, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1, 0], 8)] = [1, 1, 1, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1, 0], 8)] = [1, 1, 1, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1, 0], 8)] = [1, 1, 1, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1, 0], 8)] = [1, 1, 1, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1, 0], 8)] = [1, 1, 0, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1, 0], 8)] = [1, 0, 1, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1, 0], 8)] = [0, 1, 1, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0, 1], 8)] = [1, 1, 1, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0, 1], 8)] = [1, 1, 1, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0, 1], 8)] = [1, 1, 1, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0, 1], 8)] = [1, 1, 1, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0, 1], 8)] = [1, 1, 1, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0, 1], 8)] = [1, 1, 0, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0, 1], 8)] = [1, 0, 1, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0, 1], 8)] = [0, 1, 1, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1, 1], 8)] = [1, 1, 1, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1, 1], 8)] = [1, 1, 1, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1, 1], 8)] = [1, 1, 1, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1, 1], 8)] = [1, 1, 1, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1, 1], 8)] = [1, 1, 0, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1, 1], 8)] = [1, 0, 1, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1, 1], 8)] = [0, 1, 1, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1, 1], 8)] = [1, 1, 1, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1, 1], 8)] = [1, 1, 1, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1, 1], 8)] = [1, 1, 1, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1, 1], 8)] = [1, 1, 0, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1, 1], 8)] = [1, 0, 1, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1, 1], 8)] = [0, 1, 1, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1, 1], 8)] = [1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1, 1], 8)] = [1, 1, 1, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1, 1], 8)] = [1, 1, 0, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1, 1], 8)] = [1, 0, 1, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1, 1], 8)] = [0, 1, 1, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1, 1], 8)] = [1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1, 1], 8)] = [1, 1, 0, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1, 1], 8)] = [1, 0, 1, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1, 1], 8)] = [0, 1, 1, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1, 1], 8)] = [1, 1, 0, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1, 1], 8)] = [1, 0, 1, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1, 1], 8)] = [0, 1, 1, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1, 1], 8)] = [1, 0, 0, 1, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1, 1], 8)] = [0, 1, 0, 1, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1, 1], 8)] = [0, 0, 1, 1, 1, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 45)

  def test_C_RHash_soundness_1111111100(self):
      self.assertEqual(C_RHash(44, 10, 8), tuple([1, 1, 1, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_1111111010(self):
      self.assertEqual(C_RHash(43, 10, 8), tuple([1, 1, 1, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_1111110110(self):
      self.assertEqual(C_RHash(41, 10, 8), tuple([1, 1, 1, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_1111101110(self):
      self.assertEqual(C_RHash(38, 10, 8), tuple([1, 1, 1, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1111011110(self):
      self.assertEqual(C_RHash(34, 10, 8), tuple([1, 1, 1, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1110111110(self):
      self.assertEqual(C_RHash(29, 10, 8), tuple([1, 1, 1, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1101111110(self):
      self.assertEqual(C_RHash(23, 10, 8), tuple([1, 1, 0, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1011111110(self):
      self.assertEqual(C_RHash(16, 10, 8), tuple([1, 0, 1, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_0111111110(self):
      self.assertEqual(C_RHash(8, 10, 8), tuple([0, 1, 1, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1111111001(self):
      self.assertEqual(C_RHash(42, 10, 8), tuple([1, 1, 1, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_1111110101(self):
      self.assertEqual(C_RHash(40, 10, 8), tuple([1, 1, 1, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_1111101101(self):
      self.assertEqual(C_RHash(37, 10, 8), tuple([1, 1, 1, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1111011101(self):
      self.assertEqual(C_RHash(33, 10, 8), tuple([1, 1, 1, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1110111101(self):
      self.assertEqual(C_RHash(28, 10, 8), tuple([1, 1, 1, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1101111101(self):
      self.assertEqual(C_RHash(22, 10, 8), tuple([1, 1, 0, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1011111101(self):
      self.assertEqual(C_RHash(15, 10, 8), tuple([1, 0, 1, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_0111111101(self):
      self.assertEqual(C_RHash(7, 10, 8), tuple([0, 1, 1, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1111110011(self):
      self.assertEqual(C_RHash(39, 10, 8), tuple([1, 1, 1, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_1111101011(self):
      self.assertEqual(C_RHash(36, 10, 8), tuple([1, 1, 1, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1111011011(self):
      self.assertEqual(C_RHash(32, 10, 8), tuple([1, 1, 1, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1110111011(self):
      self.assertEqual(C_RHash(27, 10, 8), tuple([1, 1, 1, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1101111011(self):
      self.assertEqual(C_RHash(21, 10, 8), tuple([1, 1, 0, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1011111011(self):
      self.assertEqual(C_RHash(14, 10, 8), tuple([1, 0, 1, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_0111111011(self):
      self.assertEqual(C_RHash(6, 10, 8), tuple([0, 1, 1, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1111100111(self):
      self.assertEqual(C_RHash(35, 10, 8), tuple([1, 1, 1, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1111010111(self):
      self.assertEqual(C_RHash(31, 10, 8), tuple([1, 1, 1, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1110110111(self):
      self.assertEqual(C_RHash(26, 10, 8), tuple([1, 1, 1, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1101110111(self):
      self.assertEqual(C_RHash(20, 10, 8), tuple([1, 1, 0, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1011110111(self):
      self.assertEqual(C_RHash(13, 10, 8), tuple([1, 0, 1, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_0111110111(self):
      self.assertEqual(C_RHash(5, 10, 8), tuple([0, 1, 1, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1111001111(self):
      self.assertEqual(C_RHash(30, 10, 8), tuple([1, 1, 1, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1110101111(self):
      self.assertEqual(C_RHash(25, 10, 8), tuple([1, 1, 1, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1101101111(self):
      self.assertEqual(C_RHash(19, 10, 8), tuple([1, 1, 0, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1011101111(self):
      self.assertEqual(C_RHash(12, 10, 8), tuple([1, 0, 1, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0111101111(self):
      self.assertEqual(C_RHash(4, 10, 8), tuple([0, 1, 1, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1110011111(self):
      self.assertEqual(C_RHash(24, 10, 8), tuple([1, 1, 1, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1101011111(self):
      self.assertEqual(C_RHash(18, 10, 8), tuple([1, 1, 0, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1011011111(self):
      self.assertEqual(C_RHash(11, 10, 8), tuple([1, 0, 1, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0111011111(self):
      self.assertEqual(C_RHash(3, 10, 8), tuple([0, 1, 1, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1100111111(self):
      self.assertEqual(C_RHash(17, 10, 8), tuple([1, 1, 0, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1010111111(self):
      self.assertEqual(C_RHash(10, 10, 8), tuple([1, 0, 1, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0110111111(self):
      self.assertEqual(C_RHash(2, 10, 8), tuple([0, 1, 1, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1001111111(self):
      self.assertEqual(C_RHash(9, 10, 8), tuple([1, 0, 0, 1, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0101111111(self):
      self.assertEqual(C_RHash(1, 10, 8), tuple([0, 1, 0, 1, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0011111111(self):
      self.assertEqual(C_RHash(0, 10, 8), tuple([0, 0, 1, 1, 1, 1, 1, 1, 1, 1]))

class HashTest_n10_r9(unittest.TestCase):
  def test_C_Hash_range_1111111110(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 1, 0], 9)
      self.assert_(C(10, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111111101(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0, 1], 9)
      self.assert_(C(10, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111111011(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1, 1], 9)
      self.assert_(C(10, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111110111(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1, 1], 9)
      self.assert_(C(10, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111101111(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1, 1], 9)
      self.assert_(C(10, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1111011111(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1, 1], 9)
      self.assert_(C(10, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1110111111(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1, 1], 9)
      self.assert_(C(10, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1101111111(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1, 1], 9)
      self.assert_(C(10, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_1011111111(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1, 1], 9)
      self.assert_(C(10, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_0111111111(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1, 1], 9)
      self.assert_(C(10, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 1, 0], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 1, 0], 9)] = [1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0, 1], 9)] = [1, 1, 1, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1, 1], 9)] = [1, 1, 1, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1, 1], 9)] = [1, 1, 1, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1, 1], 9)] = [1, 1, 1, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1, 1], 9)] = [1, 1, 1, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1, 1], 9)] = [1, 1, 1, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1, 1], 9)] = [1, 1, 0, 1, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1, 1], 9)] = [1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1, 1], 9)] = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 10)

  def test_C_RHash_soundness_1111111110(self):
      self.assertEqual(C_RHash(9, 10, 9), tuple([1, 1, 1, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_1111111101(self):
      self.assertEqual(C_RHash(8, 10, 9), tuple([1, 1, 1, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_1111111011(self):
      self.assertEqual(C_RHash(7, 10, 9), tuple([1, 1, 1, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_1111110111(self):
      self.assertEqual(C_RHash(6, 10, 9), tuple([1, 1, 1, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_1111101111(self):
      self.assertEqual(C_RHash(5, 10, 9), tuple([1, 1, 1, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1111011111(self):
      self.assertEqual(C_RHash(4, 10, 9), tuple([1, 1, 1, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1110111111(self):
      self.assertEqual(C_RHash(3, 10, 9), tuple([1, 1, 1, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1101111111(self):
      self.assertEqual(C_RHash(2, 10, 9), tuple([1, 1, 0, 1, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_1011111111(self):
      self.assertEqual(C_RHash(1, 10, 9), tuple([1, 0, 1, 1, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_0111111111(self):
      self.assertEqual(C_RHash(0, 10, 9), tuple([0, 1, 1, 1, 1, 1, 1, 1, 1, 1]))

class HashTest_n11_r1(unittest.TestCase):
  def test_C_Hash_range_10000000000(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 1)
      self.assert_(C(11, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000000000(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 1)
      self.assert_(C(11, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100000000(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 1)
      self.assert_(C(11, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010000000(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 1)
      self.assert_(C(11, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001000000(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 1)
      self.assert_(C(11, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000100000(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], 1)
      self.assert_(C(11, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000010000(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], 1)
      self.assert_(C(11, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000001000(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], 1)
      self.assert_(C(11, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000000100(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], 1)
      self.assert_(C(11, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000000010(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], 1)
      self.assert_(C(11, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000000001(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], 1)
      self.assert_(C(11, 1)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 1)] = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 1)] = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 1)] = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 1)] = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 1)] = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], 1)] = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], 1)] = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], 1)] = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], 1)] = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], 1)] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], 1), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], 1)] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
    self.assertEqual(len(d), 11)

  def test_C_RHash_soundness_10000000000(self):
      self.assertEqual(C_RHash(10, 11, 1), tuple([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01000000000(self):
      self.assertEqual(C_RHash(9, 11, 1), tuple([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00100000000(self):
      self.assertEqual(C_RHash(8, 11, 1), tuple([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00010000000(self):
      self.assertEqual(C_RHash(7, 11, 1), tuple([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00001000000(self):
      self.assertEqual(C_RHash(6, 11, 1), tuple([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00000100000(self):
      self.assertEqual(C_RHash(5, 11, 1), tuple([0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00000010000(self):
      self.assertEqual(C_RHash(4, 11, 1), tuple([0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00000001000(self):
      self.assertEqual(C_RHash(3, 11, 1), tuple([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00000000100(self):
      self.assertEqual(C_RHash(2, 11, 1), tuple([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00000000010(self):
      self.assertEqual(C_RHash(1, 11, 1), tuple([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00000000001(self):
      self.assertEqual(C_RHash(0, 11, 1), tuple([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]))

class HashTest_n11_r2(unittest.TestCase):
  def test_C_Hash_range_11000000000(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100000000(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100000000(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010000000(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010000000(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110000000(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001000000(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001000000(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101000000(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011000000(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000100000(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000100000(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100100000(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010100000(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001100000(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000010000(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000010000(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100010000(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010010000(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001010000(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000110000(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000001000(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000001000(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100001000(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010001000(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001001000(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000101000(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000011000(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000000100(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000000100(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100000100(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010000100(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001000100(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000100100(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000010100(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000001100(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000000010(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000000010(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100000010(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010000010(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001000010(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000100010(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000010010(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000001010(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000000110(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000000001(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000000001(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100000001(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010000001(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001000001(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000100001(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000010001(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000001001(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000000101(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000000011(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], 2)
      self.assert_(C(11, 2)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 2)] = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 2)] = [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], 2)] = [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 2)] = [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], 2)] = [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], 2)] = [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], 2)] = [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], 2)] = [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], 2)] = [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], 2)] = [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], 2)] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], 2)] = [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], 2)] = [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], 2)] = [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], 2)] = [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], 2)] = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], 2)] = [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], 2)] = [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], 2)] = [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], 2)] = [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], 2)] = [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], 2)] = [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0], 2)] = [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0], 2)] = [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], 2)] = [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], 2)] = [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], 2)] = [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], 2)] = [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], 2)] = [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], 2)] = [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0], 2)] = [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], 2)] = [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], 2)] = [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], 2)] = [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], 2)] = [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], 2)] = [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], 2)] = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], 2)] = [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], 2)] = [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], 2)] = [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], 2)] = [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], 2)] = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], 2)] = [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], 2)] = [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], 2)] = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], 2)] = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1], 2)] = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], 2)] = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], 2)] = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], 2)] = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], 2)] = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], 2)] = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], 2)] = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], 2)] = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], 2), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], 2)] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]
    self.assertEqual(len(d), 55)

  def test_C_RHash_soundness_11000000000(self):
      self.assertEqual(C_RHash(54, 11, 2), tuple([1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10100000000(self):
      self.assertEqual(C_RHash(53, 11, 2), tuple([1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01100000000(self):
      self.assertEqual(C_RHash(44, 11, 2), tuple([0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10010000000(self):
      self.assertEqual(C_RHash(52, 11, 2), tuple([1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01010000000(self):
      self.assertEqual(C_RHash(43, 11, 2), tuple([0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00110000000(self):
      self.assertEqual(C_RHash(35, 11, 2), tuple([0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10001000000(self):
      self.assertEqual(C_RHash(51, 11, 2), tuple([1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01001000000(self):
      self.assertEqual(C_RHash(42, 11, 2), tuple([0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00101000000(self):
      self.assertEqual(C_RHash(34, 11, 2), tuple([0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00011000000(self):
      self.assertEqual(C_RHash(27, 11, 2), tuple([0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10000100000(self):
      self.assertEqual(C_RHash(50, 11, 2), tuple([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01000100000(self):
      self.assertEqual(C_RHash(41, 11, 2), tuple([0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00100100000(self):
      self.assertEqual(C_RHash(33, 11, 2), tuple([0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00010100000(self):
      self.assertEqual(C_RHash(26, 11, 2), tuple([0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00001100000(self):
      self.assertEqual(C_RHash(20, 11, 2), tuple([0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10000010000(self):
      self.assertEqual(C_RHash(49, 11, 2), tuple([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01000010000(self):
      self.assertEqual(C_RHash(40, 11, 2), tuple([0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00100010000(self):
      self.assertEqual(C_RHash(32, 11, 2), tuple([0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00010010000(self):
      self.assertEqual(C_RHash(25, 11, 2), tuple([0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00001010000(self):
      self.assertEqual(C_RHash(19, 11, 2), tuple([0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00000110000(self):
      self.assertEqual(C_RHash(14, 11, 2), tuple([0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10000001000(self):
      self.assertEqual(C_RHash(48, 11, 2), tuple([1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01000001000(self):
      self.assertEqual(C_RHash(39, 11, 2), tuple([0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00100001000(self):
      self.assertEqual(C_RHash(31, 11, 2), tuple([0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00010001000(self):
      self.assertEqual(C_RHash(24, 11, 2), tuple([0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00001001000(self):
      self.assertEqual(C_RHash(18, 11, 2), tuple([0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00000101000(self):
      self.assertEqual(C_RHash(13, 11, 2), tuple([0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00000011000(self):
      self.assertEqual(C_RHash(9, 11, 2), tuple([0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10000000100(self):
      self.assertEqual(C_RHash(47, 11, 2), tuple([1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01000000100(self):
      self.assertEqual(C_RHash(38, 11, 2), tuple([0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00100000100(self):
      self.assertEqual(C_RHash(30, 11, 2), tuple([0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00010000100(self):
      self.assertEqual(C_RHash(23, 11, 2), tuple([0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00001000100(self):
      self.assertEqual(C_RHash(17, 11, 2), tuple([0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00000100100(self):
      self.assertEqual(C_RHash(12, 11, 2), tuple([0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00000010100(self):
      self.assertEqual(C_RHash(8, 11, 2), tuple([0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00000001100(self):
      self.assertEqual(C_RHash(5, 11, 2), tuple([0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10000000010(self):
      self.assertEqual(C_RHash(46, 11, 2), tuple([1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01000000010(self):
      self.assertEqual(C_RHash(37, 11, 2), tuple([0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00100000010(self):
      self.assertEqual(C_RHash(29, 11, 2), tuple([0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00010000010(self):
      self.assertEqual(C_RHash(22, 11, 2), tuple([0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00001000010(self):
      self.assertEqual(C_RHash(16, 11, 2), tuple([0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00000100010(self):
      self.assertEqual(C_RHash(11, 11, 2), tuple([0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00000010010(self):
      self.assertEqual(C_RHash(7, 11, 2), tuple([0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00000001010(self):
      self.assertEqual(C_RHash(4, 11, 2), tuple([0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00000000110(self):
      self.assertEqual(C_RHash(2, 11, 2), tuple([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10000000001(self):
      self.assertEqual(C_RHash(45, 11, 2), tuple([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01000000001(self):
      self.assertEqual(C_RHash(36, 11, 2), tuple([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00100000001(self):
      self.assertEqual(C_RHash(28, 11, 2), tuple([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00010000001(self):
      self.assertEqual(C_RHash(21, 11, 2), tuple([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00001000001(self):
      self.assertEqual(C_RHash(15, 11, 2), tuple([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00000100001(self):
      self.assertEqual(C_RHash(10, 11, 2), tuple([0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00000010001(self):
      self.assertEqual(C_RHash(6, 11, 2), tuple([0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00000001001(self):
      self.assertEqual(C_RHash(3, 11, 2), tuple([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00000000101(self):
      self.assertEqual(C_RHash(1, 11, 2), tuple([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00000000011(self):
      self.assertEqual(C_RHash(0, 11, 2), tuple([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]))

class HashTest_n11_r3(unittest.TestCase):
  def test_C_Hash_range_11100000000(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010000000(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110000000(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110000000(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001000000(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101000000(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101000000(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011000000(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011000000(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111000000(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000100000(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100100000(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100100000(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010100000(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010100000(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110100000(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001100000(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001100000(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101100000(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011100000(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000010000(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100010000(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100010000(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010010000(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010010000(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110010000(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001010000(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001010000(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101010000(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011010000(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000110000(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000110000(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100110000(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010110000(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001110000(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000001000(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100001000(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100001000(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010001000(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010001000(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110001000(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001001000(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001001000(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101001000(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011001000(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000101000(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000101000(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100101000(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010101000(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001101000(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000011000(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000011000(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100011000(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010011000(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001011000(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000111000(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000000100(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100000100(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100000100(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010000100(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010000100(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110000100(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001000100(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001000100(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101000100(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011000100(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000100100(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000100100(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100100100(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010100100(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001100100(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000010100(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000010100(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100010100(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010010100(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001010100(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000110100(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000001100(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000001100(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100001100(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010001100(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001001100(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000101100(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000011100(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000000010(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100000010(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100000010(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010000010(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010000010(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110000010(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001000010(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001000010(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101000010(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011000010(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000100010(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000100010(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100100010(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010100010(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001100010(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000010010(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000010010(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100010010(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010010010(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001010010(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000110010(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000001010(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000001010(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100001010(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010001010(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001001010(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000101010(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000011010(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000000110(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000000110(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100000110(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010000110(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001000110(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000100110(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000010110(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000001110(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000000001(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100000001(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100000001(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010000001(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010000001(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110000001(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001000001(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001000001(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101000001(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011000001(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000100001(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000100001(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100100001(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010100001(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001100001(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000010001(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000010001(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100010001(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010010001(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001010001(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000110001(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000001001(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000001001(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100001001(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010001001(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001001001(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000101001(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000011001(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000000101(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000000101(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100000101(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010000101(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001000101(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000100101(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000010101(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000001101(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000000011(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000000011(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100000011(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010000011(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001000011(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000100011(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000010011(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000001011(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000000111(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], 3)
      self.assert_(C(11, 3)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], 3)] = [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], 3)] = [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], 3)] = [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 3)] = [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], 3)] = [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], 3)] = [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], 3)] = [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], 3)] = [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], 3)] = [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], 3)] = [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], 3)] = [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], 3)] = [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], 3)] = [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], 3)] = [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], 3)] = [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], 3)] = [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], 3)] = [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], 3)] = [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], 3)] = [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], 3)] = [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], 3)] = [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], 3)] = [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0], 3)] = [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], 3)] = [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0], 3)] = [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], 3)] = [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], 3)] = [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], 3)] = [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0], 3)] = [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0], 3)] = [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], 3)] = [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], 3)] = [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0], 3)] = [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], 3)] = [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0], 3)] = [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0], 3)] = [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0], 3)] = [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], 3)] = [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], 3)] = [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], 3)] = [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], 3)] = [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], 3)] = [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], 3)] = [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], 3)] = [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], 3)] = [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], 3)] = [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0], 3)] = [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], 3)] = [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0], 3)] = [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], 3)] = [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], 3)] = [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], 3)] = [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], 3)] = [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], 3)] = [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0], 3)] = [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], 3)] = [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0], 3)] = [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0], 3)] = [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], 3)] = [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], 3)] = [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], 3)] = [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0], 3)] = [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], 3)] = [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0], 3)] = [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], 3)] = [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0], 3)] = [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], 3)] = [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], 3)] = [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], 3)] = [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0], 3)] = [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], 3)] = [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], 3)] = [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], 3)] = [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0], 3)] = [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], 3)] = [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], 3)] = [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], 3)] = [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], 3)] = [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], 3)] = [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], 3)] = [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], 3)] = [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], 3)] = [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], 3)] = [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], 3)] = [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], 3)] = [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], 3)] = [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], 3)] = [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], 3)] = [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], 3)] = [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], 3)] = [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], 3)] = [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], 3)] = [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0], 3)] = [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], 3)] = [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], 3)] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], 3)] = [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], 3)] = [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0], 3)] = [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], 3)] = [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], 3)] = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], 3)] = [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0], 3)] = [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], 3)] = [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0], 3)] = [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], 3)] = [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], 3)] = [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0], 3)] = [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], 3)] = [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], 3)] = [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], 3)] = [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], 3)] = [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0], 3)] = [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], 3)] = [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], 3)] = [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], 3)] = [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], 3)] = [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], 3)] = [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], 3)] = [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], 3)] = [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], 3)] = [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1], 3)] = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], 3)] = [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1], 3)] = [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], 3)] = [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1], 3)] = [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], 3)] = [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], 3)] = [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], 3)] = [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], 3)] = [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], 3)] = [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], 3)] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], 3)] = [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], 3)] = [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], 3)] = [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], 3)] = [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], 3)] = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], 3)] = [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], 3)] = [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], 3)] = [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], 3)] = [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], 3)] = [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], 3)] = [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1], 3)] = [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], 3)] = [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], 3)] = [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], 3)] = [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], 3)] = [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], 3)] = [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], 3)] = [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], 3)] = [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], 3)] = [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], 3)] = [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], 3)] = [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], 3)] = [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], 3)] = [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], 3)] = [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], 3)] = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], 3)] = [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], 3)] = [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], 3)] = [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], 3)] = [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], 3)] = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], 3)] = [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], 3)] = [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], 3), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], 3)] = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
    self.assertEqual(len(d), 165)

  def test_C_RHash_soundness_11100000000(self):
      self.assertEqual(C_RHash(164, 11, 3), tuple([1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11010000000(self):
      self.assertEqual(C_RHash(163, 11, 3), tuple([1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10110000000(self):
      self.assertEqual(C_RHash(155, 11, 3), tuple([1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01110000000(self):
      self.assertEqual(C_RHash(119, 11, 3), tuple([0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11001000000(self):
      self.assertEqual(C_RHash(162, 11, 3), tuple([1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10101000000(self):
      self.assertEqual(C_RHash(154, 11, 3), tuple([1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01101000000(self):
      self.assertEqual(C_RHash(118, 11, 3), tuple([0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10011000000(self):
      self.assertEqual(C_RHash(147, 11, 3), tuple([1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01011000000(self):
      self.assertEqual(C_RHash(111, 11, 3), tuple([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00111000000(self):
      self.assertEqual(C_RHash(83, 11, 3), tuple([0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11000100000(self):
      self.assertEqual(C_RHash(161, 11, 3), tuple([1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10100100000(self):
      self.assertEqual(C_RHash(153, 11, 3), tuple([1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01100100000(self):
      self.assertEqual(C_RHash(117, 11, 3), tuple([0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10010100000(self):
      self.assertEqual(C_RHash(146, 11, 3), tuple([1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01010100000(self):
      self.assertEqual(C_RHash(110, 11, 3), tuple([0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00110100000(self):
      self.assertEqual(C_RHash(82, 11, 3), tuple([0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10001100000(self):
      self.assertEqual(C_RHash(140, 11, 3), tuple([1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01001100000(self):
      self.assertEqual(C_RHash(104, 11, 3), tuple([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00101100000(self):
      self.assertEqual(C_RHash(76, 11, 3), tuple([0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00011100000(self):
      self.assertEqual(C_RHash(55, 11, 3), tuple([0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11000010000(self):
      self.assertEqual(C_RHash(160, 11, 3), tuple([1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10100010000(self):
      self.assertEqual(C_RHash(152, 11, 3), tuple([1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01100010000(self):
      self.assertEqual(C_RHash(116, 11, 3), tuple([0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10010010000(self):
      self.assertEqual(C_RHash(145, 11, 3), tuple([1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01010010000(self):
      self.assertEqual(C_RHash(109, 11, 3), tuple([0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00110010000(self):
      self.assertEqual(C_RHash(81, 11, 3), tuple([0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10001010000(self):
      self.assertEqual(C_RHash(139, 11, 3), tuple([1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01001010000(self):
      self.assertEqual(C_RHash(103, 11, 3), tuple([0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00101010000(self):
      self.assertEqual(C_RHash(75, 11, 3), tuple([0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00011010000(self):
      self.assertEqual(C_RHash(54, 11, 3), tuple([0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10000110000(self):
      self.assertEqual(C_RHash(134, 11, 3), tuple([1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01000110000(self):
      self.assertEqual(C_RHash(98, 11, 3), tuple([0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00100110000(self):
      self.assertEqual(C_RHash(70, 11, 3), tuple([0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00010110000(self):
      self.assertEqual(C_RHash(49, 11, 3), tuple([0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00001110000(self):
      self.assertEqual(C_RHash(34, 11, 3), tuple([0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11000001000(self):
      self.assertEqual(C_RHash(159, 11, 3), tuple([1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10100001000(self):
      self.assertEqual(C_RHash(151, 11, 3), tuple([1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01100001000(self):
      self.assertEqual(C_RHash(115, 11, 3), tuple([0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10010001000(self):
      self.assertEqual(C_RHash(144, 11, 3), tuple([1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01010001000(self):
      self.assertEqual(C_RHash(108, 11, 3), tuple([0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00110001000(self):
      self.assertEqual(C_RHash(80, 11, 3), tuple([0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10001001000(self):
      self.assertEqual(C_RHash(138, 11, 3), tuple([1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01001001000(self):
      self.assertEqual(C_RHash(102, 11, 3), tuple([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00101001000(self):
      self.assertEqual(C_RHash(74, 11, 3), tuple([0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00011001000(self):
      self.assertEqual(C_RHash(53, 11, 3), tuple([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10000101000(self):
      self.assertEqual(C_RHash(133, 11, 3), tuple([1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01000101000(self):
      self.assertEqual(C_RHash(97, 11, 3), tuple([0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00100101000(self):
      self.assertEqual(C_RHash(69, 11, 3), tuple([0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00010101000(self):
      self.assertEqual(C_RHash(48, 11, 3), tuple([0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00001101000(self):
      self.assertEqual(C_RHash(33, 11, 3), tuple([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10000011000(self):
      self.assertEqual(C_RHash(129, 11, 3), tuple([1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01000011000(self):
      self.assertEqual(C_RHash(93, 11, 3), tuple([0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00100011000(self):
      self.assertEqual(C_RHash(65, 11, 3), tuple([0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00010011000(self):
      self.assertEqual(C_RHash(44, 11, 3), tuple([0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00001011000(self):
      self.assertEqual(C_RHash(29, 11, 3), tuple([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00000111000(self):
      self.assertEqual(C_RHash(19, 11, 3), tuple([0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11000000100(self):
      self.assertEqual(C_RHash(158, 11, 3), tuple([1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10100000100(self):
      self.assertEqual(C_RHash(150, 11, 3), tuple([1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01100000100(self):
      self.assertEqual(C_RHash(114, 11, 3), tuple([0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10010000100(self):
      self.assertEqual(C_RHash(143, 11, 3), tuple([1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01010000100(self):
      self.assertEqual(C_RHash(107, 11, 3), tuple([0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00110000100(self):
      self.assertEqual(C_RHash(79, 11, 3), tuple([0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10001000100(self):
      self.assertEqual(C_RHash(137, 11, 3), tuple([1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01001000100(self):
      self.assertEqual(C_RHash(101, 11, 3), tuple([0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00101000100(self):
      self.assertEqual(C_RHash(73, 11, 3), tuple([0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00011000100(self):
      self.assertEqual(C_RHash(52, 11, 3), tuple([0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10000100100(self):
      self.assertEqual(C_RHash(132, 11, 3), tuple([1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01000100100(self):
      self.assertEqual(C_RHash(96, 11, 3), tuple([0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00100100100(self):
      self.assertEqual(C_RHash(68, 11, 3), tuple([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00010100100(self):
      self.assertEqual(C_RHash(47, 11, 3), tuple([0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00001100100(self):
      self.assertEqual(C_RHash(32, 11, 3), tuple([0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10000010100(self):
      self.assertEqual(C_RHash(128, 11, 3), tuple([1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01000010100(self):
      self.assertEqual(C_RHash(92, 11, 3), tuple([0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00100010100(self):
      self.assertEqual(C_RHash(64, 11, 3), tuple([0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00010010100(self):
      self.assertEqual(C_RHash(43, 11, 3), tuple([0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00001010100(self):
      self.assertEqual(C_RHash(28, 11, 3), tuple([0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00000110100(self):
      self.assertEqual(C_RHash(18, 11, 3), tuple([0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10000001100(self):
      self.assertEqual(C_RHash(125, 11, 3), tuple([1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01000001100(self):
      self.assertEqual(C_RHash(89, 11, 3), tuple([0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00100001100(self):
      self.assertEqual(C_RHash(61, 11, 3), tuple([0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00010001100(self):
      self.assertEqual(C_RHash(40, 11, 3), tuple([0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00001001100(self):
      self.assertEqual(C_RHash(25, 11, 3), tuple([0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00000101100(self):
      self.assertEqual(C_RHash(15, 11, 3), tuple([0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00000011100(self):
      self.assertEqual(C_RHash(9, 11, 3), tuple([0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11000000010(self):
      self.assertEqual(C_RHash(157, 11, 3), tuple([1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10100000010(self):
      self.assertEqual(C_RHash(149, 11, 3), tuple([1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01100000010(self):
      self.assertEqual(C_RHash(113, 11, 3), tuple([0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10010000010(self):
      self.assertEqual(C_RHash(142, 11, 3), tuple([1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01010000010(self):
      self.assertEqual(C_RHash(106, 11, 3), tuple([0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00110000010(self):
      self.assertEqual(C_RHash(78, 11, 3), tuple([0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10001000010(self):
      self.assertEqual(C_RHash(136, 11, 3), tuple([1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01001000010(self):
      self.assertEqual(C_RHash(100, 11, 3), tuple([0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00101000010(self):
      self.assertEqual(C_RHash(72, 11, 3), tuple([0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00011000010(self):
      self.assertEqual(C_RHash(51, 11, 3), tuple([0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10000100010(self):
      self.assertEqual(C_RHash(131, 11, 3), tuple([1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01000100010(self):
      self.assertEqual(C_RHash(95, 11, 3), tuple([0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00100100010(self):
      self.assertEqual(C_RHash(67, 11, 3), tuple([0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00010100010(self):
      self.assertEqual(C_RHash(46, 11, 3), tuple([0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00001100010(self):
      self.assertEqual(C_RHash(31, 11, 3), tuple([0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10000010010(self):
      self.assertEqual(C_RHash(127, 11, 3), tuple([1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01000010010(self):
      self.assertEqual(C_RHash(91, 11, 3), tuple([0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00100010010(self):
      self.assertEqual(C_RHash(63, 11, 3), tuple([0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00010010010(self):
      self.assertEqual(C_RHash(42, 11, 3), tuple([0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00001010010(self):
      self.assertEqual(C_RHash(27, 11, 3), tuple([0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00000110010(self):
      self.assertEqual(C_RHash(17, 11, 3), tuple([0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10000001010(self):
      self.assertEqual(C_RHash(124, 11, 3), tuple([1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01000001010(self):
      self.assertEqual(C_RHash(88, 11, 3), tuple([0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00100001010(self):
      self.assertEqual(C_RHash(60, 11, 3), tuple([0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00010001010(self):
      self.assertEqual(C_RHash(39, 11, 3), tuple([0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00001001010(self):
      self.assertEqual(C_RHash(24, 11, 3), tuple([0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00000101010(self):
      self.assertEqual(C_RHash(14, 11, 3), tuple([0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00000011010(self):
      self.assertEqual(C_RHash(8, 11, 3), tuple([0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10000000110(self):
      self.assertEqual(C_RHash(122, 11, 3), tuple([1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01000000110(self):
      self.assertEqual(C_RHash(86, 11, 3), tuple([0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00100000110(self):
      self.assertEqual(C_RHash(58, 11, 3), tuple([0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00010000110(self):
      self.assertEqual(C_RHash(37, 11, 3), tuple([0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00001000110(self):
      self.assertEqual(C_RHash(22, 11, 3), tuple([0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00000100110(self):
      self.assertEqual(C_RHash(12, 11, 3), tuple([0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00000010110(self):
      self.assertEqual(C_RHash(6, 11, 3), tuple([0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00000001110(self):
      self.assertEqual(C_RHash(3, 11, 3), tuple([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11000000001(self):
      self.assertEqual(C_RHash(156, 11, 3), tuple([1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10100000001(self):
      self.assertEqual(C_RHash(148, 11, 3), tuple([1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01100000001(self):
      self.assertEqual(C_RHash(112, 11, 3), tuple([0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10010000001(self):
      self.assertEqual(C_RHash(141, 11, 3), tuple([1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01010000001(self):
      self.assertEqual(C_RHash(105, 11, 3), tuple([0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00110000001(self):
      self.assertEqual(C_RHash(77, 11, 3), tuple([0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10001000001(self):
      self.assertEqual(C_RHash(135, 11, 3), tuple([1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01001000001(self):
      self.assertEqual(C_RHash(99, 11, 3), tuple([0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00101000001(self):
      self.assertEqual(C_RHash(71, 11, 3), tuple([0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00011000001(self):
      self.assertEqual(C_RHash(50, 11, 3), tuple([0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10000100001(self):
      self.assertEqual(C_RHash(130, 11, 3), tuple([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01000100001(self):
      self.assertEqual(C_RHash(94, 11, 3), tuple([0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00100100001(self):
      self.assertEqual(C_RHash(66, 11, 3), tuple([0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00010100001(self):
      self.assertEqual(C_RHash(45, 11, 3), tuple([0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00001100001(self):
      self.assertEqual(C_RHash(30, 11, 3), tuple([0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10000010001(self):
      self.assertEqual(C_RHash(126, 11, 3), tuple([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01000010001(self):
      self.assertEqual(C_RHash(90, 11, 3), tuple([0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00100010001(self):
      self.assertEqual(C_RHash(62, 11, 3), tuple([0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00010010001(self):
      self.assertEqual(C_RHash(41, 11, 3), tuple([0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00001010001(self):
      self.assertEqual(C_RHash(26, 11, 3), tuple([0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00000110001(self):
      self.assertEqual(C_RHash(16, 11, 3), tuple([0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10000001001(self):
      self.assertEqual(C_RHash(123, 11, 3), tuple([1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01000001001(self):
      self.assertEqual(C_RHash(87, 11, 3), tuple([0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00100001001(self):
      self.assertEqual(C_RHash(59, 11, 3), tuple([0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00010001001(self):
      self.assertEqual(C_RHash(38, 11, 3), tuple([0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00001001001(self):
      self.assertEqual(C_RHash(23, 11, 3), tuple([0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00000101001(self):
      self.assertEqual(C_RHash(13, 11, 3), tuple([0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00000011001(self):
      self.assertEqual(C_RHash(7, 11, 3), tuple([0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10000000101(self):
      self.assertEqual(C_RHash(121, 11, 3), tuple([1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01000000101(self):
      self.assertEqual(C_RHash(85, 11, 3), tuple([0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00100000101(self):
      self.assertEqual(C_RHash(57, 11, 3), tuple([0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00010000101(self):
      self.assertEqual(C_RHash(36, 11, 3), tuple([0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00001000101(self):
      self.assertEqual(C_RHash(21, 11, 3), tuple([0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00000100101(self):
      self.assertEqual(C_RHash(11, 11, 3), tuple([0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00000010101(self):
      self.assertEqual(C_RHash(5, 11, 3), tuple([0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00000001101(self):
      self.assertEqual(C_RHash(2, 11, 3), tuple([0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10000000011(self):
      self.assertEqual(C_RHash(120, 11, 3), tuple([1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01000000011(self):
      self.assertEqual(C_RHash(84, 11, 3), tuple([0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00100000011(self):
      self.assertEqual(C_RHash(56, 11, 3), tuple([0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00010000011(self):
      self.assertEqual(C_RHash(35, 11, 3), tuple([0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00001000011(self):
      self.assertEqual(C_RHash(20, 11, 3), tuple([0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00000100011(self):
      self.assertEqual(C_RHash(10, 11, 3), tuple([0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00000010011(self):
      self.assertEqual(C_RHash(4, 11, 3), tuple([0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00000001011(self):
      self.assertEqual(C_RHash(1, 11, 3), tuple([0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00000000111(self):
      self.assertEqual(C_RHash(0, 11, 3), tuple([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]))

class HashTest_n11_r4(unittest.TestCase):
  def test_C_Hash_range_11110000000(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101000000(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011000000(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111000000(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111000000(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100100000(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010100000(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110100000(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110100000(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001100000(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101100000(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101100000(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011100000(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011100000(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111100000(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100010000(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010010000(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110010000(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110010000(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001010000(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101010000(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101010000(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011010000(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011010000(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111010000(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000110000(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100110000(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100110000(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010110000(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010110000(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110110000(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001110000(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001110000(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101110000(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011110000(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100001000(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010001000(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110001000(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110001000(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001001000(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101001000(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101001000(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011001000(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011001000(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111001000(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000101000(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100101000(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100101000(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010101000(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010101000(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110101000(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001101000(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001101000(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101101000(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011101000(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000011000(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100011000(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100011000(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010011000(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010011000(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110011000(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001011000(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001011000(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101011000(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011011000(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000111000(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000111000(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100111000(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010111000(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001111000(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100000100(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010000100(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110000100(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110000100(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001000100(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101000100(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101000100(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011000100(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011000100(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111000100(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000100100(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100100100(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100100100(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010100100(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010100100(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110100100(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001100100(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001100100(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101100100(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011100100(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000010100(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100010100(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100010100(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010010100(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010010100(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110010100(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001010100(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001010100(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101010100(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011010100(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000110100(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000110100(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100110100(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010110100(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001110100(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000001100(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100001100(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100001100(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010001100(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010001100(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110001100(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001001100(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001001100(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101001100(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011001100(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000101100(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000101100(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100101100(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010101100(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001101100(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000011100(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000011100(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100011100(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010011100(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001011100(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000111100(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100000010(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010000010(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110000010(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110000010(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001000010(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101000010(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101000010(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011000010(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011000010(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111000010(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000100010(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100100010(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100100010(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010100010(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010100010(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110100010(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001100010(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001100010(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101100010(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011100010(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000010010(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100010010(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100010010(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010010010(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010010010(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110010010(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001010010(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001010010(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101010010(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011010010(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000110010(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000110010(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100110010(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010110010(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001110010(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000001010(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100001010(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100001010(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010001010(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010001010(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110001010(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001001010(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001001010(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101001010(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011001010(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000101010(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000101010(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100101010(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010101010(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001101010(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000011010(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000011010(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100011010(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010011010(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001011010(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000111010(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000000110(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100000110(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100000110(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010000110(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010000110(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110000110(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001000110(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001000110(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101000110(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011000110(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000100110(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000100110(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100100110(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010100110(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001100110(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000010110(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000010110(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100010110(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010010110(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001010110(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000110110(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000001110(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000001110(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100001110(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010001110(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001001110(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000101110(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000011110(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100000001(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010000001(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110000001(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110000001(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001000001(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101000001(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101000001(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011000001(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011000001(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111000001(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000100001(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100100001(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100100001(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010100001(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010100001(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110100001(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001100001(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001100001(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101100001(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011100001(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000010001(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100010001(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100010001(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010010001(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010010001(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110010001(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001010001(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001010001(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101010001(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011010001(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000110001(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000110001(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100110001(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010110001(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001110001(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000001001(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100001001(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100001001(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010001001(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010001001(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110001001(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001001001(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001001001(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101001001(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011001001(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000101001(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000101001(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100101001(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010101001(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001101001(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000011001(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000011001(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100011001(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010011001(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001011001(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000111001(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000000101(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100000101(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100000101(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010000101(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010000101(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110000101(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001000101(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001000101(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101000101(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011000101(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000100101(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000100101(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100100101(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010100101(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001100101(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000010101(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000010101(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100010101(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010010101(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001010101(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000110101(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000001101(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000001101(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100001101(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010001101(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001001101(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000101101(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000011101(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000000011(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100000011(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100000011(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010000011(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010000011(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110000011(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001000011(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001000011(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101000011(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011000011(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000100011(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000100011(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100100011(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010100011(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001100011(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000010011(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000010011(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100010011(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010010011(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001010011(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000110011(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000001011(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000001011(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100001011(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010001011(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001001011(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000101011(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000011011(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000000111(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000000111(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100000111(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010000111(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001000111(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000100111(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000010111(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000001111(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], 4)
      self.assert_(C(11, 4)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 4)] = [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], 4)] = [1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], 4)] = [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], 4)] = [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 4)] = [0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], 4)] = [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], 4)] = [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], 4)] = [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], 4)] = [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], 4)] = [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], 4)] = [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], 4)] = [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], 4)] = [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], 4)] = [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], 4)] = [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0], 4)] = [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0], 4)] = [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], 4)] = [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], 4)] = [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], 4)] = [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0], 4)] = [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0], 4)] = [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0], 4)] = [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0], 4)] = [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0], 4)] = [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], 4)] = [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0], 4)] = [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], 4)] = [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], 4)] = [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0], 4)] = [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], 4)] = [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0], 4)] = [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0], 4)] = [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], 4)] = [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0], 4)] = [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], 4)] = [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], 4)] = [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0], 4)] = [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], 4)] = [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], 4)] = [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], 4)] = [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0], 4)] = [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0], 4)] = [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0], 4)] = [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0], 4)] = [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0], 4)] = [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], 4)] = [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], 4)] = [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0], 4)] = [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], 4)] = [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0], 4)] = [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], 4)] = [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], 4)] = [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], 4)] = [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0], 4)] = [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], 4)] = [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], 4)] = [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], 4)] = [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], 4)] = [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0], 4)] = [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], 4)] = [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0], 4)] = [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], 4)] = [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], 4)] = [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], 4)] = [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0], 4)] = [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], 4)] = [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], 4)] = [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], 4)] = [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], 4)] = [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0], 4)] = [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], 4)] = [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0], 4)] = [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0], 4)] = [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0], 4)] = [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], 4)] = [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], 4)] = [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0], 4)] = [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0], 4)] = [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0], 4)] = [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0], 4)] = [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], 4)] = [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], 4)] = [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0], 4)] = [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], 4)] = [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], 4)] = [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], 4)] = [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], 4)] = [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], 4)] = [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], 4)] = [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0], 4)] = [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0], 4)] = [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], 4)] = [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], 4)] = [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], 4)] = [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], 4)] = [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], 4)] = [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], 4)] = [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], 4)] = [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], 4)] = [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], 4)] = [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], 4)] = [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], 4)] = [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0], 4)] = [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], 4)] = [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], 4)] = [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], 4)] = [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], 4)] = [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], 4)] = [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], 4)] = [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0], 4)] = [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], 4)] = [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0], 4)] = [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], 4)] = [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], 4)] = [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], 4)] = [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0], 4)] = [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], 4)] = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], 4)] = [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], 4)] = [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], 4)] = [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], 4)] = [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], 4)] = [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], 4)] = [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], 4)] = [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], 4)] = [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], 4)] = [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], 4)] = [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], 4)] = [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0], 4)] = [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], 4)] = [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0], 4)] = [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], 4)] = [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], 4)] = [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0], 4)] = [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0], 4)] = [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], 4)] = [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], 4)] = [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0], 4)] = [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0], 4)] = [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], 4)] = [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], 4)] = [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], 4)] = [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], 4)] = [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], 4)] = [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], 4)] = [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], 4)] = [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0], 4)] = [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], 4)] = [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], 4)] = [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0], 4)] = [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], 4)] = [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0], 4)] = [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0], 4)] = [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], 4)] = [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], 4)] = [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], 4)] = [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], 4)] = [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], 4)] = [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0], 4)] = [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], 4)] = [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0], 4)] = [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], 4)] = [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], 4)] = [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0], 4)] = [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], 4)] = [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], 4)] = [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], 4)] = [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], 4)] = [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], 4)] = [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], 4)] = [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], 4)] = [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], 4)] = [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], 4)] = [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], 4)] = [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], 4)] = [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0], 4)] = [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], 4)] = [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], 4)] = [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], 4)] = [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], 4)] = [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], 4)] = [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], 4)] = [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], 4)] = [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0], 4)] = [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], 4)] = [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], 4)] = [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], 4)] = [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], 4)] = [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], 4)] = [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], 4)] = [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], 4)] = [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], 4)] = [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], 4)] = [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], 4)] = [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], 4)] = [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], 4)] = [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], 4)] = [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], 4)] = [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], 4)] = [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], 4)] = [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], 4)] = [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], 4)] = [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], 4)] = [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], 4)] = [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], 4)] = [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], 4)] = [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], 4)] = [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], 4)] = [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], 4)] = [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1], 4)] = [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1], 4)] = [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], 4)] = [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], 4)] = [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], 4)] = [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], 4)] = [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], 4)] = [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], 4)] = [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1], 4)] = [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], 4)] = [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], 4)] = [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], 4)] = [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], 4)] = [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], 4)] = [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], 4)] = [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], 4)] = [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], 4)] = [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], 4)] = [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], 4)] = [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], 4)] = [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], 4)] = [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], 4)] = [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], 4)] = [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], 4)] = [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], 4)] = [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], 4)] = [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], 4)] = [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], 4)] = [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], 4)] = [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], 4)] = [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], 4)] = [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], 4)] = [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], 4)] = [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], 4)] = [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], 4)] = [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1], 4)] = [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], 4)] = [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], 4)] = [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], 4)] = [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], 4)] = [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], 4)] = [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], 4)] = [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], 4)] = [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], 4)] = [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], 4)] = [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], 4)] = [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], 4)] = [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], 4)] = [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], 4)] = [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], 4)] = [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], 4)] = [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], 4)] = [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], 4)] = [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], 4)] = [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], 4)] = [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], 4)] = [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], 4)] = [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], 4)] = [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], 4)] = [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], 4)] = [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], 4)] = [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], 4)] = [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], 4)] = [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], 4)] = [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], 4)] = [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], 4)] = [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], 4)] = [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], 4)] = [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], 4)] = [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], 4)] = [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], 4)] = [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], 4)] = [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1], 4)] = [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], 4)] = [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], 4)] = [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], 4)] = [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], 4)] = [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], 4)] = [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], 4)] = [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], 4)] = [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], 4)] = [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], 4)] = [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], 4)] = [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], 4)] = [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], 4)] = [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], 4)] = [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], 4)] = [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], 4)] = [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], 4)] = [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], 4)] = [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], 4)] = [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], 4)] = [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], 4)] = [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], 4)] = [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], 4)] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], 4)] = [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], 4)] = [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], 4)] = [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], 4)] = [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], 4)] = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], 4)] = [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], 4)] = [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], 4)] = [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], 4)] = [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], 4)] = [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], 4)] = [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], 4)] = [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], 4)] = [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], 4)] = [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], 4)] = [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], 4)] = [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], 4)] = [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], 4)] = [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], 4)] = [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], 4)] = [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], 4)] = [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], 4)] = [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], 4)] = [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], 4)] = [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], 4), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], 4)] = [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
    self.assertEqual(len(d), 330)

  def test_C_RHash_soundness_11110000000(self):
      self.assertEqual(C_RHash(329, 11, 4), tuple([1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11101000000(self):
      self.assertEqual(C_RHash(328, 11, 4), tuple([1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11011000000(self):
      self.assertEqual(C_RHash(321, 11, 4), tuple([1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10111000000(self):
      self.assertEqual(C_RHash(293, 11, 4), tuple([1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01111000000(self):
      self.assertEqual(C_RHash(209, 11, 4), tuple([0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11100100000(self):
      self.assertEqual(C_RHash(327, 11, 4), tuple([1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11010100000(self):
      self.assertEqual(C_RHash(320, 11, 4), tuple([1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10110100000(self):
      self.assertEqual(C_RHash(292, 11, 4), tuple([1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01110100000(self):
      self.assertEqual(C_RHash(208, 11, 4), tuple([0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11001100000(self):
      self.assertEqual(C_RHash(314, 11, 4), tuple([1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10101100000(self):
      self.assertEqual(C_RHash(286, 11, 4), tuple([1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01101100000(self):
      self.assertEqual(C_RHash(202, 11, 4), tuple([0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10011100000(self):
      self.assertEqual(C_RHash(265, 11, 4), tuple([1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01011100000(self):
      self.assertEqual(C_RHash(181, 11, 4), tuple([0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00111100000(self):
      self.assertEqual(C_RHash(125, 11, 4), tuple([0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11100010000(self):
      self.assertEqual(C_RHash(326, 11, 4), tuple([1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11010010000(self):
      self.assertEqual(C_RHash(319, 11, 4), tuple([1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10110010000(self):
      self.assertEqual(C_RHash(291, 11, 4), tuple([1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01110010000(self):
      self.assertEqual(C_RHash(207, 11, 4), tuple([0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11001010000(self):
      self.assertEqual(C_RHash(313, 11, 4), tuple([1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10101010000(self):
      self.assertEqual(C_RHash(285, 11, 4), tuple([1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01101010000(self):
      self.assertEqual(C_RHash(201, 11, 4), tuple([0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10011010000(self):
      self.assertEqual(C_RHash(264, 11, 4), tuple([1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01011010000(self):
      self.assertEqual(C_RHash(180, 11, 4), tuple([0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00111010000(self):
      self.assertEqual(C_RHash(124, 11, 4), tuple([0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11000110000(self):
      self.assertEqual(C_RHash(308, 11, 4), tuple([1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10100110000(self):
      self.assertEqual(C_RHash(280, 11, 4), tuple([1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01100110000(self):
      self.assertEqual(C_RHash(196, 11, 4), tuple([0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10010110000(self):
      self.assertEqual(C_RHash(259, 11, 4), tuple([1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01010110000(self):
      self.assertEqual(C_RHash(175, 11, 4), tuple([0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00110110000(self):
      self.assertEqual(C_RHash(119, 11, 4), tuple([0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10001110000(self):
      self.assertEqual(C_RHash(244, 11, 4), tuple([1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01001110000(self):
      self.assertEqual(C_RHash(160, 11, 4), tuple([0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00101110000(self):
      self.assertEqual(C_RHash(104, 11, 4), tuple([0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00011110000(self):
      self.assertEqual(C_RHash(69, 11, 4), tuple([0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11100001000(self):
      self.assertEqual(C_RHash(325, 11, 4), tuple([1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11010001000(self):
      self.assertEqual(C_RHash(318, 11, 4), tuple([1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10110001000(self):
      self.assertEqual(C_RHash(290, 11, 4), tuple([1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01110001000(self):
      self.assertEqual(C_RHash(206, 11, 4), tuple([0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11001001000(self):
      self.assertEqual(C_RHash(312, 11, 4), tuple([1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10101001000(self):
      self.assertEqual(C_RHash(284, 11, 4), tuple([1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01101001000(self):
      self.assertEqual(C_RHash(200, 11, 4), tuple([0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10011001000(self):
      self.assertEqual(C_RHash(263, 11, 4), tuple([1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01011001000(self):
      self.assertEqual(C_RHash(179, 11, 4), tuple([0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00111001000(self):
      self.assertEqual(C_RHash(123, 11, 4), tuple([0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11000101000(self):
      self.assertEqual(C_RHash(307, 11, 4), tuple([1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10100101000(self):
      self.assertEqual(C_RHash(279, 11, 4), tuple([1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01100101000(self):
      self.assertEqual(C_RHash(195, 11, 4), tuple([0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10010101000(self):
      self.assertEqual(C_RHash(258, 11, 4), tuple([1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01010101000(self):
      self.assertEqual(C_RHash(174, 11, 4), tuple([0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00110101000(self):
      self.assertEqual(C_RHash(118, 11, 4), tuple([0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10001101000(self):
      self.assertEqual(C_RHash(243, 11, 4), tuple([1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01001101000(self):
      self.assertEqual(C_RHash(159, 11, 4), tuple([0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00101101000(self):
      self.assertEqual(C_RHash(103, 11, 4), tuple([0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00011101000(self):
      self.assertEqual(C_RHash(68, 11, 4), tuple([0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11000011000(self):
      self.assertEqual(C_RHash(303, 11, 4), tuple([1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10100011000(self):
      self.assertEqual(C_RHash(275, 11, 4), tuple([1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01100011000(self):
      self.assertEqual(C_RHash(191, 11, 4), tuple([0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10010011000(self):
      self.assertEqual(C_RHash(254, 11, 4), tuple([1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01010011000(self):
      self.assertEqual(C_RHash(170, 11, 4), tuple([0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00110011000(self):
      self.assertEqual(C_RHash(114, 11, 4), tuple([0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10001011000(self):
      self.assertEqual(C_RHash(239, 11, 4), tuple([1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01001011000(self):
      self.assertEqual(C_RHash(155, 11, 4), tuple([0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00101011000(self):
      self.assertEqual(C_RHash(99, 11, 4), tuple([0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00011011000(self):
      self.assertEqual(C_RHash(64, 11, 4), tuple([0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10000111000(self):
      self.assertEqual(C_RHash(229, 11, 4), tuple([1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01000111000(self):
      self.assertEqual(C_RHash(145, 11, 4), tuple([0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00100111000(self):
      self.assertEqual(C_RHash(89, 11, 4), tuple([0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00010111000(self):
      self.assertEqual(C_RHash(54, 11, 4), tuple([0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00001111000(self):
      self.assertEqual(C_RHash(34, 11, 4), tuple([0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11100000100(self):
      self.assertEqual(C_RHash(324, 11, 4), tuple([1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11010000100(self):
      self.assertEqual(C_RHash(317, 11, 4), tuple([1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10110000100(self):
      self.assertEqual(C_RHash(289, 11, 4), tuple([1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01110000100(self):
      self.assertEqual(C_RHash(205, 11, 4), tuple([0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11001000100(self):
      self.assertEqual(C_RHash(311, 11, 4), tuple([1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10101000100(self):
      self.assertEqual(C_RHash(283, 11, 4), tuple([1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01101000100(self):
      self.assertEqual(C_RHash(199, 11, 4), tuple([0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10011000100(self):
      self.assertEqual(C_RHash(262, 11, 4), tuple([1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01011000100(self):
      self.assertEqual(C_RHash(178, 11, 4), tuple([0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00111000100(self):
      self.assertEqual(C_RHash(122, 11, 4), tuple([0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11000100100(self):
      self.assertEqual(C_RHash(306, 11, 4), tuple([1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10100100100(self):
      self.assertEqual(C_RHash(278, 11, 4), tuple([1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01100100100(self):
      self.assertEqual(C_RHash(194, 11, 4), tuple([0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10010100100(self):
      self.assertEqual(C_RHash(257, 11, 4), tuple([1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01010100100(self):
      self.assertEqual(C_RHash(173, 11, 4), tuple([0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00110100100(self):
      self.assertEqual(C_RHash(117, 11, 4), tuple([0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10001100100(self):
      self.assertEqual(C_RHash(242, 11, 4), tuple([1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01001100100(self):
      self.assertEqual(C_RHash(158, 11, 4), tuple([0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00101100100(self):
      self.assertEqual(C_RHash(102, 11, 4), tuple([0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00011100100(self):
      self.assertEqual(C_RHash(67, 11, 4), tuple([0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11000010100(self):
      self.assertEqual(C_RHash(302, 11, 4), tuple([1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10100010100(self):
      self.assertEqual(C_RHash(274, 11, 4), tuple([1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01100010100(self):
      self.assertEqual(C_RHash(190, 11, 4), tuple([0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10010010100(self):
      self.assertEqual(C_RHash(253, 11, 4), tuple([1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01010010100(self):
      self.assertEqual(C_RHash(169, 11, 4), tuple([0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00110010100(self):
      self.assertEqual(C_RHash(113, 11, 4), tuple([0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10001010100(self):
      self.assertEqual(C_RHash(238, 11, 4), tuple([1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01001010100(self):
      self.assertEqual(C_RHash(154, 11, 4), tuple([0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00101010100(self):
      self.assertEqual(C_RHash(98, 11, 4), tuple([0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00011010100(self):
      self.assertEqual(C_RHash(63, 11, 4), tuple([0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10000110100(self):
      self.assertEqual(C_RHash(228, 11, 4), tuple([1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01000110100(self):
      self.assertEqual(C_RHash(144, 11, 4), tuple([0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00100110100(self):
      self.assertEqual(C_RHash(88, 11, 4), tuple([0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00010110100(self):
      self.assertEqual(C_RHash(53, 11, 4), tuple([0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00001110100(self):
      self.assertEqual(C_RHash(33, 11, 4), tuple([0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11000001100(self):
      self.assertEqual(C_RHash(299, 11, 4), tuple([1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10100001100(self):
      self.assertEqual(C_RHash(271, 11, 4), tuple([1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01100001100(self):
      self.assertEqual(C_RHash(187, 11, 4), tuple([0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10010001100(self):
      self.assertEqual(C_RHash(250, 11, 4), tuple([1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01010001100(self):
      self.assertEqual(C_RHash(166, 11, 4), tuple([0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00110001100(self):
      self.assertEqual(C_RHash(110, 11, 4), tuple([0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10001001100(self):
      self.assertEqual(C_RHash(235, 11, 4), tuple([1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01001001100(self):
      self.assertEqual(C_RHash(151, 11, 4), tuple([0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00101001100(self):
      self.assertEqual(C_RHash(95, 11, 4), tuple([0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00011001100(self):
      self.assertEqual(C_RHash(60, 11, 4), tuple([0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10000101100(self):
      self.assertEqual(C_RHash(225, 11, 4), tuple([1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01000101100(self):
      self.assertEqual(C_RHash(141, 11, 4), tuple([0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00100101100(self):
      self.assertEqual(C_RHash(85, 11, 4), tuple([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00010101100(self):
      self.assertEqual(C_RHash(50, 11, 4), tuple([0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00001101100(self):
      self.assertEqual(C_RHash(30, 11, 4), tuple([0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10000011100(self):
      self.assertEqual(C_RHash(219, 11, 4), tuple([1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01000011100(self):
      self.assertEqual(C_RHash(135, 11, 4), tuple([0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00100011100(self):
      self.assertEqual(C_RHash(79, 11, 4), tuple([0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00010011100(self):
      self.assertEqual(C_RHash(44, 11, 4), tuple([0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00001011100(self):
      self.assertEqual(C_RHash(24, 11, 4), tuple([0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00000111100(self):
      self.assertEqual(C_RHash(14, 11, 4), tuple([0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11100000010(self):
      self.assertEqual(C_RHash(323, 11, 4), tuple([1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11010000010(self):
      self.assertEqual(C_RHash(316, 11, 4), tuple([1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10110000010(self):
      self.assertEqual(C_RHash(288, 11, 4), tuple([1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01110000010(self):
      self.assertEqual(C_RHash(204, 11, 4), tuple([0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11001000010(self):
      self.assertEqual(C_RHash(310, 11, 4), tuple([1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10101000010(self):
      self.assertEqual(C_RHash(282, 11, 4), tuple([1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01101000010(self):
      self.assertEqual(C_RHash(198, 11, 4), tuple([0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10011000010(self):
      self.assertEqual(C_RHash(261, 11, 4), tuple([1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01011000010(self):
      self.assertEqual(C_RHash(177, 11, 4), tuple([0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00111000010(self):
      self.assertEqual(C_RHash(121, 11, 4), tuple([0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11000100010(self):
      self.assertEqual(C_RHash(305, 11, 4), tuple([1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10100100010(self):
      self.assertEqual(C_RHash(277, 11, 4), tuple([1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01100100010(self):
      self.assertEqual(C_RHash(193, 11, 4), tuple([0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10010100010(self):
      self.assertEqual(C_RHash(256, 11, 4), tuple([1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01010100010(self):
      self.assertEqual(C_RHash(172, 11, 4), tuple([0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00110100010(self):
      self.assertEqual(C_RHash(116, 11, 4), tuple([0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10001100010(self):
      self.assertEqual(C_RHash(241, 11, 4), tuple([1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01001100010(self):
      self.assertEqual(C_RHash(157, 11, 4), tuple([0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00101100010(self):
      self.assertEqual(C_RHash(101, 11, 4), tuple([0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00011100010(self):
      self.assertEqual(C_RHash(66, 11, 4), tuple([0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11000010010(self):
      self.assertEqual(C_RHash(301, 11, 4), tuple([1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10100010010(self):
      self.assertEqual(C_RHash(273, 11, 4), tuple([1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01100010010(self):
      self.assertEqual(C_RHash(189, 11, 4), tuple([0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10010010010(self):
      self.assertEqual(C_RHash(252, 11, 4), tuple([1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01010010010(self):
      self.assertEqual(C_RHash(168, 11, 4), tuple([0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00110010010(self):
      self.assertEqual(C_RHash(112, 11, 4), tuple([0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10001010010(self):
      self.assertEqual(C_RHash(237, 11, 4), tuple([1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01001010010(self):
      self.assertEqual(C_RHash(153, 11, 4), tuple([0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00101010010(self):
      self.assertEqual(C_RHash(97, 11, 4), tuple([0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00011010010(self):
      self.assertEqual(C_RHash(62, 11, 4), tuple([0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10000110010(self):
      self.assertEqual(C_RHash(227, 11, 4), tuple([1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01000110010(self):
      self.assertEqual(C_RHash(143, 11, 4), tuple([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00100110010(self):
      self.assertEqual(C_RHash(87, 11, 4), tuple([0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00010110010(self):
      self.assertEqual(C_RHash(52, 11, 4), tuple([0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00001110010(self):
      self.assertEqual(C_RHash(32, 11, 4), tuple([0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11000001010(self):
      self.assertEqual(C_RHash(298, 11, 4), tuple([1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10100001010(self):
      self.assertEqual(C_RHash(270, 11, 4), tuple([1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01100001010(self):
      self.assertEqual(C_RHash(186, 11, 4), tuple([0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10010001010(self):
      self.assertEqual(C_RHash(249, 11, 4), tuple([1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01010001010(self):
      self.assertEqual(C_RHash(165, 11, 4), tuple([0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00110001010(self):
      self.assertEqual(C_RHash(109, 11, 4), tuple([0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10001001010(self):
      self.assertEqual(C_RHash(234, 11, 4), tuple([1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01001001010(self):
      self.assertEqual(C_RHash(150, 11, 4), tuple([0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00101001010(self):
      self.assertEqual(C_RHash(94, 11, 4), tuple([0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00011001010(self):
      self.assertEqual(C_RHash(59, 11, 4), tuple([0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10000101010(self):
      self.assertEqual(C_RHash(224, 11, 4), tuple([1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01000101010(self):
      self.assertEqual(C_RHash(140, 11, 4), tuple([0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00100101010(self):
      self.assertEqual(C_RHash(84, 11, 4), tuple([0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00010101010(self):
      self.assertEqual(C_RHash(49, 11, 4), tuple([0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00001101010(self):
      self.assertEqual(C_RHash(29, 11, 4), tuple([0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10000011010(self):
      self.assertEqual(C_RHash(218, 11, 4), tuple([1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01000011010(self):
      self.assertEqual(C_RHash(134, 11, 4), tuple([0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00100011010(self):
      self.assertEqual(C_RHash(78, 11, 4), tuple([0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00010011010(self):
      self.assertEqual(C_RHash(43, 11, 4), tuple([0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00001011010(self):
      self.assertEqual(C_RHash(23, 11, 4), tuple([0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00000111010(self):
      self.assertEqual(C_RHash(13, 11, 4), tuple([0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11000000110(self):
      self.assertEqual(C_RHash(296, 11, 4), tuple([1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10100000110(self):
      self.assertEqual(C_RHash(268, 11, 4), tuple([1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01100000110(self):
      self.assertEqual(C_RHash(184, 11, 4), tuple([0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10010000110(self):
      self.assertEqual(C_RHash(247, 11, 4), tuple([1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01010000110(self):
      self.assertEqual(C_RHash(163, 11, 4), tuple([0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00110000110(self):
      self.assertEqual(C_RHash(107, 11, 4), tuple([0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10001000110(self):
      self.assertEqual(C_RHash(232, 11, 4), tuple([1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01001000110(self):
      self.assertEqual(C_RHash(148, 11, 4), tuple([0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00101000110(self):
      self.assertEqual(C_RHash(92, 11, 4), tuple([0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00011000110(self):
      self.assertEqual(C_RHash(57, 11, 4), tuple([0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10000100110(self):
      self.assertEqual(C_RHash(222, 11, 4), tuple([1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01000100110(self):
      self.assertEqual(C_RHash(138, 11, 4), tuple([0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00100100110(self):
      self.assertEqual(C_RHash(82, 11, 4), tuple([0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00010100110(self):
      self.assertEqual(C_RHash(47, 11, 4), tuple([0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00001100110(self):
      self.assertEqual(C_RHash(27, 11, 4), tuple([0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10000010110(self):
      self.assertEqual(C_RHash(216, 11, 4), tuple([1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01000010110(self):
      self.assertEqual(C_RHash(132, 11, 4), tuple([0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00100010110(self):
      self.assertEqual(C_RHash(76, 11, 4), tuple([0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00010010110(self):
      self.assertEqual(C_RHash(41, 11, 4), tuple([0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00001010110(self):
      self.assertEqual(C_RHash(21, 11, 4), tuple([0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00000110110(self):
      self.assertEqual(C_RHash(11, 11, 4), tuple([0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10000001110(self):
      self.assertEqual(C_RHash(213, 11, 4), tuple([1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01000001110(self):
      self.assertEqual(C_RHash(129, 11, 4), tuple([0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00100001110(self):
      self.assertEqual(C_RHash(73, 11, 4), tuple([0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00010001110(self):
      self.assertEqual(C_RHash(38, 11, 4), tuple([0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00001001110(self):
      self.assertEqual(C_RHash(18, 11, 4), tuple([0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00000101110(self):
      self.assertEqual(C_RHash(8, 11, 4), tuple([0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00000011110(self):
      self.assertEqual(C_RHash(4, 11, 4), tuple([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11100000001(self):
      self.assertEqual(C_RHash(322, 11, 4), tuple([1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11010000001(self):
      self.assertEqual(C_RHash(315, 11, 4), tuple([1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10110000001(self):
      self.assertEqual(C_RHash(287, 11, 4), tuple([1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01110000001(self):
      self.assertEqual(C_RHash(203, 11, 4), tuple([0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11001000001(self):
      self.assertEqual(C_RHash(309, 11, 4), tuple([1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10101000001(self):
      self.assertEqual(C_RHash(281, 11, 4), tuple([1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01101000001(self):
      self.assertEqual(C_RHash(197, 11, 4), tuple([0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10011000001(self):
      self.assertEqual(C_RHash(260, 11, 4), tuple([1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01011000001(self):
      self.assertEqual(C_RHash(176, 11, 4), tuple([0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00111000001(self):
      self.assertEqual(C_RHash(120, 11, 4), tuple([0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11000100001(self):
      self.assertEqual(C_RHash(304, 11, 4), tuple([1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10100100001(self):
      self.assertEqual(C_RHash(276, 11, 4), tuple([1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01100100001(self):
      self.assertEqual(C_RHash(192, 11, 4), tuple([0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10010100001(self):
      self.assertEqual(C_RHash(255, 11, 4), tuple([1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01010100001(self):
      self.assertEqual(C_RHash(171, 11, 4), tuple([0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00110100001(self):
      self.assertEqual(C_RHash(115, 11, 4), tuple([0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10001100001(self):
      self.assertEqual(C_RHash(240, 11, 4), tuple([1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01001100001(self):
      self.assertEqual(C_RHash(156, 11, 4), tuple([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00101100001(self):
      self.assertEqual(C_RHash(100, 11, 4), tuple([0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00011100001(self):
      self.assertEqual(C_RHash(65, 11, 4), tuple([0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11000010001(self):
      self.assertEqual(C_RHash(300, 11, 4), tuple([1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10100010001(self):
      self.assertEqual(C_RHash(272, 11, 4), tuple([1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01100010001(self):
      self.assertEqual(C_RHash(188, 11, 4), tuple([0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10010010001(self):
      self.assertEqual(C_RHash(251, 11, 4), tuple([1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01010010001(self):
      self.assertEqual(C_RHash(167, 11, 4), tuple([0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00110010001(self):
      self.assertEqual(C_RHash(111, 11, 4), tuple([0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10001010001(self):
      self.assertEqual(C_RHash(236, 11, 4), tuple([1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01001010001(self):
      self.assertEqual(C_RHash(152, 11, 4), tuple([0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00101010001(self):
      self.assertEqual(C_RHash(96, 11, 4), tuple([0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00011010001(self):
      self.assertEqual(C_RHash(61, 11, 4), tuple([0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10000110001(self):
      self.assertEqual(C_RHash(226, 11, 4), tuple([1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01000110001(self):
      self.assertEqual(C_RHash(142, 11, 4), tuple([0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00100110001(self):
      self.assertEqual(C_RHash(86, 11, 4), tuple([0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00010110001(self):
      self.assertEqual(C_RHash(51, 11, 4), tuple([0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00001110001(self):
      self.assertEqual(C_RHash(31, 11, 4), tuple([0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11000001001(self):
      self.assertEqual(C_RHash(297, 11, 4), tuple([1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10100001001(self):
      self.assertEqual(C_RHash(269, 11, 4), tuple([1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01100001001(self):
      self.assertEqual(C_RHash(185, 11, 4), tuple([0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10010001001(self):
      self.assertEqual(C_RHash(248, 11, 4), tuple([1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01010001001(self):
      self.assertEqual(C_RHash(164, 11, 4), tuple([0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00110001001(self):
      self.assertEqual(C_RHash(108, 11, 4), tuple([0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10001001001(self):
      self.assertEqual(C_RHash(233, 11, 4), tuple([1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01001001001(self):
      self.assertEqual(C_RHash(149, 11, 4), tuple([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00101001001(self):
      self.assertEqual(C_RHash(93, 11, 4), tuple([0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00011001001(self):
      self.assertEqual(C_RHash(58, 11, 4), tuple([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10000101001(self):
      self.assertEqual(C_RHash(223, 11, 4), tuple([1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01000101001(self):
      self.assertEqual(C_RHash(139, 11, 4), tuple([0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00100101001(self):
      self.assertEqual(C_RHash(83, 11, 4), tuple([0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00010101001(self):
      self.assertEqual(C_RHash(48, 11, 4), tuple([0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00001101001(self):
      self.assertEqual(C_RHash(28, 11, 4), tuple([0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10000011001(self):
      self.assertEqual(C_RHash(217, 11, 4), tuple([1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01000011001(self):
      self.assertEqual(C_RHash(133, 11, 4), tuple([0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00100011001(self):
      self.assertEqual(C_RHash(77, 11, 4), tuple([0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00010011001(self):
      self.assertEqual(C_RHash(42, 11, 4), tuple([0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00001011001(self):
      self.assertEqual(C_RHash(22, 11, 4), tuple([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00000111001(self):
      self.assertEqual(C_RHash(12, 11, 4), tuple([0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11000000101(self):
      self.assertEqual(C_RHash(295, 11, 4), tuple([1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10100000101(self):
      self.assertEqual(C_RHash(267, 11, 4), tuple([1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01100000101(self):
      self.assertEqual(C_RHash(183, 11, 4), tuple([0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10010000101(self):
      self.assertEqual(C_RHash(246, 11, 4), tuple([1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01010000101(self):
      self.assertEqual(C_RHash(162, 11, 4), tuple([0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00110000101(self):
      self.assertEqual(C_RHash(106, 11, 4), tuple([0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10001000101(self):
      self.assertEqual(C_RHash(231, 11, 4), tuple([1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01001000101(self):
      self.assertEqual(C_RHash(147, 11, 4), tuple([0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00101000101(self):
      self.assertEqual(C_RHash(91, 11, 4), tuple([0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00011000101(self):
      self.assertEqual(C_RHash(56, 11, 4), tuple([0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10000100101(self):
      self.assertEqual(C_RHash(221, 11, 4), tuple([1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01000100101(self):
      self.assertEqual(C_RHash(137, 11, 4), tuple([0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00100100101(self):
      self.assertEqual(C_RHash(81, 11, 4), tuple([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00010100101(self):
      self.assertEqual(C_RHash(46, 11, 4), tuple([0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00001100101(self):
      self.assertEqual(C_RHash(26, 11, 4), tuple([0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10000010101(self):
      self.assertEqual(C_RHash(215, 11, 4), tuple([1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01000010101(self):
      self.assertEqual(C_RHash(131, 11, 4), tuple([0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00100010101(self):
      self.assertEqual(C_RHash(75, 11, 4), tuple([0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00010010101(self):
      self.assertEqual(C_RHash(40, 11, 4), tuple([0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00001010101(self):
      self.assertEqual(C_RHash(20, 11, 4), tuple([0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00000110101(self):
      self.assertEqual(C_RHash(10, 11, 4), tuple([0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10000001101(self):
      self.assertEqual(C_RHash(212, 11, 4), tuple([1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01000001101(self):
      self.assertEqual(C_RHash(128, 11, 4), tuple([0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00100001101(self):
      self.assertEqual(C_RHash(72, 11, 4), tuple([0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00010001101(self):
      self.assertEqual(C_RHash(37, 11, 4), tuple([0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00001001101(self):
      self.assertEqual(C_RHash(17, 11, 4), tuple([0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00000101101(self):
      self.assertEqual(C_RHash(7, 11, 4), tuple([0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00000011101(self):
      self.assertEqual(C_RHash(3, 11, 4), tuple([0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11000000011(self):
      self.assertEqual(C_RHash(294, 11, 4), tuple([1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10100000011(self):
      self.assertEqual(C_RHash(266, 11, 4), tuple([1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01100000011(self):
      self.assertEqual(C_RHash(182, 11, 4), tuple([0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10010000011(self):
      self.assertEqual(C_RHash(245, 11, 4), tuple([1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01010000011(self):
      self.assertEqual(C_RHash(161, 11, 4), tuple([0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00110000011(self):
      self.assertEqual(C_RHash(105, 11, 4), tuple([0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10001000011(self):
      self.assertEqual(C_RHash(230, 11, 4), tuple([1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01001000011(self):
      self.assertEqual(C_RHash(146, 11, 4), tuple([0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00101000011(self):
      self.assertEqual(C_RHash(90, 11, 4), tuple([0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00011000011(self):
      self.assertEqual(C_RHash(55, 11, 4), tuple([0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10000100011(self):
      self.assertEqual(C_RHash(220, 11, 4), tuple([1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01000100011(self):
      self.assertEqual(C_RHash(136, 11, 4), tuple([0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00100100011(self):
      self.assertEqual(C_RHash(80, 11, 4), tuple([0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00010100011(self):
      self.assertEqual(C_RHash(45, 11, 4), tuple([0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00001100011(self):
      self.assertEqual(C_RHash(25, 11, 4), tuple([0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10000010011(self):
      self.assertEqual(C_RHash(214, 11, 4), tuple([1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01000010011(self):
      self.assertEqual(C_RHash(130, 11, 4), tuple([0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00100010011(self):
      self.assertEqual(C_RHash(74, 11, 4), tuple([0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00010010011(self):
      self.assertEqual(C_RHash(39, 11, 4), tuple([0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00001010011(self):
      self.assertEqual(C_RHash(19, 11, 4), tuple([0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00000110011(self):
      self.assertEqual(C_RHash(9, 11, 4), tuple([0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10000001011(self):
      self.assertEqual(C_RHash(211, 11, 4), tuple([1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01000001011(self):
      self.assertEqual(C_RHash(127, 11, 4), tuple([0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00100001011(self):
      self.assertEqual(C_RHash(71, 11, 4), tuple([0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00010001011(self):
      self.assertEqual(C_RHash(36, 11, 4), tuple([0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00001001011(self):
      self.assertEqual(C_RHash(16, 11, 4), tuple([0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00000101011(self):
      self.assertEqual(C_RHash(6, 11, 4), tuple([0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00000011011(self):
      self.assertEqual(C_RHash(2, 11, 4), tuple([0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10000000111(self):
      self.assertEqual(C_RHash(210, 11, 4), tuple([1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01000000111(self):
      self.assertEqual(C_RHash(126, 11, 4), tuple([0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00100000111(self):
      self.assertEqual(C_RHash(70, 11, 4), tuple([0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00010000111(self):
      self.assertEqual(C_RHash(35, 11, 4), tuple([0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00001000111(self):
      self.assertEqual(C_RHash(15, 11, 4), tuple([0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00000100111(self):
      self.assertEqual(C_RHash(5, 11, 4), tuple([0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00000010111(self):
      self.assertEqual(C_RHash(1, 11, 4), tuple([0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00000001111(self):
      self.assertEqual(C_RHash(0, 11, 4), tuple([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]))

class HashTest_n11_r5(unittest.TestCase):
  def test_C_Hash_range_11111000000(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110100000(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101100000(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011100000(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111100000(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111100000(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110010000(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101010000(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011010000(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111010000(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111010000(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100110000(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010110000(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110110000(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110110000(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001110000(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101110000(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101110000(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011110000(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011110000(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111110000(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110001000(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101001000(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011001000(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111001000(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111001000(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100101000(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010101000(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110101000(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110101000(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001101000(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101101000(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101101000(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011101000(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011101000(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111101000(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100011000(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010011000(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110011000(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110011000(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001011000(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101011000(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101011000(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011011000(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011011000(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111011000(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000111000(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100111000(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100111000(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010111000(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010111000(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110111000(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001111000(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001111000(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101111000(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011111000(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110000100(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101000100(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011000100(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111000100(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111000100(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100100100(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010100100(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110100100(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110100100(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001100100(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101100100(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101100100(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011100100(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011100100(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111100100(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100010100(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010010100(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110010100(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110010100(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001010100(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101010100(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101010100(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011010100(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011010100(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111010100(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000110100(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100110100(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100110100(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010110100(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010110100(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110110100(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001110100(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001110100(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101110100(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011110100(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100001100(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010001100(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110001100(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110001100(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001001100(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101001100(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101001100(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011001100(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011001100(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111001100(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000101100(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100101100(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100101100(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010101100(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010101100(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110101100(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001101100(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001101100(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101101100(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011101100(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000011100(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100011100(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100011100(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010011100(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010011100(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110011100(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001011100(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001011100(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101011100(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011011100(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000111100(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000111100(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100111100(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010111100(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001111100(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110000010(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101000010(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011000010(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111000010(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111000010(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100100010(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010100010(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110100010(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110100010(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001100010(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101100010(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101100010(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011100010(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011100010(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111100010(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100010010(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010010010(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110010010(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110010010(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001010010(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101010010(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101010010(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011010010(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011010010(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111010010(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000110010(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100110010(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100110010(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010110010(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010110010(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110110010(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001110010(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001110010(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101110010(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011110010(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100001010(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010001010(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110001010(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110001010(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001001010(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101001010(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101001010(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011001010(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011001010(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111001010(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000101010(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100101010(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100101010(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010101010(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010101010(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110101010(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001101010(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001101010(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101101010(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011101010(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000011010(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100011010(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100011010(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010011010(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010011010(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110011010(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001011010(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001011010(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101011010(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011011010(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000111010(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000111010(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100111010(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010111010(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001111010(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100000110(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010000110(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110000110(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110000110(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001000110(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101000110(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101000110(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011000110(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011000110(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111000110(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000100110(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100100110(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100100110(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010100110(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010100110(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110100110(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001100110(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001100110(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101100110(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011100110(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000010110(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100010110(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100010110(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010010110(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010010110(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110010110(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001010110(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001010110(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101010110(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011010110(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000110110(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000110110(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100110110(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010110110(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001110110(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000001110(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100001110(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100001110(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010001110(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010001110(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110001110(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001001110(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001001110(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101001110(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011001110(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000101110(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000101110(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100101110(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010101110(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001101110(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000011110(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000011110(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100011110(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010011110(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001011110(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000111110(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110000001(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101000001(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011000001(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111000001(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111000001(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100100001(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010100001(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110100001(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110100001(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001100001(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101100001(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101100001(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011100001(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011100001(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111100001(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100010001(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010010001(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110010001(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110010001(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001010001(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101010001(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101010001(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011010001(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011010001(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111010001(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000110001(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100110001(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100110001(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010110001(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010110001(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110110001(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001110001(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001110001(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101110001(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011110001(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100001001(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010001001(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110001001(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110001001(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001001001(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101001001(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101001001(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011001001(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011001001(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111001001(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000101001(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100101001(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100101001(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010101001(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010101001(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110101001(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001101001(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001101001(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101101001(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011101001(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000011001(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100011001(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100011001(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010011001(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010011001(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110011001(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001011001(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001011001(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101011001(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011011001(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000111001(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000111001(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100111001(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010111001(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001111001(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100000101(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010000101(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110000101(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110000101(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001000101(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101000101(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101000101(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011000101(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011000101(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111000101(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000100101(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100100101(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100100101(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010100101(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010100101(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110100101(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001100101(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001100101(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101100101(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011100101(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000010101(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100010101(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100010101(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010010101(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010010101(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110010101(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001010101(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001010101(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101010101(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011010101(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000110101(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000110101(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100110101(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010110101(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001110101(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000001101(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100001101(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100001101(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010001101(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010001101(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110001101(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001001101(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001001101(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101001101(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011001101(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000101101(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000101101(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100101101(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010101101(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001101101(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000011101(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000011101(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100011101(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010011101(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001011101(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000111101(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100000011(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010000011(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110000011(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110000011(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001000011(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101000011(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101000011(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011000011(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011000011(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111000011(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000100011(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100100011(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100100011(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010100011(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010100011(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110100011(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001100011(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001100011(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101100011(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011100011(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000010011(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100010011(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100010011(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010010011(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010010011(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110010011(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001010011(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001010011(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101010011(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011010011(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000110011(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000110011(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100110011(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010110011(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001110011(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000001011(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100001011(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100001011(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010001011(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010001011(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110001011(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001001011(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001001011(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101001011(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011001011(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000101011(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000101011(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100101011(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010101011(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001101011(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000011011(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000011011(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100011011(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010011011(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001011011(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000111011(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000000111(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100000111(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100000111(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010000111(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010000111(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110000111(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001000111(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001000111(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101000111(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011000111(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000100111(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000100111(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100100111(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010100111(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001100111(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000010111(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000010111(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100010111(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010010111(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001010111(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000110111(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000001111(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000001111(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100001111(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010001111(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001001111(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000101111(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000011111(self):
      h = C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], 5)
      self.assert_(C(11, 5)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], 5)] = [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0], 5)] = [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], 5)] = [1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], 5)] = [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], 5)] = [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], 5)] = [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], 5)] = [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0], 5)] = [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0], 5)] = [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0], 5)] = [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], 5)] = [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], 5)] = [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0], 5)] = [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], 5)] = [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0], 5)] = [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0], 5)] = [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], 5)] = [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0], 5)] = [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0], 5)] = [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], 5)] = [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], 5)] = [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], 5)] = [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0], 5)] = [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0], 5)] = [1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0], 5)] = [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 5)] = [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0], 5)] = [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], 5)] = [1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0], 5)] = [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0], 5)] = [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], 5)] = [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], 5)] = [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], 5)] = [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0], 5)] = [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], 5)] = [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0], 5)] = [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], 5)] = [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0], 5)] = [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], 5)] = [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0], 5)] = [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], 5)] = [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], 5)] = [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], 5)] = [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], 5)] = [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0], 5)] = [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], 5)] = [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], 5)] = [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], 5)] = [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], 5)] = [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], 5)] = [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], 5)] = [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], 5)] = [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], 5)] = [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], 5)] = [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0], 5)] = [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0], 5)] = [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0], 5)] = [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], 5)] = [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0], 5)] = [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0], 5)] = [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0], 5)] = [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], 5)] = [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], 5)] = [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], 5)] = [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], 5)] = [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], 5)] = [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], 5)] = [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0], 5)] = [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], 5)] = [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], 5)] = [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], 5)] = [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], 5)] = [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], 5)] = [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], 5)] = [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], 5)] = [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], 5)] = [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], 5)] = [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], 5)] = [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], 5)] = [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0], 5)] = [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], 5)] = [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], 5)] = [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], 5)] = [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0], 5)] = [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0], 5)] = [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], 5)] = [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], 5)] = [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], 5)] = [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], 5)] = [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], 5)] = [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], 5)] = [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], 5)] = [1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], 5)] = [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0], 5)] = [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], 5)] = [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0], 5)] = [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], 5)] = [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], 5)] = [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], 5)] = [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0], 5)] = [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], 5)] = [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0], 5)] = [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], 5)] = [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0], 5)] = [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], 5)] = [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], 5)] = [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], 5)] = [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], 5)] = [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0], 5)] = [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0], 5)] = [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], 5)] = [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], 5)] = [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], 5)] = [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], 5)] = [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], 5)] = [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], 5)] = [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], 5)] = [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], 5)] = [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], 5)] = [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], 5)] = [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], 5)] = [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0], 5)] = [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], 5)] = [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0], 5)] = [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], 5)] = [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], 5)] = [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0], 5)] = [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0], 5)] = [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0], 5)] = [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0], 5)] = [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0], 5)] = [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0], 5)] = [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], 5)] = [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], 5)] = [1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0], 5)] = [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], 5)] = [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], 5)] = [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0], 5)] = [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], 5)] = [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0], 5)] = [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0], 5)] = [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], 5)] = [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0], 5)] = [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], 5)] = [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], 5)] = [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0], 5)] = [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], 5)] = [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0], 5)] = [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], 5)] = [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0], 5)] = [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], 5)] = [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0], 5)] = [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], 5)] = [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], 5)] = [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0], 5)] = [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], 5)] = [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], 5)] = [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], 5)] = [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], 5)] = [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], 5)] = [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], 5)] = [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], 5)] = [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], 5)] = [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], 5)] = [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], 5)] = [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], 5)] = [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], 5)] = [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], 5)] = [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], 5)] = [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0], 5)] = [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0], 5)] = [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], 5)] = [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], 5)] = [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0], 5)] = [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], 5)] = [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], 5)] = [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], 5)] = [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], 5)] = [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], 5)] = [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], 5)] = [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], 5)] = [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], 5)] = [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], 5)] = [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], 5)] = [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], 5)] = [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], 5)] = [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], 5)] = [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], 5)] = [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0], 5)] = [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0], 5)] = [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], 5)] = [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], 5)] = [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], 5)] = [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], 5)] = [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0], 5)] = [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], 5)] = [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0], 5)] = [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], 5)] = [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], 5)] = [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], 5)] = [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], 5)] = [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], 5)] = [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0], 5)] = [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], 5)] = [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], 5)] = [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], 5)] = [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], 5)] = [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], 5)] = [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], 5)] = [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], 5)] = [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], 5)] = [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], 5)] = [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], 5)] = [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0], 5)] = [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], 5)] = [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], 5)] = [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], 5)] = [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], 5)] = [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], 5)] = [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], 5)] = [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], 5)] = [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], 5)] = [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], 5)] = [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], 5)] = [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], 5)] = [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], 5)] = [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], 5)] = [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0], 5)] = [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], 5)] = [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], 5)] = [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], 5)] = [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], 5)] = [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], 5)] = [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], 5)] = [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], 5)] = [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], 5)] = [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0], 5)] = [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0], 5)] = [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], 5)] = [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], 5)] = [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0], 5)] = [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], 5)] = [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], 5)] = [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], 5)] = [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], 5)] = [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], 5)] = [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], 5)] = [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], 5)] = [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], 5)] = [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], 5)] = [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], 5)] = [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], 5)] = [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], 5)] = [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], 5)] = [1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1], 5)] = [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], 5)] = [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], 5)] = [0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], 5)] = [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], 5)] = [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], 5)] = [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], 5)] = [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], 5)] = [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], 5)] = [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], 5)] = [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], 5)] = [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1], 5)] = [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1], 5)] = [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], 5)] = [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], 5)] = [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], 5)] = [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], 5)] = [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], 5)] = [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], 5)] = [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], 5)] = [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], 5)] = [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], 5)] = [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1], 5)] = [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], 5)] = [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], 5)] = [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], 5)] = [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], 5)] = [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], 5)] = [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], 5)] = [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], 5)] = [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], 5)] = [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], 5)] = [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], 5)] = [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], 5)] = [1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1], 5)] = [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], 5)] = [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], 5)] = [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], 5)] = [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], 5)] = [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], 5)] = [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], 5)] = [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], 5)] = [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], 5)] = [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], 5)] = [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], 5)] = [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], 5)] = [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], 5)] = [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], 5)] = [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], 5)] = [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], 5)] = [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], 5)] = [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], 5)] = [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], 5)] = [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1], 5)] = [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], 5)] = [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], 5)] = [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], 5)] = [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], 5)] = [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], 5)] = [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], 5)] = [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], 5)] = [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], 5)] = [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], 5)] = [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], 5)] = [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], 5)] = [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], 5)] = [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], 5)] = [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], 5)] = [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1], 5)] = [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], 5)] = [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], 5)] = [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1], 5)] = [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], 5)] = [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], 5)] = [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], 5)] = [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], 5)] = [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], 5)] = [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], 5)] = [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], 5)] = [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], 5)] = [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], 5)] = [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], 5)] = [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], 5)] = [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], 5)] = [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], 5)] = [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], 5)] = [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], 5)] = [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], 5)] = [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1], 5)] = [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], 5)] = [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], 5)] = [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], 5)] = [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], 5)] = [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], 5)] = [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], 5)] = [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], 5)] = [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], 5)] = [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], 5)] = [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], 5)] = [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], 5)] = [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], 5)] = [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], 5)] = [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], 5)] = [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], 5)] = [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], 5)] = [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], 5)] = [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], 5)] = [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], 5)] = [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], 5)] = [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], 5)] = [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], 5)] = [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], 5)] = [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], 5)] = [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], 5)] = [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], 5)] = [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], 5)] = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], 5)] = [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], 5)] = [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], 5)] = [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], 5)] = [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], 5)] = [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], 5)] = [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], 5)] = [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], 5)] = [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], 5)] = [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], 5)] = [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], 5)] = [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], 5)] = [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], 5)] = [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], 5)] = [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], 5)] = [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], 5)] = [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], 5)] = [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], 5)] = [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], 5)] = [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], 5)] = [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], 5)] = [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], 5)] = [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], 5)] = [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], 5)] = [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], 5)] = [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], 5)] = [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], 5)] = [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], 5)] = [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], 5)] = [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], 5)] = [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], 5)] = [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], 5)] = [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], 5)] = [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], 5)] = [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], 5)] = [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], 5)] = [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], 5)] = [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], 5)] = [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], 5)] = [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], 5)] = [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], 5)] = [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], 5)] = [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], 5)] = [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], 5)] = [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], 5)] = [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], 5)] = [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], 5)] = [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], 5)] = [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], 5)] = [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], 5)] = [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], 5)] = [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], 5)] = [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], 5)] = [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], 5)] = [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], 5)] = [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], 5)] = [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], 5)] = [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], 5)] = [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], 5)] = [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], 5)] = [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], 5)] = [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], 5)] = [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], 5)] = [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], 5)] = [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], 5)] = [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], 5)] = [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], 5)] = [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], 5)] = [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], 5)] = [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], 5)] = [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], 5)] = [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], 5)] = [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], 5)] = [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], 5)] = [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], 5)] = [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], 5)] = [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], 5)] = [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], 5)] = [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], 5)] = [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], 5)] = [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], 5)] = [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], 5)] = [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], 5)] = [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], 5)] = [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], 5)] = [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], 5)] = [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], 5)] = [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], 5)] = [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], 5)] = [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], 5)] = [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], 5)] = [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], 5), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], 5)] = [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 462)

  def test_C_RHash_soundness_11111000000(self):
      self.assertEqual(C_RHash(461, 11, 5), tuple([1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11110100000(self):
      self.assertEqual(C_RHash(460, 11, 5), tuple([1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11101100000(self):
      self.assertEqual(C_RHash(454, 11, 5), tuple([1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11011100000(self):
      self.assertEqual(C_RHash(433, 11, 5), tuple([1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10111100000(self):
      self.assertEqual(C_RHash(377, 11, 5), tuple([1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01111100000(self):
      self.assertEqual(C_RHash(251, 11, 5), tuple([0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11110010000(self):
      self.assertEqual(C_RHash(459, 11, 5), tuple([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11101010000(self):
      self.assertEqual(C_RHash(453, 11, 5), tuple([1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11011010000(self):
      self.assertEqual(C_RHash(432, 11, 5), tuple([1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10111010000(self):
      self.assertEqual(C_RHash(376, 11, 5), tuple([1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01111010000(self):
      self.assertEqual(C_RHash(250, 11, 5), tuple([0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11100110000(self):
      self.assertEqual(C_RHash(448, 11, 5), tuple([1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11010110000(self):
      self.assertEqual(C_RHash(427, 11, 5), tuple([1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10110110000(self):
      self.assertEqual(C_RHash(371, 11, 5), tuple([1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01110110000(self):
      self.assertEqual(C_RHash(245, 11, 5), tuple([0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11001110000(self):
      self.assertEqual(C_RHash(412, 11, 5), tuple([1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10101110000(self):
      self.assertEqual(C_RHash(356, 11, 5), tuple([1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01101110000(self):
      self.assertEqual(C_RHash(230, 11, 5), tuple([0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10011110000(self):
      self.assertEqual(C_RHash(321, 11, 5), tuple([1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01011110000(self):
      self.assertEqual(C_RHash(195, 11, 5), tuple([0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_00111110000(self):
      self.assertEqual(C_RHash(125, 11, 5), tuple([0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11110001000(self):
      self.assertEqual(C_RHash(458, 11, 5), tuple([1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11101001000(self):
      self.assertEqual(C_RHash(452, 11, 5), tuple([1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11011001000(self):
      self.assertEqual(C_RHash(431, 11, 5), tuple([1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10111001000(self):
      self.assertEqual(C_RHash(375, 11, 5), tuple([1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01111001000(self):
      self.assertEqual(C_RHash(249, 11, 5), tuple([0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11100101000(self):
      self.assertEqual(C_RHash(447, 11, 5), tuple([1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11010101000(self):
      self.assertEqual(C_RHash(426, 11, 5), tuple([1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10110101000(self):
      self.assertEqual(C_RHash(370, 11, 5), tuple([1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01110101000(self):
      self.assertEqual(C_RHash(244, 11, 5), tuple([0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11001101000(self):
      self.assertEqual(C_RHash(411, 11, 5), tuple([1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10101101000(self):
      self.assertEqual(C_RHash(355, 11, 5), tuple([1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01101101000(self):
      self.assertEqual(C_RHash(229, 11, 5), tuple([0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10011101000(self):
      self.assertEqual(C_RHash(320, 11, 5), tuple([1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01011101000(self):
      self.assertEqual(C_RHash(194, 11, 5), tuple([0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00111101000(self):
      self.assertEqual(C_RHash(124, 11, 5), tuple([0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11100011000(self):
      self.assertEqual(C_RHash(443, 11, 5), tuple([1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11010011000(self):
      self.assertEqual(C_RHash(422, 11, 5), tuple([1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10110011000(self):
      self.assertEqual(C_RHash(366, 11, 5), tuple([1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01110011000(self):
      self.assertEqual(C_RHash(240, 11, 5), tuple([0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11001011000(self):
      self.assertEqual(C_RHash(407, 11, 5), tuple([1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10101011000(self):
      self.assertEqual(C_RHash(351, 11, 5), tuple([1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01101011000(self):
      self.assertEqual(C_RHash(225, 11, 5), tuple([0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10011011000(self):
      self.assertEqual(C_RHash(316, 11, 5), tuple([1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01011011000(self):
      self.assertEqual(C_RHash(190, 11, 5), tuple([0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00111011000(self):
      self.assertEqual(C_RHash(120, 11, 5), tuple([0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11000111000(self):
      self.assertEqual(C_RHash(397, 11, 5), tuple([1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10100111000(self):
      self.assertEqual(C_RHash(341, 11, 5), tuple([1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01100111000(self):
      self.assertEqual(C_RHash(215, 11, 5), tuple([0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10010111000(self):
      self.assertEqual(C_RHash(306, 11, 5), tuple([1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01010111000(self):
      self.assertEqual(C_RHash(180, 11, 5), tuple([0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00110111000(self):
      self.assertEqual(C_RHash(110, 11, 5), tuple([0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10001111000(self):
      self.assertEqual(C_RHash(286, 11, 5), tuple([1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01001111000(self):
      self.assertEqual(C_RHash(160, 11, 5), tuple([0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00101111000(self):
      self.assertEqual(C_RHash(90, 11, 5), tuple([0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00011111000(self):
      self.assertEqual(C_RHash(55, 11, 5), tuple([0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11110000100(self):
      self.assertEqual(C_RHash(457, 11, 5), tuple([1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11101000100(self):
      self.assertEqual(C_RHash(451, 11, 5), tuple([1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11011000100(self):
      self.assertEqual(C_RHash(430, 11, 5), tuple([1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10111000100(self):
      self.assertEqual(C_RHash(374, 11, 5), tuple([1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01111000100(self):
      self.assertEqual(C_RHash(248, 11, 5), tuple([0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11100100100(self):
      self.assertEqual(C_RHash(446, 11, 5), tuple([1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11010100100(self):
      self.assertEqual(C_RHash(425, 11, 5), tuple([1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10110100100(self):
      self.assertEqual(C_RHash(369, 11, 5), tuple([1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01110100100(self):
      self.assertEqual(C_RHash(243, 11, 5), tuple([0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11001100100(self):
      self.assertEqual(C_RHash(410, 11, 5), tuple([1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10101100100(self):
      self.assertEqual(C_RHash(354, 11, 5), tuple([1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01101100100(self):
      self.assertEqual(C_RHash(228, 11, 5), tuple([0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10011100100(self):
      self.assertEqual(C_RHash(319, 11, 5), tuple([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01011100100(self):
      self.assertEqual(C_RHash(193, 11, 5), tuple([0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00111100100(self):
      self.assertEqual(C_RHash(123, 11, 5), tuple([0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11100010100(self):
      self.assertEqual(C_RHash(442, 11, 5), tuple([1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11010010100(self):
      self.assertEqual(C_RHash(421, 11, 5), tuple([1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10110010100(self):
      self.assertEqual(C_RHash(365, 11, 5), tuple([1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01110010100(self):
      self.assertEqual(C_RHash(239, 11, 5), tuple([0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11001010100(self):
      self.assertEqual(C_RHash(406, 11, 5), tuple([1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10101010100(self):
      self.assertEqual(C_RHash(350, 11, 5), tuple([1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01101010100(self):
      self.assertEqual(C_RHash(224, 11, 5), tuple([0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10011010100(self):
      self.assertEqual(C_RHash(315, 11, 5), tuple([1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01011010100(self):
      self.assertEqual(C_RHash(189, 11, 5), tuple([0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00111010100(self):
      self.assertEqual(C_RHash(119, 11, 5), tuple([0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11000110100(self):
      self.assertEqual(C_RHash(396, 11, 5), tuple([1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10100110100(self):
      self.assertEqual(C_RHash(340, 11, 5), tuple([1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01100110100(self):
      self.assertEqual(C_RHash(214, 11, 5), tuple([0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10010110100(self):
      self.assertEqual(C_RHash(305, 11, 5), tuple([1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01010110100(self):
      self.assertEqual(C_RHash(179, 11, 5), tuple([0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00110110100(self):
      self.assertEqual(C_RHash(109, 11, 5), tuple([0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10001110100(self):
      self.assertEqual(C_RHash(285, 11, 5), tuple([1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01001110100(self):
      self.assertEqual(C_RHash(159, 11, 5), tuple([0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00101110100(self):
      self.assertEqual(C_RHash(89, 11, 5), tuple([0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00011110100(self):
      self.assertEqual(C_RHash(54, 11, 5), tuple([0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11100001100(self):
      self.assertEqual(C_RHash(439, 11, 5), tuple([1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11010001100(self):
      self.assertEqual(C_RHash(418, 11, 5), tuple([1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10110001100(self):
      self.assertEqual(C_RHash(362, 11, 5), tuple([1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01110001100(self):
      self.assertEqual(C_RHash(236, 11, 5), tuple([0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11001001100(self):
      self.assertEqual(C_RHash(403, 11, 5), tuple([1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10101001100(self):
      self.assertEqual(C_RHash(347, 11, 5), tuple([1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01101001100(self):
      self.assertEqual(C_RHash(221, 11, 5), tuple([0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10011001100(self):
      self.assertEqual(C_RHash(312, 11, 5), tuple([1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01011001100(self):
      self.assertEqual(C_RHash(186, 11, 5), tuple([0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00111001100(self):
      self.assertEqual(C_RHash(116, 11, 5), tuple([0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11000101100(self):
      self.assertEqual(C_RHash(393, 11, 5), tuple([1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10100101100(self):
      self.assertEqual(C_RHash(337, 11, 5), tuple([1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01100101100(self):
      self.assertEqual(C_RHash(211, 11, 5), tuple([0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10010101100(self):
      self.assertEqual(C_RHash(302, 11, 5), tuple([1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01010101100(self):
      self.assertEqual(C_RHash(176, 11, 5), tuple([0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00110101100(self):
      self.assertEqual(C_RHash(106, 11, 5), tuple([0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10001101100(self):
      self.assertEqual(C_RHash(282, 11, 5), tuple([1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01001101100(self):
      self.assertEqual(C_RHash(156, 11, 5), tuple([0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00101101100(self):
      self.assertEqual(C_RHash(86, 11, 5), tuple([0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00011101100(self):
      self.assertEqual(C_RHash(51, 11, 5), tuple([0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11000011100(self):
      self.assertEqual(C_RHash(387, 11, 5), tuple([1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10100011100(self):
      self.assertEqual(C_RHash(331, 11, 5), tuple([1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01100011100(self):
      self.assertEqual(C_RHash(205, 11, 5), tuple([0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10010011100(self):
      self.assertEqual(C_RHash(296, 11, 5), tuple([1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01010011100(self):
      self.assertEqual(C_RHash(170, 11, 5), tuple([0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00110011100(self):
      self.assertEqual(C_RHash(100, 11, 5), tuple([0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10001011100(self):
      self.assertEqual(C_RHash(276, 11, 5), tuple([1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01001011100(self):
      self.assertEqual(C_RHash(150, 11, 5), tuple([0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00101011100(self):
      self.assertEqual(C_RHash(80, 11, 5), tuple([0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00011011100(self):
      self.assertEqual(C_RHash(45, 11, 5), tuple([0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10000111100(self):
      self.assertEqual(C_RHash(266, 11, 5), tuple([1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01000111100(self):
      self.assertEqual(C_RHash(140, 11, 5), tuple([0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00100111100(self):
      self.assertEqual(C_RHash(70, 11, 5), tuple([0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00010111100(self):
      self.assertEqual(C_RHash(35, 11, 5), tuple([0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00001111100(self):
      self.assertEqual(C_RHash(20, 11, 5), tuple([0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11110000010(self):
      self.assertEqual(C_RHash(456, 11, 5), tuple([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11101000010(self):
      self.assertEqual(C_RHash(450, 11, 5), tuple([1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11011000010(self):
      self.assertEqual(C_RHash(429, 11, 5), tuple([1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10111000010(self):
      self.assertEqual(C_RHash(373, 11, 5), tuple([1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01111000010(self):
      self.assertEqual(C_RHash(247, 11, 5), tuple([0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11100100010(self):
      self.assertEqual(C_RHash(445, 11, 5), tuple([1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11010100010(self):
      self.assertEqual(C_RHash(424, 11, 5), tuple([1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10110100010(self):
      self.assertEqual(C_RHash(368, 11, 5), tuple([1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01110100010(self):
      self.assertEqual(C_RHash(242, 11, 5), tuple([0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11001100010(self):
      self.assertEqual(C_RHash(409, 11, 5), tuple([1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10101100010(self):
      self.assertEqual(C_RHash(353, 11, 5), tuple([1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01101100010(self):
      self.assertEqual(C_RHash(227, 11, 5), tuple([0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10011100010(self):
      self.assertEqual(C_RHash(318, 11, 5), tuple([1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01011100010(self):
      self.assertEqual(C_RHash(192, 11, 5), tuple([0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00111100010(self):
      self.assertEqual(C_RHash(122, 11, 5), tuple([0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11100010010(self):
      self.assertEqual(C_RHash(441, 11, 5), tuple([1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11010010010(self):
      self.assertEqual(C_RHash(420, 11, 5), tuple([1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10110010010(self):
      self.assertEqual(C_RHash(364, 11, 5), tuple([1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01110010010(self):
      self.assertEqual(C_RHash(238, 11, 5), tuple([0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11001010010(self):
      self.assertEqual(C_RHash(405, 11, 5), tuple([1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10101010010(self):
      self.assertEqual(C_RHash(349, 11, 5), tuple([1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01101010010(self):
      self.assertEqual(C_RHash(223, 11, 5), tuple([0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10011010010(self):
      self.assertEqual(C_RHash(314, 11, 5), tuple([1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01011010010(self):
      self.assertEqual(C_RHash(188, 11, 5), tuple([0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00111010010(self):
      self.assertEqual(C_RHash(118, 11, 5), tuple([0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11000110010(self):
      self.assertEqual(C_RHash(395, 11, 5), tuple([1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10100110010(self):
      self.assertEqual(C_RHash(339, 11, 5), tuple([1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01100110010(self):
      self.assertEqual(C_RHash(213, 11, 5), tuple([0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10010110010(self):
      self.assertEqual(C_RHash(304, 11, 5), tuple([1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01010110010(self):
      self.assertEqual(C_RHash(178, 11, 5), tuple([0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00110110010(self):
      self.assertEqual(C_RHash(108, 11, 5), tuple([0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10001110010(self):
      self.assertEqual(C_RHash(284, 11, 5), tuple([1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01001110010(self):
      self.assertEqual(C_RHash(158, 11, 5), tuple([0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00101110010(self):
      self.assertEqual(C_RHash(88, 11, 5), tuple([0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00011110010(self):
      self.assertEqual(C_RHash(53, 11, 5), tuple([0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11100001010(self):
      self.assertEqual(C_RHash(438, 11, 5), tuple([1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11010001010(self):
      self.assertEqual(C_RHash(417, 11, 5), tuple([1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10110001010(self):
      self.assertEqual(C_RHash(361, 11, 5), tuple([1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01110001010(self):
      self.assertEqual(C_RHash(235, 11, 5), tuple([0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11001001010(self):
      self.assertEqual(C_RHash(402, 11, 5), tuple([1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10101001010(self):
      self.assertEqual(C_RHash(346, 11, 5), tuple([1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01101001010(self):
      self.assertEqual(C_RHash(220, 11, 5), tuple([0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10011001010(self):
      self.assertEqual(C_RHash(311, 11, 5), tuple([1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01011001010(self):
      self.assertEqual(C_RHash(185, 11, 5), tuple([0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00111001010(self):
      self.assertEqual(C_RHash(115, 11, 5), tuple([0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11000101010(self):
      self.assertEqual(C_RHash(392, 11, 5), tuple([1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10100101010(self):
      self.assertEqual(C_RHash(336, 11, 5), tuple([1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01100101010(self):
      self.assertEqual(C_RHash(210, 11, 5), tuple([0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10010101010(self):
      self.assertEqual(C_RHash(301, 11, 5), tuple([1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01010101010(self):
      self.assertEqual(C_RHash(175, 11, 5), tuple([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00110101010(self):
      self.assertEqual(C_RHash(105, 11, 5), tuple([0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10001101010(self):
      self.assertEqual(C_RHash(281, 11, 5), tuple([1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01001101010(self):
      self.assertEqual(C_RHash(155, 11, 5), tuple([0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00101101010(self):
      self.assertEqual(C_RHash(85, 11, 5), tuple([0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00011101010(self):
      self.assertEqual(C_RHash(50, 11, 5), tuple([0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11000011010(self):
      self.assertEqual(C_RHash(386, 11, 5), tuple([1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10100011010(self):
      self.assertEqual(C_RHash(330, 11, 5), tuple([1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01100011010(self):
      self.assertEqual(C_RHash(204, 11, 5), tuple([0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10010011010(self):
      self.assertEqual(C_RHash(295, 11, 5), tuple([1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01010011010(self):
      self.assertEqual(C_RHash(169, 11, 5), tuple([0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00110011010(self):
      self.assertEqual(C_RHash(99, 11, 5), tuple([0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10001011010(self):
      self.assertEqual(C_RHash(275, 11, 5), tuple([1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01001011010(self):
      self.assertEqual(C_RHash(149, 11, 5), tuple([0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00101011010(self):
      self.assertEqual(C_RHash(79, 11, 5), tuple([0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00011011010(self):
      self.assertEqual(C_RHash(44, 11, 5), tuple([0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10000111010(self):
      self.assertEqual(C_RHash(265, 11, 5), tuple([1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01000111010(self):
      self.assertEqual(C_RHash(139, 11, 5), tuple([0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00100111010(self):
      self.assertEqual(C_RHash(69, 11, 5), tuple([0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00010111010(self):
      self.assertEqual(C_RHash(34, 11, 5), tuple([0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00001111010(self):
      self.assertEqual(C_RHash(19, 11, 5), tuple([0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11100000110(self):
      self.assertEqual(C_RHash(436, 11, 5), tuple([1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11010000110(self):
      self.assertEqual(C_RHash(415, 11, 5), tuple([1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10110000110(self):
      self.assertEqual(C_RHash(359, 11, 5), tuple([1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01110000110(self):
      self.assertEqual(C_RHash(233, 11, 5), tuple([0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11001000110(self):
      self.assertEqual(C_RHash(400, 11, 5), tuple([1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10101000110(self):
      self.assertEqual(C_RHash(344, 11, 5), tuple([1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01101000110(self):
      self.assertEqual(C_RHash(218, 11, 5), tuple([0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10011000110(self):
      self.assertEqual(C_RHash(309, 11, 5), tuple([1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01011000110(self):
      self.assertEqual(C_RHash(183, 11, 5), tuple([0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00111000110(self):
      self.assertEqual(C_RHash(113, 11, 5), tuple([0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11000100110(self):
      self.assertEqual(C_RHash(390, 11, 5), tuple([1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10100100110(self):
      self.assertEqual(C_RHash(334, 11, 5), tuple([1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01100100110(self):
      self.assertEqual(C_RHash(208, 11, 5), tuple([0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10010100110(self):
      self.assertEqual(C_RHash(299, 11, 5), tuple([1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01010100110(self):
      self.assertEqual(C_RHash(173, 11, 5), tuple([0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00110100110(self):
      self.assertEqual(C_RHash(103, 11, 5), tuple([0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10001100110(self):
      self.assertEqual(C_RHash(279, 11, 5), tuple([1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01001100110(self):
      self.assertEqual(C_RHash(153, 11, 5), tuple([0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00101100110(self):
      self.assertEqual(C_RHash(83, 11, 5), tuple([0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00011100110(self):
      self.assertEqual(C_RHash(48, 11, 5), tuple([0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11000010110(self):
      self.assertEqual(C_RHash(384, 11, 5), tuple([1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10100010110(self):
      self.assertEqual(C_RHash(328, 11, 5), tuple([1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01100010110(self):
      self.assertEqual(C_RHash(202, 11, 5), tuple([0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10010010110(self):
      self.assertEqual(C_RHash(293, 11, 5), tuple([1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01010010110(self):
      self.assertEqual(C_RHash(167, 11, 5), tuple([0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00110010110(self):
      self.assertEqual(C_RHash(97, 11, 5), tuple([0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10001010110(self):
      self.assertEqual(C_RHash(273, 11, 5), tuple([1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01001010110(self):
      self.assertEqual(C_RHash(147, 11, 5), tuple([0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00101010110(self):
      self.assertEqual(C_RHash(77, 11, 5), tuple([0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00011010110(self):
      self.assertEqual(C_RHash(42, 11, 5), tuple([0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10000110110(self):
      self.assertEqual(C_RHash(263, 11, 5), tuple([1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01000110110(self):
      self.assertEqual(C_RHash(137, 11, 5), tuple([0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00100110110(self):
      self.assertEqual(C_RHash(67, 11, 5), tuple([0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00010110110(self):
      self.assertEqual(C_RHash(32, 11, 5), tuple([0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00001110110(self):
      self.assertEqual(C_RHash(17, 11, 5), tuple([0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11000001110(self):
      self.assertEqual(C_RHash(381, 11, 5), tuple([1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10100001110(self):
      self.assertEqual(C_RHash(325, 11, 5), tuple([1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01100001110(self):
      self.assertEqual(C_RHash(199, 11, 5), tuple([0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10010001110(self):
      self.assertEqual(C_RHash(290, 11, 5), tuple([1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01010001110(self):
      self.assertEqual(C_RHash(164, 11, 5), tuple([0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00110001110(self):
      self.assertEqual(C_RHash(94, 11, 5), tuple([0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10001001110(self):
      self.assertEqual(C_RHash(270, 11, 5), tuple([1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01001001110(self):
      self.assertEqual(C_RHash(144, 11, 5), tuple([0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00101001110(self):
      self.assertEqual(C_RHash(74, 11, 5), tuple([0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00011001110(self):
      self.assertEqual(C_RHash(39, 11, 5), tuple([0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10000101110(self):
      self.assertEqual(C_RHash(260, 11, 5), tuple([1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01000101110(self):
      self.assertEqual(C_RHash(134, 11, 5), tuple([0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00100101110(self):
      self.assertEqual(C_RHash(64, 11, 5), tuple([0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00010101110(self):
      self.assertEqual(C_RHash(29, 11, 5), tuple([0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00001101110(self):
      self.assertEqual(C_RHash(14, 11, 5), tuple([0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10000011110(self):
      self.assertEqual(C_RHash(256, 11, 5), tuple([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01000011110(self):
      self.assertEqual(C_RHash(130, 11, 5), tuple([0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00100011110(self):
      self.assertEqual(C_RHash(60, 11, 5), tuple([0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00010011110(self):
      self.assertEqual(C_RHash(25, 11, 5), tuple([0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00001011110(self):
      self.assertEqual(C_RHash(10, 11, 5), tuple([0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00000111110(self):
      self.assertEqual(C_RHash(5, 11, 5), tuple([0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11110000001(self):
      self.assertEqual(C_RHash(455, 11, 5), tuple([1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11101000001(self):
      self.assertEqual(C_RHash(449, 11, 5), tuple([1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11011000001(self):
      self.assertEqual(C_RHash(428, 11, 5), tuple([1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10111000001(self):
      self.assertEqual(C_RHash(372, 11, 5), tuple([1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01111000001(self):
      self.assertEqual(C_RHash(246, 11, 5), tuple([0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11100100001(self):
      self.assertEqual(C_RHash(444, 11, 5), tuple([1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11010100001(self):
      self.assertEqual(C_RHash(423, 11, 5), tuple([1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10110100001(self):
      self.assertEqual(C_RHash(367, 11, 5), tuple([1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01110100001(self):
      self.assertEqual(C_RHash(241, 11, 5), tuple([0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11001100001(self):
      self.assertEqual(C_RHash(408, 11, 5), tuple([1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10101100001(self):
      self.assertEqual(C_RHash(352, 11, 5), tuple([1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01101100001(self):
      self.assertEqual(C_RHash(226, 11, 5), tuple([0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10011100001(self):
      self.assertEqual(C_RHash(317, 11, 5), tuple([1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01011100001(self):
      self.assertEqual(C_RHash(191, 11, 5), tuple([0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00111100001(self):
      self.assertEqual(C_RHash(121, 11, 5), tuple([0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11100010001(self):
      self.assertEqual(C_RHash(440, 11, 5), tuple([1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11010010001(self):
      self.assertEqual(C_RHash(419, 11, 5), tuple([1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10110010001(self):
      self.assertEqual(C_RHash(363, 11, 5), tuple([1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01110010001(self):
      self.assertEqual(C_RHash(237, 11, 5), tuple([0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11001010001(self):
      self.assertEqual(C_RHash(404, 11, 5), tuple([1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10101010001(self):
      self.assertEqual(C_RHash(348, 11, 5), tuple([1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01101010001(self):
      self.assertEqual(C_RHash(222, 11, 5), tuple([0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10011010001(self):
      self.assertEqual(C_RHash(313, 11, 5), tuple([1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01011010001(self):
      self.assertEqual(C_RHash(187, 11, 5), tuple([0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00111010001(self):
      self.assertEqual(C_RHash(117, 11, 5), tuple([0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11000110001(self):
      self.assertEqual(C_RHash(394, 11, 5), tuple([1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10100110001(self):
      self.assertEqual(C_RHash(338, 11, 5), tuple([1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01100110001(self):
      self.assertEqual(C_RHash(212, 11, 5), tuple([0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10010110001(self):
      self.assertEqual(C_RHash(303, 11, 5), tuple([1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01010110001(self):
      self.assertEqual(C_RHash(177, 11, 5), tuple([0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00110110001(self):
      self.assertEqual(C_RHash(107, 11, 5), tuple([0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10001110001(self):
      self.assertEqual(C_RHash(283, 11, 5), tuple([1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01001110001(self):
      self.assertEqual(C_RHash(157, 11, 5), tuple([0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00101110001(self):
      self.assertEqual(C_RHash(87, 11, 5), tuple([0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00011110001(self):
      self.assertEqual(C_RHash(52, 11, 5), tuple([0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11100001001(self):
      self.assertEqual(C_RHash(437, 11, 5), tuple([1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11010001001(self):
      self.assertEqual(C_RHash(416, 11, 5), tuple([1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10110001001(self):
      self.assertEqual(C_RHash(360, 11, 5), tuple([1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01110001001(self):
      self.assertEqual(C_RHash(234, 11, 5), tuple([0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11001001001(self):
      self.assertEqual(C_RHash(401, 11, 5), tuple([1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10101001001(self):
      self.assertEqual(C_RHash(345, 11, 5), tuple([1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01101001001(self):
      self.assertEqual(C_RHash(219, 11, 5), tuple([0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10011001001(self):
      self.assertEqual(C_RHash(310, 11, 5), tuple([1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01011001001(self):
      self.assertEqual(C_RHash(184, 11, 5), tuple([0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00111001001(self):
      self.assertEqual(C_RHash(114, 11, 5), tuple([0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11000101001(self):
      self.assertEqual(C_RHash(391, 11, 5), tuple([1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10100101001(self):
      self.assertEqual(C_RHash(335, 11, 5), tuple([1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01100101001(self):
      self.assertEqual(C_RHash(209, 11, 5), tuple([0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10010101001(self):
      self.assertEqual(C_RHash(300, 11, 5), tuple([1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01010101001(self):
      self.assertEqual(C_RHash(174, 11, 5), tuple([0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00110101001(self):
      self.assertEqual(C_RHash(104, 11, 5), tuple([0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10001101001(self):
      self.assertEqual(C_RHash(280, 11, 5), tuple([1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01001101001(self):
      self.assertEqual(C_RHash(154, 11, 5), tuple([0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00101101001(self):
      self.assertEqual(C_RHash(84, 11, 5), tuple([0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00011101001(self):
      self.assertEqual(C_RHash(49, 11, 5), tuple([0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11000011001(self):
      self.assertEqual(C_RHash(385, 11, 5), tuple([1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10100011001(self):
      self.assertEqual(C_RHash(329, 11, 5), tuple([1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01100011001(self):
      self.assertEqual(C_RHash(203, 11, 5), tuple([0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10010011001(self):
      self.assertEqual(C_RHash(294, 11, 5), tuple([1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01010011001(self):
      self.assertEqual(C_RHash(168, 11, 5), tuple([0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00110011001(self):
      self.assertEqual(C_RHash(98, 11, 5), tuple([0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10001011001(self):
      self.assertEqual(C_RHash(274, 11, 5), tuple([1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01001011001(self):
      self.assertEqual(C_RHash(148, 11, 5), tuple([0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00101011001(self):
      self.assertEqual(C_RHash(78, 11, 5), tuple([0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00011011001(self):
      self.assertEqual(C_RHash(43, 11, 5), tuple([0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10000111001(self):
      self.assertEqual(C_RHash(264, 11, 5), tuple([1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01000111001(self):
      self.assertEqual(C_RHash(138, 11, 5), tuple([0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00100111001(self):
      self.assertEqual(C_RHash(68, 11, 5), tuple([0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00010111001(self):
      self.assertEqual(C_RHash(33, 11, 5), tuple([0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00001111001(self):
      self.assertEqual(C_RHash(18, 11, 5), tuple([0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11100000101(self):
      self.assertEqual(C_RHash(435, 11, 5), tuple([1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11010000101(self):
      self.assertEqual(C_RHash(414, 11, 5), tuple([1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10110000101(self):
      self.assertEqual(C_RHash(358, 11, 5), tuple([1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01110000101(self):
      self.assertEqual(C_RHash(232, 11, 5), tuple([0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11001000101(self):
      self.assertEqual(C_RHash(399, 11, 5), tuple([1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10101000101(self):
      self.assertEqual(C_RHash(343, 11, 5), tuple([1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01101000101(self):
      self.assertEqual(C_RHash(217, 11, 5), tuple([0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10011000101(self):
      self.assertEqual(C_RHash(308, 11, 5), tuple([1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01011000101(self):
      self.assertEqual(C_RHash(182, 11, 5), tuple([0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00111000101(self):
      self.assertEqual(C_RHash(112, 11, 5), tuple([0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11000100101(self):
      self.assertEqual(C_RHash(389, 11, 5), tuple([1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10100100101(self):
      self.assertEqual(C_RHash(333, 11, 5), tuple([1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01100100101(self):
      self.assertEqual(C_RHash(207, 11, 5), tuple([0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10010100101(self):
      self.assertEqual(C_RHash(298, 11, 5), tuple([1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01010100101(self):
      self.assertEqual(C_RHash(172, 11, 5), tuple([0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00110100101(self):
      self.assertEqual(C_RHash(102, 11, 5), tuple([0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10001100101(self):
      self.assertEqual(C_RHash(278, 11, 5), tuple([1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01001100101(self):
      self.assertEqual(C_RHash(152, 11, 5), tuple([0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00101100101(self):
      self.assertEqual(C_RHash(82, 11, 5), tuple([0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00011100101(self):
      self.assertEqual(C_RHash(47, 11, 5), tuple([0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11000010101(self):
      self.assertEqual(C_RHash(383, 11, 5), tuple([1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10100010101(self):
      self.assertEqual(C_RHash(327, 11, 5), tuple([1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01100010101(self):
      self.assertEqual(C_RHash(201, 11, 5), tuple([0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10010010101(self):
      self.assertEqual(C_RHash(292, 11, 5), tuple([1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01010010101(self):
      self.assertEqual(C_RHash(166, 11, 5), tuple([0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00110010101(self):
      self.assertEqual(C_RHash(96, 11, 5), tuple([0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10001010101(self):
      self.assertEqual(C_RHash(272, 11, 5), tuple([1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01001010101(self):
      self.assertEqual(C_RHash(146, 11, 5), tuple([0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00101010101(self):
      self.assertEqual(C_RHash(76, 11, 5), tuple([0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00011010101(self):
      self.assertEqual(C_RHash(41, 11, 5), tuple([0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10000110101(self):
      self.assertEqual(C_RHash(262, 11, 5), tuple([1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01000110101(self):
      self.assertEqual(C_RHash(136, 11, 5), tuple([0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00100110101(self):
      self.assertEqual(C_RHash(66, 11, 5), tuple([0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00010110101(self):
      self.assertEqual(C_RHash(31, 11, 5), tuple([0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00001110101(self):
      self.assertEqual(C_RHash(16, 11, 5), tuple([0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11000001101(self):
      self.assertEqual(C_RHash(380, 11, 5), tuple([1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10100001101(self):
      self.assertEqual(C_RHash(324, 11, 5), tuple([1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01100001101(self):
      self.assertEqual(C_RHash(198, 11, 5), tuple([0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10010001101(self):
      self.assertEqual(C_RHash(289, 11, 5), tuple([1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01010001101(self):
      self.assertEqual(C_RHash(163, 11, 5), tuple([0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00110001101(self):
      self.assertEqual(C_RHash(93, 11, 5), tuple([0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10001001101(self):
      self.assertEqual(C_RHash(269, 11, 5), tuple([1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01001001101(self):
      self.assertEqual(C_RHash(143, 11, 5), tuple([0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00101001101(self):
      self.assertEqual(C_RHash(73, 11, 5), tuple([0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00011001101(self):
      self.assertEqual(C_RHash(38, 11, 5), tuple([0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10000101101(self):
      self.assertEqual(C_RHash(259, 11, 5), tuple([1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01000101101(self):
      self.assertEqual(C_RHash(133, 11, 5), tuple([0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00100101101(self):
      self.assertEqual(C_RHash(63, 11, 5), tuple([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00010101101(self):
      self.assertEqual(C_RHash(28, 11, 5), tuple([0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00001101101(self):
      self.assertEqual(C_RHash(13, 11, 5), tuple([0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10000011101(self):
      self.assertEqual(C_RHash(255, 11, 5), tuple([1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01000011101(self):
      self.assertEqual(C_RHash(129, 11, 5), tuple([0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00100011101(self):
      self.assertEqual(C_RHash(59, 11, 5), tuple([0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00010011101(self):
      self.assertEqual(C_RHash(24, 11, 5), tuple([0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00001011101(self):
      self.assertEqual(C_RHash(9, 11, 5), tuple([0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00000111101(self):
      self.assertEqual(C_RHash(4, 11, 5), tuple([0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11100000011(self):
      self.assertEqual(C_RHash(434, 11, 5), tuple([1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11010000011(self):
      self.assertEqual(C_RHash(413, 11, 5), tuple([1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10110000011(self):
      self.assertEqual(C_RHash(357, 11, 5), tuple([1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01110000011(self):
      self.assertEqual(C_RHash(231, 11, 5), tuple([0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11001000011(self):
      self.assertEqual(C_RHash(398, 11, 5), tuple([1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10101000011(self):
      self.assertEqual(C_RHash(342, 11, 5), tuple([1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01101000011(self):
      self.assertEqual(C_RHash(216, 11, 5), tuple([0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10011000011(self):
      self.assertEqual(C_RHash(307, 11, 5), tuple([1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01011000011(self):
      self.assertEqual(C_RHash(181, 11, 5), tuple([0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00111000011(self):
      self.assertEqual(C_RHash(111, 11, 5), tuple([0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11000100011(self):
      self.assertEqual(C_RHash(388, 11, 5), tuple([1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10100100011(self):
      self.assertEqual(C_RHash(332, 11, 5), tuple([1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01100100011(self):
      self.assertEqual(C_RHash(206, 11, 5), tuple([0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10010100011(self):
      self.assertEqual(C_RHash(297, 11, 5), tuple([1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01010100011(self):
      self.assertEqual(C_RHash(171, 11, 5), tuple([0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00110100011(self):
      self.assertEqual(C_RHash(101, 11, 5), tuple([0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10001100011(self):
      self.assertEqual(C_RHash(277, 11, 5), tuple([1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01001100011(self):
      self.assertEqual(C_RHash(151, 11, 5), tuple([0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00101100011(self):
      self.assertEqual(C_RHash(81, 11, 5), tuple([0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00011100011(self):
      self.assertEqual(C_RHash(46, 11, 5), tuple([0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11000010011(self):
      self.assertEqual(C_RHash(382, 11, 5), tuple([1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10100010011(self):
      self.assertEqual(C_RHash(326, 11, 5), tuple([1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01100010011(self):
      self.assertEqual(C_RHash(200, 11, 5), tuple([0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10010010011(self):
      self.assertEqual(C_RHash(291, 11, 5), tuple([1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01010010011(self):
      self.assertEqual(C_RHash(165, 11, 5), tuple([0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00110010011(self):
      self.assertEqual(C_RHash(95, 11, 5), tuple([0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10001010011(self):
      self.assertEqual(C_RHash(271, 11, 5), tuple([1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01001010011(self):
      self.assertEqual(C_RHash(145, 11, 5), tuple([0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00101010011(self):
      self.assertEqual(C_RHash(75, 11, 5), tuple([0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00011010011(self):
      self.assertEqual(C_RHash(40, 11, 5), tuple([0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10000110011(self):
      self.assertEqual(C_RHash(261, 11, 5), tuple([1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01000110011(self):
      self.assertEqual(C_RHash(135, 11, 5), tuple([0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00100110011(self):
      self.assertEqual(C_RHash(65, 11, 5), tuple([0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00010110011(self):
      self.assertEqual(C_RHash(30, 11, 5), tuple([0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00001110011(self):
      self.assertEqual(C_RHash(15, 11, 5), tuple([0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11000001011(self):
      self.assertEqual(C_RHash(379, 11, 5), tuple([1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10100001011(self):
      self.assertEqual(C_RHash(323, 11, 5), tuple([1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01100001011(self):
      self.assertEqual(C_RHash(197, 11, 5), tuple([0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10010001011(self):
      self.assertEqual(C_RHash(288, 11, 5), tuple([1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01010001011(self):
      self.assertEqual(C_RHash(162, 11, 5), tuple([0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00110001011(self):
      self.assertEqual(C_RHash(92, 11, 5), tuple([0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10001001011(self):
      self.assertEqual(C_RHash(268, 11, 5), tuple([1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01001001011(self):
      self.assertEqual(C_RHash(142, 11, 5), tuple([0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00101001011(self):
      self.assertEqual(C_RHash(72, 11, 5), tuple([0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00011001011(self):
      self.assertEqual(C_RHash(37, 11, 5), tuple([0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10000101011(self):
      self.assertEqual(C_RHash(258, 11, 5), tuple([1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01000101011(self):
      self.assertEqual(C_RHash(132, 11, 5), tuple([0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00100101011(self):
      self.assertEqual(C_RHash(62, 11, 5), tuple([0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00010101011(self):
      self.assertEqual(C_RHash(27, 11, 5), tuple([0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00001101011(self):
      self.assertEqual(C_RHash(12, 11, 5), tuple([0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10000011011(self):
      self.assertEqual(C_RHash(254, 11, 5), tuple([1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01000011011(self):
      self.assertEqual(C_RHash(128, 11, 5), tuple([0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00100011011(self):
      self.assertEqual(C_RHash(58, 11, 5), tuple([0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00010011011(self):
      self.assertEqual(C_RHash(23, 11, 5), tuple([0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00001011011(self):
      self.assertEqual(C_RHash(8, 11, 5), tuple([0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00000111011(self):
      self.assertEqual(C_RHash(3, 11, 5), tuple([0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11000000111(self):
      self.assertEqual(C_RHash(378, 11, 5), tuple([1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10100000111(self):
      self.assertEqual(C_RHash(322, 11, 5), tuple([1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01100000111(self):
      self.assertEqual(C_RHash(196, 11, 5), tuple([0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10010000111(self):
      self.assertEqual(C_RHash(287, 11, 5), tuple([1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01010000111(self):
      self.assertEqual(C_RHash(161, 11, 5), tuple([0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00110000111(self):
      self.assertEqual(C_RHash(91, 11, 5), tuple([0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10001000111(self):
      self.assertEqual(C_RHash(267, 11, 5), tuple([1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01001000111(self):
      self.assertEqual(C_RHash(141, 11, 5), tuple([0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00101000111(self):
      self.assertEqual(C_RHash(71, 11, 5), tuple([0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00011000111(self):
      self.assertEqual(C_RHash(36, 11, 5), tuple([0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10000100111(self):
      self.assertEqual(C_RHash(257, 11, 5), tuple([1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01000100111(self):
      self.assertEqual(C_RHash(131, 11, 5), tuple([0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00100100111(self):
      self.assertEqual(C_RHash(61, 11, 5), tuple([0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00010100111(self):
      self.assertEqual(C_RHash(26, 11, 5), tuple([0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00001100111(self):
      self.assertEqual(C_RHash(11, 11, 5), tuple([0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10000010111(self):
      self.assertEqual(C_RHash(253, 11, 5), tuple([1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01000010111(self):
      self.assertEqual(C_RHash(127, 11, 5), tuple([0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00100010111(self):
      self.assertEqual(C_RHash(57, 11, 5), tuple([0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00010010111(self):
      self.assertEqual(C_RHash(22, 11, 5), tuple([0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00001010111(self):
      self.assertEqual(C_RHash(7, 11, 5), tuple([0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00000110111(self):
      self.assertEqual(C_RHash(2, 11, 5), tuple([0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10000001111(self):
      self.assertEqual(C_RHash(252, 11, 5), tuple([1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01000001111(self):
      self.assertEqual(C_RHash(126, 11, 5), tuple([0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00100001111(self):
      self.assertEqual(C_RHash(56, 11, 5), tuple([0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00010001111(self):
      self.assertEqual(C_RHash(21, 11, 5), tuple([0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00001001111(self):
      self.assertEqual(C_RHash(6, 11, 5), tuple([0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00000101111(self):
      self.assertEqual(C_RHash(1, 11, 5), tuple([0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00000011111(self):
      self.assertEqual(C_RHash(0, 11, 5), tuple([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]))

class HashTest_n11_r6(unittest.TestCase):
  def test_C_Hash_range_11111100000(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111010000(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110110000(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101110000(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011110000(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111110000(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111110000(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111001000(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110101000(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101101000(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011101000(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111101000(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111101000(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110011000(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101011000(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011011000(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111011000(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111011000(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100111000(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010111000(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110111000(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110111000(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001111000(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101111000(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101111000(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011111000(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011111000(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111111000(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111000100(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110100100(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101100100(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011100100(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111100100(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111100100(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110010100(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101010100(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011010100(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111010100(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111010100(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100110100(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010110100(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110110100(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110110100(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001110100(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101110100(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101110100(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011110100(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011110100(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111110100(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110001100(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101001100(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011001100(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111001100(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111001100(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100101100(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010101100(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110101100(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110101100(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001101100(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101101100(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101101100(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011101100(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011101100(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111101100(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100011100(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010011100(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110011100(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110011100(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001011100(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101011100(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101011100(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011011100(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011011100(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111011100(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000111100(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100111100(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100111100(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010111100(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010111100(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110111100(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001111100(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001111100(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101111100(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011111100(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111000010(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110100010(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101100010(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011100010(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111100010(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111100010(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110010010(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101010010(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011010010(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111010010(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111010010(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100110010(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010110010(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110110010(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110110010(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001110010(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101110010(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101110010(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011110010(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011110010(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111110010(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110001010(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101001010(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011001010(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111001010(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111001010(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100101010(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010101010(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110101010(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110101010(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001101010(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101101010(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101101010(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011101010(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011101010(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111101010(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100011010(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010011010(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110011010(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110011010(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001011010(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101011010(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101011010(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011011010(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011011010(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111011010(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000111010(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100111010(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100111010(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010111010(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010111010(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110111010(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001111010(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001111010(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101111010(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011111010(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110000110(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101000110(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011000110(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111000110(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111000110(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100100110(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010100110(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110100110(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110100110(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001100110(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101100110(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101100110(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011100110(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011100110(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111100110(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100010110(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010010110(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110010110(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110010110(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001010110(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101010110(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101010110(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011010110(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011010110(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111010110(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000110110(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100110110(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100110110(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010110110(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010110110(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110110110(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001110110(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001110110(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101110110(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011110110(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100001110(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010001110(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110001110(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110001110(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001001110(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101001110(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101001110(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011001110(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011001110(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111001110(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000101110(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100101110(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100101110(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010101110(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010101110(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110101110(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001101110(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001101110(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101101110(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011101110(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000011110(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100011110(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100011110(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010011110(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010011110(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110011110(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001011110(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001011110(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101011110(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011011110(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000111110(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000111110(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100111110(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010111110(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001111110(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111000001(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110100001(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101100001(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011100001(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111100001(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111100001(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110010001(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101010001(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011010001(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111010001(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111010001(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100110001(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010110001(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110110001(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110110001(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001110001(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101110001(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101110001(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011110001(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011110001(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111110001(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110001001(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101001001(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011001001(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111001001(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111001001(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100101001(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010101001(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110101001(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110101001(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001101001(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101101001(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101101001(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011101001(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011101001(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111101001(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100011001(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010011001(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110011001(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110011001(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001011001(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101011001(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101011001(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011011001(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011011001(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111011001(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000111001(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100111001(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100111001(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010111001(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010111001(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110111001(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001111001(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001111001(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101111001(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011111001(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110000101(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101000101(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011000101(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111000101(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111000101(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100100101(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010100101(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110100101(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110100101(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001100101(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101100101(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101100101(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011100101(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011100101(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111100101(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100010101(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010010101(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110010101(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110010101(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001010101(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101010101(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101010101(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011010101(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011010101(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111010101(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000110101(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100110101(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100110101(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010110101(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010110101(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110110101(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001110101(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001110101(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101110101(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011110101(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100001101(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010001101(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110001101(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110001101(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001001101(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101001101(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101001101(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011001101(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011001101(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111001101(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000101101(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100101101(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100101101(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010101101(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010101101(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110101101(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001101101(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001101101(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101101101(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011101101(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000011101(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100011101(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100011101(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010011101(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010011101(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110011101(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001011101(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001011101(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101011101(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011011101(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000111101(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000111101(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100111101(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010111101(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001111101(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110000011(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101000011(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011000011(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111000011(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111000011(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100100011(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010100011(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110100011(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110100011(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001100011(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101100011(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101100011(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011100011(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011100011(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111100011(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100010011(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010010011(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110010011(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110010011(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001010011(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101010011(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101010011(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011010011(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011010011(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111010011(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000110011(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100110011(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100110011(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010110011(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010110011(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110110011(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001110011(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001110011(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101110011(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011110011(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100001011(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010001011(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110001011(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110001011(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001001011(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101001011(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101001011(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011001011(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011001011(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111001011(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000101011(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100101011(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100101011(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010101011(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010101011(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110101011(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001101011(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001101011(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101101011(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011101011(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000011011(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100011011(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100011011(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010011011(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010011011(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110011011(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001011011(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001011011(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101011011(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011011011(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000111011(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000111011(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100111011(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010111011(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001111011(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100000111(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010000111(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110000111(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110000111(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001000111(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101000111(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101000111(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011000111(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011000111(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111000111(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000100111(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100100111(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100100111(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010100111(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010100111(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110100111(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001100111(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001100111(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101100111(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011100111(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000010111(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100010111(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100010111(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010010111(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010010111(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110010111(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001010111(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001010111(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101010111(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011010111(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000110111(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000110111(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100110111(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010110111(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001110111(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000001111(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100001111(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100001111(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010001111(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010001111(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110001111(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001001111(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001001111(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101001111(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011001111(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000101111(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000101111(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100101111(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010101111(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001101111(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000011111(self):
      h = C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000011111(self):
      h = C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100011111(self):
      h = C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010011111(self):
      h = C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001011111(self):
      h = C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00000111111(self):
      h = C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], 6)
      self.assert_(C(11, 6)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], 6)] = [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], 6)] = [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0], 6)] = [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0], 6)] = [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], 6)] = [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], 6)] = [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], 6)] = [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 6)] = [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0], 6)] = [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], 6)] = [1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], 6)] = [1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0], 6)] = [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0], 6)] = [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0], 6)] = [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], 6)] = [1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0], 6)] = [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], 6)] = [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], 6)] = [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0], 6)] = [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], 6)] = [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], 6)] = [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], 6)] = [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], 6)] = [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0], 6)] = [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], 6)] = [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0], 6)] = [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], 6)] = [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], 6)] = [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0], 6)] = [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0], 6)] = [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0], 6)] = [1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], 6)] = [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], 6)] = [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0], 6)] = [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], 6)] = [1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], 6)] = [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0], 6)] = [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], 6)] = [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], 6)] = [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0], 6)] = [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], 6)] = [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], 6)] = [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0], 6)] = [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], 6)] = [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], 6)] = [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], 6)] = [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], 6)] = [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0], 6)] = [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], 6)] = [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], 6)] = [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], 6)] = [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0], 6)] = [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], 6)] = [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], 6)] = [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0], 6)] = [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], 6)] = [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], 6)] = [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], 6)] = [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0], 6)] = [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0], 6)] = [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0], 6)] = [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], 6)] = [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], 6)] = [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], 6)] = [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], 6)] = [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], 6)] = [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], 6)] = [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], 6)] = [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], 6)] = [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], 6)] = [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], 6)] = [0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], 6)] = [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], 6)] = [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], 6)] = [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], 6)] = [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0], 6)] = [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], 6)] = [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0], 6)] = [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0], 6)] = [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], 6)] = [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], 6)] = [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], 6)] = [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], 6)] = [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], 6)] = [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0], 6)] = [1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0], 6)] = [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0], 6)] = [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0], 6)] = [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0], 6)] = [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0], 6)] = [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], 6)] = [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0], 6)] = [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0], 6)] = [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], 6)] = [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], 6)] = [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], 6)] = [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0], 6)] = [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], 6)] = [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], 6)] = [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], 6)] = [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], 6)] = [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], 6)] = [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], 6)] = [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], 6)] = [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], 6)] = [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], 6)] = [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], 6)] = [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0], 6)] = [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0], 6)] = [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0], 6)] = [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0], 6)] = [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], 6)] = [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], 6)] = [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], 6)] = [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], 6)] = [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], 6)] = [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], 6)] = [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], 6)] = [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], 6)] = [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0], 6)] = [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], 6)] = [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], 6)] = [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], 6)] = [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], 6)] = [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0], 6)] = [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0], 6)] = [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], 6)] = [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], 6)] = [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], 6)] = [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], 6)] = [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], 6)] = [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], 6)] = [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], 6)] = [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0], 6)] = [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], 6)] = [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], 6)] = [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], 6)] = [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], 6)] = [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], 6)] = [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], 6)] = [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], 6)] = [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0], 6)] = [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], 6)] = [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], 6)] = [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], 6)] = [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], 6)] = [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], 6)] = [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], 6)] = [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0], 6)] = [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0], 6)] = [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], 6)] = [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0], 6)] = [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], 6)] = [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], 6)] = [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0], 6)] = [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], 6)] = [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], 6)] = [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], 6)] = [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], 6)] = [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], 6)] = [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], 6)] = [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], 6)] = [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], 6)] = [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], 6)] = [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], 6)] = [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0], 6)] = [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], 6)] = [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], 6)] = [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], 6)] = [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], 6)] = [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], 6)] = [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], 6)] = [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], 6)] = [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], 6)] = [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], 6)] = [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], 6)] = [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], 6)] = [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0], 6)] = [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], 6)] = [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], 6)] = [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], 6)] = [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], 6)] = [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0], 6)] = [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0], 6)] = [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], 6)] = [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], 6)] = [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0], 6)] = [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], 6)] = [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], 6)] = [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0], 6)] = [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], 6)] = [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], 6)] = [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], 6)] = [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], 6)] = [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0], 6)] = [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], 6)] = [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], 6)] = [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], 6)] = [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], 6)] = [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], 6)] = [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], 6)] = [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], 6)] = [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], 6)] = [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], 6)] = [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], 6)] = [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], 6)] = [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], 6)] = [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], 6)] = [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0], 6)] = [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], 6), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], 6)] = [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], 6)] = [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], 6)] = [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], 6)] = [1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1], 6)] = [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1], 6)] = [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1], 6)] = [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], 6)] = [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], 6)] = [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], 6)] = [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1], 6)] = [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], 6)] = [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], 6)] = [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], 6)] = [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], 6)] = [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1], 6)] = [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], 6)] = [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], 6)] = [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], 6)] = [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], 6)] = [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], 6)] = [0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], 6)] = [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], 6)] = [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], 6)] = [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], 6)] = [1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], 6)] = [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], 6)] = [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], 6)] = [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], 6)] = [1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], 6)] = [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], 6)] = [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], 6)] = [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], 6)] = [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1], 6)] = [0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], 6)] = [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], 6)] = [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], 6)] = [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], 6)] = [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], 6)] = [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], 6)] = [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], 6)] = [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], 6)] = [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], 6)] = [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], 6)] = [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], 6)] = [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], 6)] = [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], 6)] = [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], 6)] = [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], 6)] = [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], 6)] = [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], 6)] = [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], 6)] = [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], 6)] = [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], 6)] = [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], 6)] = [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], 6)] = [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], 6)] = [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1], 6)] = [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], 6)] = [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], 6)] = [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], 6)] = [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1], 6)] = [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], 6)] = [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], 6)] = [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], 6)] = [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], 6)] = [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], 6)] = [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], 6)] = [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], 6)] = [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], 6)] = [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], 6)] = [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], 6)] = [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], 6)] = [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], 6)] = [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], 6)] = [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], 6)] = [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], 6)] = [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], 6)] = [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], 6)] = [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], 6)] = [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], 6)] = [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], 6)] = [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], 6)] = [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], 6)] = [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], 6)] = [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], 6)] = [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], 6)] = [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], 6)] = [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], 6)] = [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], 6)] = [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], 6)] = [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], 6)] = [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], 6)] = [1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], 6)] = [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], 6)] = [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], 6)] = [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], 6)] = [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], 6)] = [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], 6)] = [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], 6)] = [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], 6)] = [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], 6)] = [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], 6)] = [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], 6)] = [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], 6)] = [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], 6)] = [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], 6)] = [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], 6)] = [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], 6)] = [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], 6)] = [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], 6)] = [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], 6)] = [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], 6)] = [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], 6)] = [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], 6)] = [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], 6)] = [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], 6)] = [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], 6)] = [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], 6)] = [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], 6)] = [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], 6)] = [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], 6)] = [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], 6)] = [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], 6)] = [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], 6)] = [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], 6)] = [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], 6)] = [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], 6)] = [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], 6)] = [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], 6)] = [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], 6)] = [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1], 6)] = [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], 6)] = [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], 6)] = [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], 6)] = [1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], 6)] = [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], 6)] = [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], 6)] = [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], 6)] = [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], 6)] = [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], 6)] = [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], 6)] = [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], 6)] = [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], 6)] = [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], 6)] = [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], 6)] = [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], 6)] = [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], 6)] = [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], 6)] = [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], 6)] = [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], 6)] = [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], 6)] = [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], 6)] = [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], 6)] = [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], 6)] = [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], 6)] = [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], 6)] = [0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], 6)] = [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], 6)] = [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], 6)] = [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], 6)] = [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], 6)] = [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], 6)] = [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], 6)] = [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], 6)] = [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], 6)] = [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], 6)] = [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], 6)] = [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], 6)] = [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], 6)] = [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], 6)] = [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], 6)] = [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], 6)] = [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], 6)] = [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], 6)] = [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], 6)] = [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], 6)] = [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], 6)] = [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], 6)] = [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], 6)] = [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], 6)] = [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], 6)] = [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], 6)] = [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], 6)] = [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], 6)] = [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], 6)] = [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], 6)] = [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], 6)] = [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], 6)] = [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], 6)] = [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], 6)] = [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], 6)] = [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], 6)] = [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], 6)] = [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], 6)] = [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], 6)] = [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], 6)] = [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], 6)] = [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], 6)] = [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], 6)] = [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], 6)] = [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], 6)] = [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], 6)] = [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], 6)] = [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], 6)] = [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], 6)] = [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], 6)] = [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], 6)] = [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], 6)] = [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], 6)] = [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], 6)] = [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], 6)] = [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], 6)] = [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], 6)] = [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], 6)] = [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], 6)] = [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], 6)] = [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], 6)] = [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], 6)] = [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], 6)] = [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], 6)] = [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], 6)] = [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], 6)] = [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], 6)] = [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], 6)] = [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], 6)] = [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], 6)] = [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], 6)] = [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], 6)] = [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], 6)] = [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], 6)] = [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], 6)] = [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], 6)] = [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], 6)] = [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], 6)] = [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], 6)] = [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], 6)] = [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], 6)] = [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], 6)] = [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], 6)] = [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], 6)] = [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], 6)] = [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], 6)] = [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], 6)] = [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], 6)] = [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], 6)] = [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], 6)] = [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], 6)] = [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], 6)] = [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], 6)] = [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], 6)] = [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], 6)] = [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], 6), None) is None)
    d[C_Hash([0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], 6)] = [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 462)

  def test_C_RHash_soundness_11111100000(self):
      self.assertEqual(C_RHash(461, 11, 6), tuple([1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11111010000(self):
      self.assertEqual(C_RHash(460, 11, 6), tuple([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11110110000(self):
      self.assertEqual(C_RHash(455, 11, 6), tuple([1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11101110000(self):
      self.assertEqual(C_RHash(440, 11, 6), tuple([1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11011110000(self):
      self.assertEqual(C_RHash(405, 11, 6), tuple([1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_10111110000(self):
      self.assertEqual(C_RHash(335, 11, 6), tuple([1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_01111110000(self):
      self.assertEqual(C_RHash(209, 11, 6), tuple([0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11111001000(self):
      self.assertEqual(C_RHash(459, 11, 6), tuple([1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11110101000(self):
      self.assertEqual(C_RHash(454, 11, 6), tuple([1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11101101000(self):
      self.assertEqual(C_RHash(439, 11, 6), tuple([1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11011101000(self):
      self.assertEqual(C_RHash(404, 11, 6), tuple([1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10111101000(self):
      self.assertEqual(C_RHash(334, 11, 6), tuple([1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01111101000(self):
      self.assertEqual(C_RHash(208, 11, 6), tuple([0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11110011000(self):
      self.assertEqual(C_RHash(450, 11, 6), tuple([1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11101011000(self):
      self.assertEqual(C_RHash(435, 11, 6), tuple([1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11011011000(self):
      self.assertEqual(C_RHash(400, 11, 6), tuple([1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10111011000(self):
      self.assertEqual(C_RHash(330, 11, 6), tuple([1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01111011000(self):
      self.assertEqual(C_RHash(204, 11, 6), tuple([0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11100111000(self):
      self.assertEqual(C_RHash(425, 11, 6), tuple([1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11010111000(self):
      self.assertEqual(C_RHash(390, 11, 6), tuple([1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10110111000(self):
      self.assertEqual(C_RHash(320, 11, 6), tuple([1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01110111000(self):
      self.assertEqual(C_RHash(194, 11, 6), tuple([0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11001111000(self):
      self.assertEqual(C_RHash(370, 11, 6), tuple([1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10101111000(self):
      self.assertEqual(C_RHash(300, 11, 6), tuple([1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01101111000(self):
      self.assertEqual(C_RHash(174, 11, 6), tuple([0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10011111000(self):
      self.assertEqual(C_RHash(265, 11, 6), tuple([1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01011111000(self):
      self.assertEqual(C_RHash(139, 11, 6), tuple([0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_00111111000(self):
      self.assertEqual(C_RHash(83, 11, 6), tuple([0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11111000100(self):
      self.assertEqual(C_RHash(458, 11, 6), tuple([1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11110100100(self):
      self.assertEqual(C_RHash(453, 11, 6), tuple([1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11101100100(self):
      self.assertEqual(C_RHash(438, 11, 6), tuple([1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11011100100(self):
      self.assertEqual(C_RHash(403, 11, 6), tuple([1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10111100100(self):
      self.assertEqual(C_RHash(333, 11, 6), tuple([1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01111100100(self):
      self.assertEqual(C_RHash(207, 11, 6), tuple([0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11110010100(self):
      self.assertEqual(C_RHash(449, 11, 6), tuple([1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11101010100(self):
      self.assertEqual(C_RHash(434, 11, 6), tuple([1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11011010100(self):
      self.assertEqual(C_RHash(399, 11, 6), tuple([1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10111010100(self):
      self.assertEqual(C_RHash(329, 11, 6), tuple([1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01111010100(self):
      self.assertEqual(C_RHash(203, 11, 6), tuple([0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11100110100(self):
      self.assertEqual(C_RHash(424, 11, 6), tuple([1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11010110100(self):
      self.assertEqual(C_RHash(389, 11, 6), tuple([1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10110110100(self):
      self.assertEqual(C_RHash(319, 11, 6), tuple([1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01110110100(self):
      self.assertEqual(C_RHash(193, 11, 6), tuple([0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11001110100(self):
      self.assertEqual(C_RHash(369, 11, 6), tuple([1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10101110100(self):
      self.assertEqual(C_RHash(299, 11, 6), tuple([1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01101110100(self):
      self.assertEqual(C_RHash(173, 11, 6), tuple([0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10011110100(self):
      self.assertEqual(C_RHash(264, 11, 6), tuple([1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01011110100(self):
      self.assertEqual(C_RHash(138, 11, 6), tuple([0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_00111110100(self):
      self.assertEqual(C_RHash(82, 11, 6), tuple([0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11110001100(self):
      self.assertEqual(C_RHash(446, 11, 6), tuple([1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11101001100(self):
      self.assertEqual(C_RHash(431, 11, 6), tuple([1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11011001100(self):
      self.assertEqual(C_RHash(396, 11, 6), tuple([1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10111001100(self):
      self.assertEqual(C_RHash(326, 11, 6), tuple([1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01111001100(self):
      self.assertEqual(C_RHash(200, 11, 6), tuple([0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11100101100(self):
      self.assertEqual(C_RHash(421, 11, 6), tuple([1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11010101100(self):
      self.assertEqual(C_RHash(386, 11, 6), tuple([1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10110101100(self):
      self.assertEqual(C_RHash(316, 11, 6), tuple([1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01110101100(self):
      self.assertEqual(C_RHash(190, 11, 6), tuple([0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11001101100(self):
      self.assertEqual(C_RHash(366, 11, 6), tuple([1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10101101100(self):
      self.assertEqual(C_RHash(296, 11, 6), tuple([1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01101101100(self):
      self.assertEqual(C_RHash(170, 11, 6), tuple([0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10011101100(self):
      self.assertEqual(C_RHash(261, 11, 6), tuple([1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01011101100(self):
      self.assertEqual(C_RHash(135, 11, 6), tuple([0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00111101100(self):
      self.assertEqual(C_RHash(79, 11, 6), tuple([0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11100011100(self):
      self.assertEqual(C_RHash(415, 11, 6), tuple([1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11010011100(self):
      self.assertEqual(C_RHash(380, 11, 6), tuple([1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10110011100(self):
      self.assertEqual(C_RHash(310, 11, 6), tuple([1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01110011100(self):
      self.assertEqual(C_RHash(184, 11, 6), tuple([0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11001011100(self):
      self.assertEqual(C_RHash(360, 11, 6), tuple([1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10101011100(self):
      self.assertEqual(C_RHash(290, 11, 6), tuple([1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01101011100(self):
      self.assertEqual(C_RHash(164, 11, 6), tuple([0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10011011100(self):
      self.assertEqual(C_RHash(255, 11, 6), tuple([1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01011011100(self):
      self.assertEqual(C_RHash(129, 11, 6), tuple([0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00111011100(self):
      self.assertEqual(C_RHash(73, 11, 6), tuple([0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11000111100(self):
      self.assertEqual(C_RHash(350, 11, 6), tuple([1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10100111100(self):
      self.assertEqual(C_RHash(280, 11, 6), tuple([1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01100111100(self):
      self.assertEqual(C_RHash(154, 11, 6), tuple([0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10010111100(self):
      self.assertEqual(C_RHash(245, 11, 6), tuple([1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01010111100(self):
      self.assertEqual(C_RHash(119, 11, 6), tuple([0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00110111100(self):
      self.assertEqual(C_RHash(63, 11, 6), tuple([0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10001111100(self):
      self.assertEqual(C_RHash(230, 11, 6), tuple([1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01001111100(self):
      self.assertEqual(C_RHash(104, 11, 6), tuple([0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00101111100(self):
      self.assertEqual(C_RHash(48, 11, 6), tuple([0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00011111100(self):
      self.assertEqual(C_RHash(27, 11, 6), tuple([0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11111000010(self):
      self.assertEqual(C_RHash(457, 11, 6), tuple([1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11110100010(self):
      self.assertEqual(C_RHash(452, 11, 6), tuple([1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11101100010(self):
      self.assertEqual(C_RHash(437, 11, 6), tuple([1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11011100010(self):
      self.assertEqual(C_RHash(402, 11, 6), tuple([1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10111100010(self):
      self.assertEqual(C_RHash(332, 11, 6), tuple([1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01111100010(self):
      self.assertEqual(C_RHash(206, 11, 6), tuple([0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11110010010(self):
      self.assertEqual(C_RHash(448, 11, 6), tuple([1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11101010010(self):
      self.assertEqual(C_RHash(433, 11, 6), tuple([1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11011010010(self):
      self.assertEqual(C_RHash(398, 11, 6), tuple([1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10111010010(self):
      self.assertEqual(C_RHash(328, 11, 6), tuple([1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01111010010(self):
      self.assertEqual(C_RHash(202, 11, 6), tuple([0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11100110010(self):
      self.assertEqual(C_RHash(423, 11, 6), tuple([1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11010110010(self):
      self.assertEqual(C_RHash(388, 11, 6), tuple([1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10110110010(self):
      self.assertEqual(C_RHash(318, 11, 6), tuple([1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01110110010(self):
      self.assertEqual(C_RHash(192, 11, 6), tuple([0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11001110010(self):
      self.assertEqual(C_RHash(368, 11, 6), tuple([1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10101110010(self):
      self.assertEqual(C_RHash(298, 11, 6), tuple([1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01101110010(self):
      self.assertEqual(C_RHash(172, 11, 6), tuple([0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10011110010(self):
      self.assertEqual(C_RHash(263, 11, 6), tuple([1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01011110010(self):
      self.assertEqual(C_RHash(137, 11, 6), tuple([0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_00111110010(self):
      self.assertEqual(C_RHash(81, 11, 6), tuple([0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11110001010(self):
      self.assertEqual(C_RHash(445, 11, 6), tuple([1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11101001010(self):
      self.assertEqual(C_RHash(430, 11, 6), tuple([1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11011001010(self):
      self.assertEqual(C_RHash(395, 11, 6), tuple([1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10111001010(self):
      self.assertEqual(C_RHash(325, 11, 6), tuple([1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01111001010(self):
      self.assertEqual(C_RHash(199, 11, 6), tuple([0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11100101010(self):
      self.assertEqual(C_RHash(420, 11, 6), tuple([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11010101010(self):
      self.assertEqual(C_RHash(385, 11, 6), tuple([1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10110101010(self):
      self.assertEqual(C_RHash(315, 11, 6), tuple([1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01110101010(self):
      self.assertEqual(C_RHash(189, 11, 6), tuple([0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11001101010(self):
      self.assertEqual(C_RHash(365, 11, 6), tuple([1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10101101010(self):
      self.assertEqual(C_RHash(295, 11, 6), tuple([1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01101101010(self):
      self.assertEqual(C_RHash(169, 11, 6), tuple([0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10011101010(self):
      self.assertEqual(C_RHash(260, 11, 6), tuple([1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01011101010(self):
      self.assertEqual(C_RHash(134, 11, 6), tuple([0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00111101010(self):
      self.assertEqual(C_RHash(78, 11, 6), tuple([0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11100011010(self):
      self.assertEqual(C_RHash(414, 11, 6), tuple([1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11010011010(self):
      self.assertEqual(C_RHash(379, 11, 6), tuple([1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10110011010(self):
      self.assertEqual(C_RHash(309, 11, 6), tuple([1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01110011010(self):
      self.assertEqual(C_RHash(183, 11, 6), tuple([0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11001011010(self):
      self.assertEqual(C_RHash(359, 11, 6), tuple([1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10101011010(self):
      self.assertEqual(C_RHash(289, 11, 6), tuple([1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01101011010(self):
      self.assertEqual(C_RHash(163, 11, 6), tuple([0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10011011010(self):
      self.assertEqual(C_RHash(254, 11, 6), tuple([1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01011011010(self):
      self.assertEqual(C_RHash(128, 11, 6), tuple([0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00111011010(self):
      self.assertEqual(C_RHash(72, 11, 6), tuple([0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11000111010(self):
      self.assertEqual(C_RHash(349, 11, 6), tuple([1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10100111010(self):
      self.assertEqual(C_RHash(279, 11, 6), tuple([1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01100111010(self):
      self.assertEqual(C_RHash(153, 11, 6), tuple([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10010111010(self):
      self.assertEqual(C_RHash(244, 11, 6), tuple([1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01010111010(self):
      self.assertEqual(C_RHash(118, 11, 6), tuple([0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00110111010(self):
      self.assertEqual(C_RHash(62, 11, 6), tuple([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10001111010(self):
      self.assertEqual(C_RHash(229, 11, 6), tuple([1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01001111010(self):
      self.assertEqual(C_RHash(103, 11, 6), tuple([0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00101111010(self):
      self.assertEqual(C_RHash(47, 11, 6), tuple([0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00011111010(self):
      self.assertEqual(C_RHash(26, 11, 6), tuple([0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11110000110(self):
      self.assertEqual(C_RHash(443, 11, 6), tuple([1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11101000110(self):
      self.assertEqual(C_RHash(428, 11, 6), tuple([1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11011000110(self):
      self.assertEqual(C_RHash(393, 11, 6), tuple([1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10111000110(self):
      self.assertEqual(C_RHash(323, 11, 6), tuple([1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01111000110(self):
      self.assertEqual(C_RHash(197, 11, 6), tuple([0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11100100110(self):
      self.assertEqual(C_RHash(418, 11, 6), tuple([1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11010100110(self):
      self.assertEqual(C_RHash(383, 11, 6), tuple([1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10110100110(self):
      self.assertEqual(C_RHash(313, 11, 6), tuple([1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01110100110(self):
      self.assertEqual(C_RHash(187, 11, 6), tuple([0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11001100110(self):
      self.assertEqual(C_RHash(363, 11, 6), tuple([1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10101100110(self):
      self.assertEqual(C_RHash(293, 11, 6), tuple([1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01101100110(self):
      self.assertEqual(C_RHash(167, 11, 6), tuple([0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10011100110(self):
      self.assertEqual(C_RHash(258, 11, 6), tuple([1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01011100110(self):
      self.assertEqual(C_RHash(132, 11, 6), tuple([0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00111100110(self):
      self.assertEqual(C_RHash(76, 11, 6), tuple([0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11100010110(self):
      self.assertEqual(C_RHash(412, 11, 6), tuple([1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11010010110(self):
      self.assertEqual(C_RHash(377, 11, 6), tuple([1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10110010110(self):
      self.assertEqual(C_RHash(307, 11, 6), tuple([1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01110010110(self):
      self.assertEqual(C_RHash(181, 11, 6), tuple([0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11001010110(self):
      self.assertEqual(C_RHash(357, 11, 6), tuple([1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10101010110(self):
      self.assertEqual(C_RHash(287, 11, 6), tuple([1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01101010110(self):
      self.assertEqual(C_RHash(161, 11, 6), tuple([0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10011010110(self):
      self.assertEqual(C_RHash(252, 11, 6), tuple([1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01011010110(self):
      self.assertEqual(C_RHash(126, 11, 6), tuple([0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00111010110(self):
      self.assertEqual(C_RHash(70, 11, 6), tuple([0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11000110110(self):
      self.assertEqual(C_RHash(347, 11, 6), tuple([1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10100110110(self):
      self.assertEqual(C_RHash(277, 11, 6), tuple([1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01100110110(self):
      self.assertEqual(C_RHash(151, 11, 6), tuple([0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10010110110(self):
      self.assertEqual(C_RHash(242, 11, 6), tuple([1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01010110110(self):
      self.assertEqual(C_RHash(116, 11, 6), tuple([0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00110110110(self):
      self.assertEqual(C_RHash(60, 11, 6), tuple([0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10001110110(self):
      self.assertEqual(C_RHash(227, 11, 6), tuple([1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01001110110(self):
      self.assertEqual(C_RHash(101, 11, 6), tuple([0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00101110110(self):
      self.assertEqual(C_RHash(45, 11, 6), tuple([0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00011110110(self):
      self.assertEqual(C_RHash(24, 11, 6), tuple([0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11100001110(self):
      self.assertEqual(C_RHash(409, 11, 6), tuple([1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11010001110(self):
      self.assertEqual(C_RHash(374, 11, 6), tuple([1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10110001110(self):
      self.assertEqual(C_RHash(304, 11, 6), tuple([1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01110001110(self):
      self.assertEqual(C_RHash(178, 11, 6), tuple([0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11001001110(self):
      self.assertEqual(C_RHash(354, 11, 6), tuple([1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10101001110(self):
      self.assertEqual(C_RHash(284, 11, 6), tuple([1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01101001110(self):
      self.assertEqual(C_RHash(158, 11, 6), tuple([0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10011001110(self):
      self.assertEqual(C_RHash(249, 11, 6), tuple([1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01011001110(self):
      self.assertEqual(C_RHash(123, 11, 6), tuple([0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00111001110(self):
      self.assertEqual(C_RHash(67, 11, 6), tuple([0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11000101110(self):
      self.assertEqual(C_RHash(344, 11, 6), tuple([1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10100101110(self):
      self.assertEqual(C_RHash(274, 11, 6), tuple([1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01100101110(self):
      self.assertEqual(C_RHash(148, 11, 6), tuple([0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10010101110(self):
      self.assertEqual(C_RHash(239, 11, 6), tuple([1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01010101110(self):
      self.assertEqual(C_RHash(113, 11, 6), tuple([0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00110101110(self):
      self.assertEqual(C_RHash(57, 11, 6), tuple([0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10001101110(self):
      self.assertEqual(C_RHash(224, 11, 6), tuple([1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01001101110(self):
      self.assertEqual(C_RHash(98, 11, 6), tuple([0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00101101110(self):
      self.assertEqual(C_RHash(42, 11, 6), tuple([0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00011101110(self):
      self.assertEqual(C_RHash(21, 11, 6), tuple([0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11000011110(self):
      self.assertEqual(C_RHash(340, 11, 6), tuple([1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10100011110(self):
      self.assertEqual(C_RHash(270, 11, 6), tuple([1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01100011110(self):
      self.assertEqual(C_RHash(144, 11, 6), tuple([0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10010011110(self):
      self.assertEqual(C_RHash(235, 11, 6), tuple([1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01010011110(self):
      self.assertEqual(C_RHash(109, 11, 6), tuple([0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00110011110(self):
      self.assertEqual(C_RHash(53, 11, 6), tuple([0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10001011110(self):
      self.assertEqual(C_RHash(220, 11, 6), tuple([1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01001011110(self):
      self.assertEqual(C_RHash(94, 11, 6), tuple([0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00101011110(self):
      self.assertEqual(C_RHash(38, 11, 6), tuple([0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00011011110(self):
      self.assertEqual(C_RHash(17, 11, 6), tuple([0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10000111110(self):
      self.assertEqual(C_RHash(215, 11, 6), tuple([1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01000111110(self):
      self.assertEqual(C_RHash(89, 11, 6), tuple([0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00100111110(self):
      self.assertEqual(C_RHash(33, 11, 6), tuple([0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00010111110(self):
      self.assertEqual(C_RHash(12, 11, 6), tuple([0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00001111110(self):
      self.assertEqual(C_RHash(6, 11, 6), tuple([0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11111000001(self):
      self.assertEqual(C_RHash(456, 11, 6), tuple([1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11110100001(self):
      self.assertEqual(C_RHash(451, 11, 6), tuple([1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11101100001(self):
      self.assertEqual(C_RHash(436, 11, 6), tuple([1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11011100001(self):
      self.assertEqual(C_RHash(401, 11, 6), tuple([1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10111100001(self):
      self.assertEqual(C_RHash(331, 11, 6), tuple([1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01111100001(self):
      self.assertEqual(C_RHash(205, 11, 6), tuple([0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11110010001(self):
      self.assertEqual(C_RHash(447, 11, 6), tuple([1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11101010001(self):
      self.assertEqual(C_RHash(432, 11, 6), tuple([1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11011010001(self):
      self.assertEqual(C_RHash(397, 11, 6), tuple([1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10111010001(self):
      self.assertEqual(C_RHash(327, 11, 6), tuple([1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01111010001(self):
      self.assertEqual(C_RHash(201, 11, 6), tuple([0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11100110001(self):
      self.assertEqual(C_RHash(422, 11, 6), tuple([1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11010110001(self):
      self.assertEqual(C_RHash(387, 11, 6), tuple([1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10110110001(self):
      self.assertEqual(C_RHash(317, 11, 6), tuple([1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01110110001(self):
      self.assertEqual(C_RHash(191, 11, 6), tuple([0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11001110001(self):
      self.assertEqual(C_RHash(367, 11, 6), tuple([1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10101110001(self):
      self.assertEqual(C_RHash(297, 11, 6), tuple([1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01101110001(self):
      self.assertEqual(C_RHash(171, 11, 6), tuple([0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10011110001(self):
      self.assertEqual(C_RHash(262, 11, 6), tuple([1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01011110001(self):
      self.assertEqual(C_RHash(136, 11, 6), tuple([0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_00111110001(self):
      self.assertEqual(C_RHash(80, 11, 6), tuple([0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11110001001(self):
      self.assertEqual(C_RHash(444, 11, 6), tuple([1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11101001001(self):
      self.assertEqual(C_RHash(429, 11, 6), tuple([1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11011001001(self):
      self.assertEqual(C_RHash(394, 11, 6), tuple([1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10111001001(self):
      self.assertEqual(C_RHash(324, 11, 6), tuple([1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01111001001(self):
      self.assertEqual(C_RHash(198, 11, 6), tuple([0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11100101001(self):
      self.assertEqual(C_RHash(419, 11, 6), tuple([1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11010101001(self):
      self.assertEqual(C_RHash(384, 11, 6), tuple([1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10110101001(self):
      self.assertEqual(C_RHash(314, 11, 6), tuple([1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01110101001(self):
      self.assertEqual(C_RHash(188, 11, 6), tuple([0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11001101001(self):
      self.assertEqual(C_RHash(364, 11, 6), tuple([1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10101101001(self):
      self.assertEqual(C_RHash(294, 11, 6), tuple([1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01101101001(self):
      self.assertEqual(C_RHash(168, 11, 6), tuple([0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10011101001(self):
      self.assertEqual(C_RHash(259, 11, 6), tuple([1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01011101001(self):
      self.assertEqual(C_RHash(133, 11, 6), tuple([0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00111101001(self):
      self.assertEqual(C_RHash(77, 11, 6), tuple([0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11100011001(self):
      self.assertEqual(C_RHash(413, 11, 6), tuple([1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11010011001(self):
      self.assertEqual(C_RHash(378, 11, 6), tuple([1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10110011001(self):
      self.assertEqual(C_RHash(308, 11, 6), tuple([1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01110011001(self):
      self.assertEqual(C_RHash(182, 11, 6), tuple([0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11001011001(self):
      self.assertEqual(C_RHash(358, 11, 6), tuple([1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10101011001(self):
      self.assertEqual(C_RHash(288, 11, 6), tuple([1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01101011001(self):
      self.assertEqual(C_RHash(162, 11, 6), tuple([0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10011011001(self):
      self.assertEqual(C_RHash(253, 11, 6), tuple([1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01011011001(self):
      self.assertEqual(C_RHash(127, 11, 6), tuple([0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00111011001(self):
      self.assertEqual(C_RHash(71, 11, 6), tuple([0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11000111001(self):
      self.assertEqual(C_RHash(348, 11, 6), tuple([1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10100111001(self):
      self.assertEqual(C_RHash(278, 11, 6), tuple([1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01100111001(self):
      self.assertEqual(C_RHash(152, 11, 6), tuple([0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10010111001(self):
      self.assertEqual(C_RHash(243, 11, 6), tuple([1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01010111001(self):
      self.assertEqual(C_RHash(117, 11, 6), tuple([0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00110111001(self):
      self.assertEqual(C_RHash(61, 11, 6), tuple([0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10001111001(self):
      self.assertEqual(C_RHash(228, 11, 6), tuple([1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01001111001(self):
      self.assertEqual(C_RHash(102, 11, 6), tuple([0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00101111001(self):
      self.assertEqual(C_RHash(46, 11, 6), tuple([0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00011111001(self):
      self.assertEqual(C_RHash(25, 11, 6), tuple([0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11110000101(self):
      self.assertEqual(C_RHash(442, 11, 6), tuple([1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11101000101(self):
      self.assertEqual(C_RHash(427, 11, 6), tuple([1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11011000101(self):
      self.assertEqual(C_RHash(392, 11, 6), tuple([1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10111000101(self):
      self.assertEqual(C_RHash(322, 11, 6), tuple([1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01111000101(self):
      self.assertEqual(C_RHash(196, 11, 6), tuple([0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11100100101(self):
      self.assertEqual(C_RHash(417, 11, 6), tuple([1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11010100101(self):
      self.assertEqual(C_RHash(382, 11, 6), tuple([1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10110100101(self):
      self.assertEqual(C_RHash(312, 11, 6), tuple([1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01110100101(self):
      self.assertEqual(C_RHash(186, 11, 6), tuple([0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11001100101(self):
      self.assertEqual(C_RHash(362, 11, 6), tuple([1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10101100101(self):
      self.assertEqual(C_RHash(292, 11, 6), tuple([1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01101100101(self):
      self.assertEqual(C_RHash(166, 11, 6), tuple([0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10011100101(self):
      self.assertEqual(C_RHash(257, 11, 6), tuple([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01011100101(self):
      self.assertEqual(C_RHash(131, 11, 6), tuple([0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00111100101(self):
      self.assertEqual(C_RHash(75, 11, 6), tuple([0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11100010101(self):
      self.assertEqual(C_RHash(411, 11, 6), tuple([1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11010010101(self):
      self.assertEqual(C_RHash(376, 11, 6), tuple([1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10110010101(self):
      self.assertEqual(C_RHash(306, 11, 6), tuple([1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01110010101(self):
      self.assertEqual(C_RHash(180, 11, 6), tuple([0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11001010101(self):
      self.assertEqual(C_RHash(356, 11, 6), tuple([1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10101010101(self):
      self.assertEqual(C_RHash(286, 11, 6), tuple([1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01101010101(self):
      self.assertEqual(C_RHash(160, 11, 6), tuple([0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10011010101(self):
      self.assertEqual(C_RHash(251, 11, 6), tuple([1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01011010101(self):
      self.assertEqual(C_RHash(125, 11, 6), tuple([0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00111010101(self):
      self.assertEqual(C_RHash(69, 11, 6), tuple([0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11000110101(self):
      self.assertEqual(C_RHash(346, 11, 6), tuple([1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10100110101(self):
      self.assertEqual(C_RHash(276, 11, 6), tuple([1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01100110101(self):
      self.assertEqual(C_RHash(150, 11, 6), tuple([0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10010110101(self):
      self.assertEqual(C_RHash(241, 11, 6), tuple([1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01010110101(self):
      self.assertEqual(C_RHash(115, 11, 6), tuple([0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00110110101(self):
      self.assertEqual(C_RHash(59, 11, 6), tuple([0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10001110101(self):
      self.assertEqual(C_RHash(226, 11, 6), tuple([1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01001110101(self):
      self.assertEqual(C_RHash(100, 11, 6), tuple([0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00101110101(self):
      self.assertEqual(C_RHash(44, 11, 6), tuple([0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00011110101(self):
      self.assertEqual(C_RHash(23, 11, 6), tuple([0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11100001101(self):
      self.assertEqual(C_RHash(408, 11, 6), tuple([1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11010001101(self):
      self.assertEqual(C_RHash(373, 11, 6), tuple([1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10110001101(self):
      self.assertEqual(C_RHash(303, 11, 6), tuple([1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01110001101(self):
      self.assertEqual(C_RHash(177, 11, 6), tuple([0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11001001101(self):
      self.assertEqual(C_RHash(353, 11, 6), tuple([1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10101001101(self):
      self.assertEqual(C_RHash(283, 11, 6), tuple([1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01101001101(self):
      self.assertEqual(C_RHash(157, 11, 6), tuple([0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10011001101(self):
      self.assertEqual(C_RHash(248, 11, 6), tuple([1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01011001101(self):
      self.assertEqual(C_RHash(122, 11, 6), tuple([0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00111001101(self):
      self.assertEqual(C_RHash(66, 11, 6), tuple([0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11000101101(self):
      self.assertEqual(C_RHash(343, 11, 6), tuple([1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10100101101(self):
      self.assertEqual(C_RHash(273, 11, 6), tuple([1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01100101101(self):
      self.assertEqual(C_RHash(147, 11, 6), tuple([0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10010101101(self):
      self.assertEqual(C_RHash(238, 11, 6), tuple([1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01010101101(self):
      self.assertEqual(C_RHash(112, 11, 6), tuple([0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00110101101(self):
      self.assertEqual(C_RHash(56, 11, 6), tuple([0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10001101101(self):
      self.assertEqual(C_RHash(223, 11, 6), tuple([1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01001101101(self):
      self.assertEqual(C_RHash(97, 11, 6), tuple([0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00101101101(self):
      self.assertEqual(C_RHash(41, 11, 6), tuple([0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00011101101(self):
      self.assertEqual(C_RHash(20, 11, 6), tuple([0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11000011101(self):
      self.assertEqual(C_RHash(339, 11, 6), tuple([1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10100011101(self):
      self.assertEqual(C_RHash(269, 11, 6), tuple([1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01100011101(self):
      self.assertEqual(C_RHash(143, 11, 6), tuple([0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10010011101(self):
      self.assertEqual(C_RHash(234, 11, 6), tuple([1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01010011101(self):
      self.assertEqual(C_RHash(108, 11, 6), tuple([0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00110011101(self):
      self.assertEqual(C_RHash(52, 11, 6), tuple([0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10001011101(self):
      self.assertEqual(C_RHash(219, 11, 6), tuple([1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01001011101(self):
      self.assertEqual(C_RHash(93, 11, 6), tuple([0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00101011101(self):
      self.assertEqual(C_RHash(37, 11, 6), tuple([0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00011011101(self):
      self.assertEqual(C_RHash(16, 11, 6), tuple([0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10000111101(self):
      self.assertEqual(C_RHash(214, 11, 6), tuple([1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01000111101(self):
      self.assertEqual(C_RHash(88, 11, 6), tuple([0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00100111101(self):
      self.assertEqual(C_RHash(32, 11, 6), tuple([0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00010111101(self):
      self.assertEqual(C_RHash(11, 11, 6), tuple([0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00001111101(self):
      self.assertEqual(C_RHash(5, 11, 6), tuple([0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11110000011(self):
      self.assertEqual(C_RHash(441, 11, 6), tuple([1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11101000011(self):
      self.assertEqual(C_RHash(426, 11, 6), tuple([1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11011000011(self):
      self.assertEqual(C_RHash(391, 11, 6), tuple([1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10111000011(self):
      self.assertEqual(C_RHash(321, 11, 6), tuple([1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01111000011(self):
      self.assertEqual(C_RHash(195, 11, 6), tuple([0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11100100011(self):
      self.assertEqual(C_RHash(416, 11, 6), tuple([1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11010100011(self):
      self.assertEqual(C_RHash(381, 11, 6), tuple([1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10110100011(self):
      self.assertEqual(C_RHash(311, 11, 6), tuple([1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01110100011(self):
      self.assertEqual(C_RHash(185, 11, 6), tuple([0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11001100011(self):
      self.assertEqual(C_RHash(361, 11, 6), tuple([1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10101100011(self):
      self.assertEqual(C_RHash(291, 11, 6), tuple([1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01101100011(self):
      self.assertEqual(C_RHash(165, 11, 6), tuple([0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10011100011(self):
      self.assertEqual(C_RHash(256, 11, 6), tuple([1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01011100011(self):
      self.assertEqual(C_RHash(130, 11, 6), tuple([0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00111100011(self):
      self.assertEqual(C_RHash(74, 11, 6), tuple([0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11100010011(self):
      self.assertEqual(C_RHash(410, 11, 6), tuple([1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11010010011(self):
      self.assertEqual(C_RHash(375, 11, 6), tuple([1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10110010011(self):
      self.assertEqual(C_RHash(305, 11, 6), tuple([1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01110010011(self):
      self.assertEqual(C_RHash(179, 11, 6), tuple([0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11001010011(self):
      self.assertEqual(C_RHash(355, 11, 6), tuple([1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10101010011(self):
      self.assertEqual(C_RHash(285, 11, 6), tuple([1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01101010011(self):
      self.assertEqual(C_RHash(159, 11, 6), tuple([0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10011010011(self):
      self.assertEqual(C_RHash(250, 11, 6), tuple([1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01011010011(self):
      self.assertEqual(C_RHash(124, 11, 6), tuple([0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00111010011(self):
      self.assertEqual(C_RHash(68, 11, 6), tuple([0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11000110011(self):
      self.assertEqual(C_RHash(345, 11, 6), tuple([1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10100110011(self):
      self.assertEqual(C_RHash(275, 11, 6), tuple([1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01100110011(self):
      self.assertEqual(C_RHash(149, 11, 6), tuple([0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10010110011(self):
      self.assertEqual(C_RHash(240, 11, 6), tuple([1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01010110011(self):
      self.assertEqual(C_RHash(114, 11, 6), tuple([0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00110110011(self):
      self.assertEqual(C_RHash(58, 11, 6), tuple([0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10001110011(self):
      self.assertEqual(C_RHash(225, 11, 6), tuple([1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01001110011(self):
      self.assertEqual(C_RHash(99, 11, 6), tuple([0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00101110011(self):
      self.assertEqual(C_RHash(43, 11, 6), tuple([0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00011110011(self):
      self.assertEqual(C_RHash(22, 11, 6), tuple([0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11100001011(self):
      self.assertEqual(C_RHash(407, 11, 6), tuple([1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11010001011(self):
      self.assertEqual(C_RHash(372, 11, 6), tuple([1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10110001011(self):
      self.assertEqual(C_RHash(302, 11, 6), tuple([1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01110001011(self):
      self.assertEqual(C_RHash(176, 11, 6), tuple([0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11001001011(self):
      self.assertEqual(C_RHash(352, 11, 6), tuple([1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10101001011(self):
      self.assertEqual(C_RHash(282, 11, 6), tuple([1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01101001011(self):
      self.assertEqual(C_RHash(156, 11, 6), tuple([0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10011001011(self):
      self.assertEqual(C_RHash(247, 11, 6), tuple([1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01011001011(self):
      self.assertEqual(C_RHash(121, 11, 6), tuple([0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00111001011(self):
      self.assertEqual(C_RHash(65, 11, 6), tuple([0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11000101011(self):
      self.assertEqual(C_RHash(342, 11, 6), tuple([1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10100101011(self):
      self.assertEqual(C_RHash(272, 11, 6), tuple([1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01100101011(self):
      self.assertEqual(C_RHash(146, 11, 6), tuple([0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10010101011(self):
      self.assertEqual(C_RHash(237, 11, 6), tuple([1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01010101011(self):
      self.assertEqual(C_RHash(111, 11, 6), tuple([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00110101011(self):
      self.assertEqual(C_RHash(55, 11, 6), tuple([0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10001101011(self):
      self.assertEqual(C_RHash(222, 11, 6), tuple([1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01001101011(self):
      self.assertEqual(C_RHash(96, 11, 6), tuple([0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00101101011(self):
      self.assertEqual(C_RHash(40, 11, 6), tuple([0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00011101011(self):
      self.assertEqual(C_RHash(19, 11, 6), tuple([0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11000011011(self):
      self.assertEqual(C_RHash(338, 11, 6), tuple([1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10100011011(self):
      self.assertEqual(C_RHash(268, 11, 6), tuple([1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01100011011(self):
      self.assertEqual(C_RHash(142, 11, 6), tuple([0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10010011011(self):
      self.assertEqual(C_RHash(233, 11, 6), tuple([1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01010011011(self):
      self.assertEqual(C_RHash(107, 11, 6), tuple([0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00110011011(self):
      self.assertEqual(C_RHash(51, 11, 6), tuple([0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10001011011(self):
      self.assertEqual(C_RHash(218, 11, 6), tuple([1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01001011011(self):
      self.assertEqual(C_RHash(92, 11, 6), tuple([0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00101011011(self):
      self.assertEqual(C_RHash(36, 11, 6), tuple([0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00011011011(self):
      self.assertEqual(C_RHash(15, 11, 6), tuple([0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10000111011(self):
      self.assertEqual(C_RHash(213, 11, 6), tuple([1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01000111011(self):
      self.assertEqual(C_RHash(87, 11, 6), tuple([0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00100111011(self):
      self.assertEqual(C_RHash(31, 11, 6), tuple([0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00010111011(self):
      self.assertEqual(C_RHash(10, 11, 6), tuple([0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00001111011(self):
      self.assertEqual(C_RHash(4, 11, 6), tuple([0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11100000111(self):
      self.assertEqual(C_RHash(406, 11, 6), tuple([1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11010000111(self):
      self.assertEqual(C_RHash(371, 11, 6), tuple([1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10110000111(self):
      self.assertEqual(C_RHash(301, 11, 6), tuple([1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01110000111(self):
      self.assertEqual(C_RHash(175, 11, 6), tuple([0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11001000111(self):
      self.assertEqual(C_RHash(351, 11, 6), tuple([1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10101000111(self):
      self.assertEqual(C_RHash(281, 11, 6), tuple([1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01101000111(self):
      self.assertEqual(C_RHash(155, 11, 6), tuple([0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10011000111(self):
      self.assertEqual(C_RHash(246, 11, 6), tuple([1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01011000111(self):
      self.assertEqual(C_RHash(120, 11, 6), tuple([0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00111000111(self):
      self.assertEqual(C_RHash(64, 11, 6), tuple([0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11000100111(self):
      self.assertEqual(C_RHash(341, 11, 6), tuple([1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10100100111(self):
      self.assertEqual(C_RHash(271, 11, 6), tuple([1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01100100111(self):
      self.assertEqual(C_RHash(145, 11, 6), tuple([0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10010100111(self):
      self.assertEqual(C_RHash(236, 11, 6), tuple([1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01010100111(self):
      self.assertEqual(C_RHash(110, 11, 6), tuple([0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00110100111(self):
      self.assertEqual(C_RHash(54, 11, 6), tuple([0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10001100111(self):
      self.assertEqual(C_RHash(221, 11, 6), tuple([1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01001100111(self):
      self.assertEqual(C_RHash(95, 11, 6), tuple([0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00101100111(self):
      self.assertEqual(C_RHash(39, 11, 6), tuple([0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00011100111(self):
      self.assertEqual(C_RHash(18, 11, 6), tuple([0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11000010111(self):
      self.assertEqual(C_RHash(337, 11, 6), tuple([1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10100010111(self):
      self.assertEqual(C_RHash(267, 11, 6), tuple([1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01100010111(self):
      self.assertEqual(C_RHash(141, 11, 6), tuple([0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10010010111(self):
      self.assertEqual(C_RHash(232, 11, 6), tuple([1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01010010111(self):
      self.assertEqual(C_RHash(106, 11, 6), tuple([0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00110010111(self):
      self.assertEqual(C_RHash(50, 11, 6), tuple([0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10001010111(self):
      self.assertEqual(C_RHash(217, 11, 6), tuple([1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01001010111(self):
      self.assertEqual(C_RHash(91, 11, 6), tuple([0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00101010111(self):
      self.assertEqual(C_RHash(35, 11, 6), tuple([0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00011010111(self):
      self.assertEqual(C_RHash(14, 11, 6), tuple([0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10000110111(self):
      self.assertEqual(C_RHash(212, 11, 6), tuple([1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01000110111(self):
      self.assertEqual(C_RHash(86, 11, 6), tuple([0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00100110111(self):
      self.assertEqual(C_RHash(30, 11, 6), tuple([0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00010110111(self):
      self.assertEqual(C_RHash(9, 11, 6), tuple([0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00001110111(self):
      self.assertEqual(C_RHash(3, 11, 6), tuple([0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11000001111(self):
      self.assertEqual(C_RHash(336, 11, 6), tuple([1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10100001111(self):
      self.assertEqual(C_RHash(266, 11, 6), tuple([1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01100001111(self):
      self.assertEqual(C_RHash(140, 11, 6), tuple([0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10010001111(self):
      self.assertEqual(C_RHash(231, 11, 6), tuple([1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01010001111(self):
      self.assertEqual(C_RHash(105, 11, 6), tuple([0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00110001111(self):
      self.assertEqual(C_RHash(49, 11, 6), tuple([0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10001001111(self):
      self.assertEqual(C_RHash(216, 11, 6), tuple([1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01001001111(self):
      self.assertEqual(C_RHash(90, 11, 6), tuple([0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00101001111(self):
      self.assertEqual(C_RHash(34, 11, 6), tuple([0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00011001111(self):
      self.assertEqual(C_RHash(13, 11, 6), tuple([0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10000101111(self):
      self.assertEqual(C_RHash(211, 11, 6), tuple([1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01000101111(self):
      self.assertEqual(C_RHash(85, 11, 6), tuple([0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00100101111(self):
      self.assertEqual(C_RHash(29, 11, 6), tuple([0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00010101111(self):
      self.assertEqual(C_RHash(8, 11, 6), tuple([0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00001101111(self):
      self.assertEqual(C_RHash(2, 11, 6), tuple([0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10000011111(self):
      self.assertEqual(C_RHash(210, 11, 6), tuple([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01000011111(self):
      self.assertEqual(C_RHash(84, 11, 6), tuple([0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00100011111(self):
      self.assertEqual(C_RHash(28, 11, 6), tuple([0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00010011111(self):
      self.assertEqual(C_RHash(7, 11, 6), tuple([0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00001011111(self):
      self.assertEqual(C_RHash(1, 11, 6), tuple([0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00000111111(self):
      self.assertEqual(C_RHash(0, 11, 6), tuple([0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1]))

class HashTest_n11_r7(unittest.TestCase):
  def test_C_Hash_range_11111110000(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111101000(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111011000(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110111000(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101111000(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011111000(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111111000(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111111000(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111100100(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111010100(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110110100(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101110100(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011110100(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111110100(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111110100(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111001100(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110101100(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101101100(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011101100(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111101100(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111101100(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110011100(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101011100(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011011100(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111011100(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111011100(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100111100(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010111100(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110111100(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110111100(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001111100(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101111100(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101111100(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011111100(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011111100(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111111100(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111100010(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111010010(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110110010(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101110010(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011110010(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111110010(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111110010(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111001010(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110101010(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101101010(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011101010(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111101010(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111101010(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110011010(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101011010(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011011010(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111011010(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111011010(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100111010(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010111010(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110111010(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110111010(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001111010(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101111010(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101111010(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011111010(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011111010(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111111010(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111000110(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110100110(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101100110(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011100110(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111100110(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111100110(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110010110(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101010110(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011010110(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111010110(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111010110(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100110110(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010110110(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110110110(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110110110(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001110110(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101110110(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101110110(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011110110(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011110110(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111110110(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110001110(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101001110(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011001110(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111001110(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111001110(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100101110(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010101110(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110101110(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110101110(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001101110(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101101110(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101101110(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011101110(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011101110(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111101110(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100011110(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010011110(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110011110(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110011110(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001011110(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101011110(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101011110(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011011110(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011011110(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111011110(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000111110(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100111110(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100111110(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010111110(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010111110(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110111110(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001111110(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001111110(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101111110(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011111110(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111100001(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111010001(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110110001(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101110001(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011110001(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111110001(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111110001(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111001001(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110101001(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101101001(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011101001(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111101001(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111101001(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110011001(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101011001(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011011001(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111011001(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111011001(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100111001(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010111001(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110111001(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110111001(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001111001(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101111001(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101111001(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011111001(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011111001(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111111001(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111000101(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110100101(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101100101(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011100101(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111100101(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111100101(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110010101(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101010101(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011010101(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111010101(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111010101(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100110101(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010110101(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110110101(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110110101(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001110101(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101110101(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101110101(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011110101(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011110101(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111110101(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110001101(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101001101(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011001101(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111001101(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111001101(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100101101(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010101101(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110101101(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110101101(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001101101(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101101101(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101101101(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011101101(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011101101(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111101101(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100011101(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010011101(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110011101(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110011101(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001011101(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101011101(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101011101(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011011101(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011011101(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111011101(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000111101(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100111101(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100111101(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010111101(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010111101(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110111101(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001111101(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001111101(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101111101(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011111101(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111000011(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110100011(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101100011(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011100011(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111100011(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111100011(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110010011(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101010011(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011010011(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111010011(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111010011(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100110011(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010110011(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110110011(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110110011(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001110011(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101110011(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101110011(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011110011(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011110011(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111110011(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110001011(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101001011(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011001011(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111001011(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111001011(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100101011(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010101011(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110101011(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110101011(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001101011(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101101011(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101101011(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011101011(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011101011(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111101011(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100011011(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010011011(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110011011(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110011011(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001011011(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101011011(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101011011(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011011011(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011011011(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111011011(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000111011(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100111011(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100111011(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010111011(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010111011(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110111011(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001111011(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001111011(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101111011(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011111011(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110000111(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101000111(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011000111(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111000111(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111000111(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100100111(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010100111(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110100111(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110100111(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001100111(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101100111(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101100111(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011100111(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011100111(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111100111(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100010111(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010010111(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110010111(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110010111(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001010111(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101010111(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101010111(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011010111(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011010111(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111010111(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000110111(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100110111(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100110111(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010110111(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010110111(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110110111(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001110111(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001110111(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101110111(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011110111(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100001111(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010001111(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110001111(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110001111(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001001111(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101001111(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101001111(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011001111(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011001111(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111001111(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000101111(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100101111(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100101111(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010101111(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010101111(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110101111(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001101111(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001101111(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101101111(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011101111(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000011111(self):
      h = C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100011111(self):
      h = C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100011111(self):
      h = C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010011111(self):
      h = C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010011111(self):
      h = C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110011111(self):
      h = C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001011111(self):
      h = C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001011111(self):
      h = C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101011111(self):
      h = C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011011111(self):
      h = C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10000111111(self):
      h = C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01000111111(self):
      h = C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00100111111(self):
      h = C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00010111111(self):
      h = C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00001111111(self):
      h = C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], 7)
      self.assert_(C(11, 7)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], 7)] = [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0], 7)] = [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], 7)] = [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], 7)] = [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], 7)] = [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], 7)] = [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], 7)] = [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], 7)] = [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0], 7)] = [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], 7)] = [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0], 7)] = [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], 7)] = [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0], 7)] = [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], 7)] = [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], 7)] = [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], 7)] = [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0], 7)] = [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0], 7)] = [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], 7)] = [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], 7)] = [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0], 7)] = [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], 7)] = [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], 7)] = [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], 7)] = [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], 7)] = [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], 7)] = [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], 7)] = [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0], 7)] = [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], 7)] = [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], 7)] = [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0], 7)] = [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], 7)] = [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], 7)] = [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], 7)] = [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0], 7)] = [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], 7)] = [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0], 7)] = [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0], 7)] = [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], 7)] = [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], 7)] = [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], 7)] = [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], 7)] = [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0], 7)] = [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0], 7)] = [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], 7)] = [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], 7)] = [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], 7)] = [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0], 7)] = [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], 7)] = [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], 7)] = [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0], 7)] = [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], 7)] = [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], 7)] = [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], 7)] = [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], 7)] = [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], 7)] = [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], 7)] = [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], 7)] = [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], 7)] = [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], 7)] = [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], 7)] = [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], 7)] = [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], 7)] = [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0], 7)] = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], 7)] = [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0], 7)] = [1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0], 7)] = [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], 7)] = [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0], 7)] = [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], 7)] = [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], 7)] = [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], 7)] = [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], 7)] = [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], 7)] = [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0], 7)] = [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], 7)] = [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], 7)] = [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], 7)] = [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], 7)] = [0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], 7)] = [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], 7)] = [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], 7)] = [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], 7)] = [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], 7)] = [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0], 7)] = [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], 7)] = [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], 7)] = [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0], 7)] = [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], 7)] = [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], 7)] = [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0], 7)] = [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0], 7)] = [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], 7)] = [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], 7)] = [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], 7)] = [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], 7)] = [1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], 7)] = [0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0], 7)] = [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], 7)] = [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0], 7)] = [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], 7)] = [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], 7)] = [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], 7)] = [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0], 7)] = [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], 7)] = [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], 7)] = [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], 7)] = [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], 7)] = [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0], 7)] = [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], 7)] = [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0], 7)] = [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], 7)] = [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], 7)] = [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0], 7)] = [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], 7)] = [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], 7)] = [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], 7)] = [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], 7)] = [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], 7)] = [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0], 7), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0], 7)] = [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1], 7)] = [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], 7)] = [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1], 7)] = [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], 7)] = [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], 7)] = [1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], 7)] = [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], 7)] = [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], 7)] = [1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], 7)] = [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1], 7)] = [1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], 7)] = [1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], 7)] = [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], 7)] = [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], 7)] = [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], 7)] = [1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], 7)] = [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], 7)] = [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1], 7)] = [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], 7)] = [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], 7)] = [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], 7)] = [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], 7)] = [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], 7)] = [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], 7)] = [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1], 7)] = [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], 7)] = [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], 7)] = [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], 7)] = [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1], 7)] = [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1], 7)] = [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], 7)] = [1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], 7)] = [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], 7)] = [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], 7)] = [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], 7)] = [1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], 7)] = [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], 7)] = [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], 7)] = [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], 7)] = [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], 7)] = [1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], 7)] = [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], 7)] = [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], 7)] = [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], 7)] = [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], 7)] = [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], 7)] = [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], 7)] = [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], 7)] = [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], 7)] = [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], 7)] = [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], 7)] = [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], 7)] = [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], 7)] = [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], 7)] = [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], 7)] = [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], 7)] = [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], 7)] = [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], 7)] = [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], 7)] = [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], 7)] = [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], 7)] = [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], 7)] = [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], 7)] = [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], 7)] = [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], 7)] = [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], 7)] = [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], 7)] = [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], 7)] = [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], 7)] = [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], 7)] = [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], 7)] = [0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], 7)] = [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], 7)] = [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], 7)] = [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], 7)] = [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], 7)] = [1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], 7)] = [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], 7)] = [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], 7)] = [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], 7)] = [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], 7)] = [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], 7)] = [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], 7)] = [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], 7), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], 7)] = [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1], 7)] = [1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], 7)] = [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], 7)] = [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], 7)] = [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1], 7)] = [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1], 7)] = [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], 7)] = [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], 7)] = [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], 7)] = [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], 7)] = [1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1], 7)] = [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], 7)] = [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], 7)] = [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], 7)] = [1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], 7)] = [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], 7)] = [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], 7)] = [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], 7)] = [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], 7)] = [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], 7)] = [0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], 7)] = [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], 7)] = [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], 7)] = [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], 7)] = [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], 7)] = [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], 7)] = [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], 7)] = [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], 7)] = [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], 7)] = [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], 7)] = [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], 7)] = [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], 7)] = [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], 7)] = [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], 7)] = [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], 7)] = [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], 7)] = [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], 7)] = [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], 7)] = [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], 7)] = [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], 7)] = [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], 7)] = [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], 7)] = [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], 7)] = [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], 7)] = [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], 7)] = [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], 7)] = [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], 7)] = [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], 7)] = [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], 7)] = [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], 7)] = [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], 7)] = [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], 7)] = [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], 7)] = [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], 7)] = [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], 7)] = [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], 7)] = [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], 7)] = [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], 7)] = [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], 7)] = [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], 7)] = [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], 7)] = [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], 7)] = [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], 7)] = [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], 7)] = [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], 7)] = [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], 7)] = [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], 7)] = [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], 7)] = [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], 7)] = [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], 7)] = [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], 7)] = [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], 7)] = [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], 7)] = [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], 7)] = [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], 7)] = [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], 7)] = [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], 7)] = [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], 7)] = [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], 7)] = [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], 7)] = [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], 7)] = [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], 7)] = [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], 7)] = [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], 7)] = [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], 7)] = [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], 7)] = [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], 7)] = [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], 7)] = [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], 7)] = [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], 7)] = [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], 7)] = [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], 7)] = [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], 7)] = [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], 7)] = [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], 7)] = [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], 7)] = [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], 7)] = [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], 7)] = [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], 7)] = [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], 7)] = [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], 7)] = [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], 7)] = [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], 7)] = [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], 7)] = [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], 7)] = [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], 7)] = [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], 7)] = [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], 7)] = [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], 7)] = [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], 7)] = [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], 7)] = [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], 7)] = [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], 7)] = [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], 7)] = [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], 7)] = [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], 7)] = [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], 7)] = [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], 7)] = [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], 7)] = [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], 7)] = [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], 7)] = [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], 7)] = [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], 7)] = [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], 7)] = [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], 7)] = [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], 7), None) is None)
    d[C_Hash([0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], 7)] = [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 330)

  def test_C_RHash_soundness_11111110000(self):
      self.assertEqual(C_RHash(329, 11, 7), tuple([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]))

  def test_C_RHash_soundness_11111101000(self):
      self.assertEqual(C_RHash(328, 11, 7), tuple([1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11111011000(self):
      self.assertEqual(C_RHash(324, 11, 7), tuple([1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11110111000(self):
      self.assertEqual(C_RHash(314, 11, 7), tuple([1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11101111000(self):
      self.assertEqual(C_RHash(294, 11, 7), tuple([1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11011111000(self):
      self.assertEqual(C_RHash(259, 11, 7), tuple([1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_10111111000(self):
      self.assertEqual(C_RHash(203, 11, 7), tuple([1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_01111111000(self):
      self.assertEqual(C_RHash(119, 11, 7), tuple([0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11111100100(self):
      self.assertEqual(C_RHash(327, 11, 7), tuple([1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11111010100(self):
      self.assertEqual(C_RHash(323, 11, 7), tuple([1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11110110100(self):
      self.assertEqual(C_RHash(313, 11, 7), tuple([1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11101110100(self):
      self.assertEqual(C_RHash(293, 11, 7), tuple([1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11011110100(self):
      self.assertEqual(C_RHash(258, 11, 7), tuple([1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_10111110100(self):
      self.assertEqual(C_RHash(202, 11, 7), tuple([1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_01111110100(self):
      self.assertEqual(C_RHash(118, 11, 7), tuple([0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11111001100(self):
      self.assertEqual(C_RHash(320, 11, 7), tuple([1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11110101100(self):
      self.assertEqual(C_RHash(310, 11, 7), tuple([1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11101101100(self):
      self.assertEqual(C_RHash(290, 11, 7), tuple([1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11011101100(self):
      self.assertEqual(C_RHash(255, 11, 7), tuple([1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10111101100(self):
      self.assertEqual(C_RHash(199, 11, 7), tuple([1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01111101100(self):
      self.assertEqual(C_RHash(115, 11, 7), tuple([0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11110011100(self):
      self.assertEqual(C_RHash(304, 11, 7), tuple([1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11101011100(self):
      self.assertEqual(C_RHash(284, 11, 7), tuple([1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11011011100(self):
      self.assertEqual(C_RHash(249, 11, 7), tuple([1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10111011100(self):
      self.assertEqual(C_RHash(193, 11, 7), tuple([1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01111011100(self):
      self.assertEqual(C_RHash(109, 11, 7), tuple([0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11100111100(self):
      self.assertEqual(C_RHash(274, 11, 7), tuple([1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11010111100(self):
      self.assertEqual(C_RHash(239, 11, 7), tuple([1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10110111100(self):
      self.assertEqual(C_RHash(183, 11, 7), tuple([1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01110111100(self):
      self.assertEqual(C_RHash(99, 11, 7), tuple([0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11001111100(self):
      self.assertEqual(C_RHash(224, 11, 7), tuple([1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10101111100(self):
      self.assertEqual(C_RHash(168, 11, 7), tuple([1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01101111100(self):
      self.assertEqual(C_RHash(84, 11, 7), tuple([0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10011111100(self):
      self.assertEqual(C_RHash(147, 11, 7), tuple([1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01011111100(self):
      self.assertEqual(C_RHash(63, 11, 7), tuple([0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_00111111100(self):
      self.assertEqual(C_RHash(35, 11, 7), tuple([0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11111100010(self):
      self.assertEqual(C_RHash(326, 11, 7), tuple([1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11111010010(self):
      self.assertEqual(C_RHash(322, 11, 7), tuple([1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11110110010(self):
      self.assertEqual(C_RHash(312, 11, 7), tuple([1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11101110010(self):
      self.assertEqual(C_RHash(292, 11, 7), tuple([1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11011110010(self):
      self.assertEqual(C_RHash(257, 11, 7), tuple([1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_10111110010(self):
      self.assertEqual(C_RHash(201, 11, 7), tuple([1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_01111110010(self):
      self.assertEqual(C_RHash(117, 11, 7), tuple([0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11111001010(self):
      self.assertEqual(C_RHash(319, 11, 7), tuple([1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11110101010(self):
      self.assertEqual(C_RHash(309, 11, 7), tuple([1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11101101010(self):
      self.assertEqual(C_RHash(289, 11, 7), tuple([1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11011101010(self):
      self.assertEqual(C_RHash(254, 11, 7), tuple([1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10111101010(self):
      self.assertEqual(C_RHash(198, 11, 7), tuple([1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01111101010(self):
      self.assertEqual(C_RHash(114, 11, 7), tuple([0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11110011010(self):
      self.assertEqual(C_RHash(303, 11, 7), tuple([1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11101011010(self):
      self.assertEqual(C_RHash(283, 11, 7), tuple([1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11011011010(self):
      self.assertEqual(C_RHash(248, 11, 7), tuple([1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10111011010(self):
      self.assertEqual(C_RHash(192, 11, 7), tuple([1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01111011010(self):
      self.assertEqual(C_RHash(108, 11, 7), tuple([0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11100111010(self):
      self.assertEqual(C_RHash(273, 11, 7), tuple([1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11010111010(self):
      self.assertEqual(C_RHash(238, 11, 7), tuple([1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10110111010(self):
      self.assertEqual(C_RHash(182, 11, 7), tuple([1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01110111010(self):
      self.assertEqual(C_RHash(98, 11, 7), tuple([0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11001111010(self):
      self.assertEqual(C_RHash(223, 11, 7), tuple([1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10101111010(self):
      self.assertEqual(C_RHash(167, 11, 7), tuple([1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01101111010(self):
      self.assertEqual(C_RHash(83, 11, 7), tuple([0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10011111010(self):
      self.assertEqual(C_RHash(146, 11, 7), tuple([1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01011111010(self):
      self.assertEqual(C_RHash(62, 11, 7), tuple([0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_00111111010(self):
      self.assertEqual(C_RHash(34, 11, 7), tuple([0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11111000110(self):
      self.assertEqual(C_RHash(317, 11, 7), tuple([1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11110100110(self):
      self.assertEqual(C_RHash(307, 11, 7), tuple([1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11101100110(self):
      self.assertEqual(C_RHash(287, 11, 7), tuple([1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11011100110(self):
      self.assertEqual(C_RHash(252, 11, 7), tuple([1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10111100110(self):
      self.assertEqual(C_RHash(196, 11, 7), tuple([1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01111100110(self):
      self.assertEqual(C_RHash(112, 11, 7), tuple([0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11110010110(self):
      self.assertEqual(C_RHash(301, 11, 7), tuple([1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11101010110(self):
      self.assertEqual(C_RHash(281, 11, 7), tuple([1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11011010110(self):
      self.assertEqual(C_RHash(246, 11, 7), tuple([1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10111010110(self):
      self.assertEqual(C_RHash(190, 11, 7), tuple([1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01111010110(self):
      self.assertEqual(C_RHash(106, 11, 7), tuple([0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11100110110(self):
      self.assertEqual(C_RHash(271, 11, 7), tuple([1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11010110110(self):
      self.assertEqual(C_RHash(236, 11, 7), tuple([1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10110110110(self):
      self.assertEqual(C_RHash(180, 11, 7), tuple([1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01110110110(self):
      self.assertEqual(C_RHash(96, 11, 7), tuple([0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11001110110(self):
      self.assertEqual(C_RHash(221, 11, 7), tuple([1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10101110110(self):
      self.assertEqual(C_RHash(165, 11, 7), tuple([1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01101110110(self):
      self.assertEqual(C_RHash(81, 11, 7), tuple([0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10011110110(self):
      self.assertEqual(C_RHash(144, 11, 7), tuple([1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01011110110(self):
      self.assertEqual(C_RHash(60, 11, 7), tuple([0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_00111110110(self):
      self.assertEqual(C_RHash(32, 11, 7), tuple([0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11110001110(self):
      self.assertEqual(C_RHash(298, 11, 7), tuple([1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11101001110(self):
      self.assertEqual(C_RHash(278, 11, 7), tuple([1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11011001110(self):
      self.assertEqual(C_RHash(243, 11, 7), tuple([1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10111001110(self):
      self.assertEqual(C_RHash(187, 11, 7), tuple([1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01111001110(self):
      self.assertEqual(C_RHash(103, 11, 7), tuple([0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11100101110(self):
      self.assertEqual(C_RHash(268, 11, 7), tuple([1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11010101110(self):
      self.assertEqual(C_RHash(233, 11, 7), tuple([1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10110101110(self):
      self.assertEqual(C_RHash(177, 11, 7), tuple([1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01110101110(self):
      self.assertEqual(C_RHash(93, 11, 7), tuple([0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11001101110(self):
      self.assertEqual(C_RHash(218, 11, 7), tuple([1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10101101110(self):
      self.assertEqual(C_RHash(162, 11, 7), tuple([1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01101101110(self):
      self.assertEqual(C_RHash(78, 11, 7), tuple([0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10011101110(self):
      self.assertEqual(C_RHash(141, 11, 7), tuple([1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01011101110(self):
      self.assertEqual(C_RHash(57, 11, 7), tuple([0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00111101110(self):
      self.assertEqual(C_RHash(29, 11, 7), tuple([0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11100011110(self):
      self.assertEqual(C_RHash(264, 11, 7), tuple([1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11010011110(self):
      self.assertEqual(C_RHash(229, 11, 7), tuple([1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10110011110(self):
      self.assertEqual(C_RHash(173, 11, 7), tuple([1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01110011110(self):
      self.assertEqual(C_RHash(89, 11, 7), tuple([0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11001011110(self):
      self.assertEqual(C_RHash(214, 11, 7), tuple([1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10101011110(self):
      self.assertEqual(C_RHash(158, 11, 7), tuple([1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01101011110(self):
      self.assertEqual(C_RHash(74, 11, 7), tuple([0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10011011110(self):
      self.assertEqual(C_RHash(137, 11, 7), tuple([1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01011011110(self):
      self.assertEqual(C_RHash(53, 11, 7), tuple([0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00111011110(self):
      self.assertEqual(C_RHash(25, 11, 7), tuple([0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11000111110(self):
      self.assertEqual(C_RHash(209, 11, 7), tuple([1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10100111110(self):
      self.assertEqual(C_RHash(153, 11, 7), tuple([1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01100111110(self):
      self.assertEqual(C_RHash(69, 11, 7), tuple([0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10010111110(self):
      self.assertEqual(C_RHash(132, 11, 7), tuple([1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01010111110(self):
      self.assertEqual(C_RHash(48, 11, 7), tuple([0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00110111110(self):
      self.assertEqual(C_RHash(20, 11, 7), tuple([0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10001111110(self):
      self.assertEqual(C_RHash(126, 11, 7), tuple([1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01001111110(self):
      self.assertEqual(C_RHash(42, 11, 7), tuple([0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00101111110(self):
      self.assertEqual(C_RHash(14, 11, 7), tuple([0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00011111110(self):
      self.assertEqual(C_RHash(7, 11, 7), tuple([0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11111100001(self):
      self.assertEqual(C_RHash(325, 11, 7), tuple([1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11111010001(self):
      self.assertEqual(C_RHash(321, 11, 7), tuple([1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11110110001(self):
      self.assertEqual(C_RHash(311, 11, 7), tuple([1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11101110001(self):
      self.assertEqual(C_RHash(291, 11, 7), tuple([1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11011110001(self):
      self.assertEqual(C_RHash(256, 11, 7), tuple([1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_10111110001(self):
      self.assertEqual(C_RHash(200, 11, 7), tuple([1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_01111110001(self):
      self.assertEqual(C_RHash(116, 11, 7), tuple([0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11111001001(self):
      self.assertEqual(C_RHash(318, 11, 7), tuple([1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11110101001(self):
      self.assertEqual(C_RHash(308, 11, 7), tuple([1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11101101001(self):
      self.assertEqual(C_RHash(288, 11, 7), tuple([1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11011101001(self):
      self.assertEqual(C_RHash(253, 11, 7), tuple([1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10111101001(self):
      self.assertEqual(C_RHash(197, 11, 7), tuple([1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01111101001(self):
      self.assertEqual(C_RHash(113, 11, 7), tuple([0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11110011001(self):
      self.assertEqual(C_RHash(302, 11, 7), tuple([1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11101011001(self):
      self.assertEqual(C_RHash(282, 11, 7), tuple([1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11011011001(self):
      self.assertEqual(C_RHash(247, 11, 7), tuple([1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10111011001(self):
      self.assertEqual(C_RHash(191, 11, 7), tuple([1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01111011001(self):
      self.assertEqual(C_RHash(107, 11, 7), tuple([0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11100111001(self):
      self.assertEqual(C_RHash(272, 11, 7), tuple([1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11010111001(self):
      self.assertEqual(C_RHash(237, 11, 7), tuple([1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10110111001(self):
      self.assertEqual(C_RHash(181, 11, 7), tuple([1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01110111001(self):
      self.assertEqual(C_RHash(97, 11, 7), tuple([0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11001111001(self):
      self.assertEqual(C_RHash(222, 11, 7), tuple([1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10101111001(self):
      self.assertEqual(C_RHash(166, 11, 7), tuple([1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01101111001(self):
      self.assertEqual(C_RHash(82, 11, 7), tuple([0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10011111001(self):
      self.assertEqual(C_RHash(145, 11, 7), tuple([1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01011111001(self):
      self.assertEqual(C_RHash(61, 11, 7), tuple([0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_00111111001(self):
      self.assertEqual(C_RHash(33, 11, 7), tuple([0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11111000101(self):
      self.assertEqual(C_RHash(316, 11, 7), tuple([1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11110100101(self):
      self.assertEqual(C_RHash(306, 11, 7), tuple([1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11101100101(self):
      self.assertEqual(C_RHash(286, 11, 7), tuple([1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11011100101(self):
      self.assertEqual(C_RHash(251, 11, 7), tuple([1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10111100101(self):
      self.assertEqual(C_RHash(195, 11, 7), tuple([1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01111100101(self):
      self.assertEqual(C_RHash(111, 11, 7), tuple([0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11110010101(self):
      self.assertEqual(C_RHash(300, 11, 7), tuple([1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11101010101(self):
      self.assertEqual(C_RHash(280, 11, 7), tuple([1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11011010101(self):
      self.assertEqual(C_RHash(245, 11, 7), tuple([1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10111010101(self):
      self.assertEqual(C_RHash(189, 11, 7), tuple([1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01111010101(self):
      self.assertEqual(C_RHash(105, 11, 7), tuple([0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11100110101(self):
      self.assertEqual(C_RHash(270, 11, 7), tuple([1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11010110101(self):
      self.assertEqual(C_RHash(235, 11, 7), tuple([1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10110110101(self):
      self.assertEqual(C_RHash(179, 11, 7), tuple([1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01110110101(self):
      self.assertEqual(C_RHash(95, 11, 7), tuple([0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11001110101(self):
      self.assertEqual(C_RHash(220, 11, 7), tuple([1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10101110101(self):
      self.assertEqual(C_RHash(164, 11, 7), tuple([1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01101110101(self):
      self.assertEqual(C_RHash(80, 11, 7), tuple([0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10011110101(self):
      self.assertEqual(C_RHash(143, 11, 7), tuple([1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01011110101(self):
      self.assertEqual(C_RHash(59, 11, 7), tuple([0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_00111110101(self):
      self.assertEqual(C_RHash(31, 11, 7), tuple([0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11110001101(self):
      self.assertEqual(C_RHash(297, 11, 7), tuple([1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11101001101(self):
      self.assertEqual(C_RHash(277, 11, 7), tuple([1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11011001101(self):
      self.assertEqual(C_RHash(242, 11, 7), tuple([1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10111001101(self):
      self.assertEqual(C_RHash(186, 11, 7), tuple([1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01111001101(self):
      self.assertEqual(C_RHash(102, 11, 7), tuple([0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11100101101(self):
      self.assertEqual(C_RHash(267, 11, 7), tuple([1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11010101101(self):
      self.assertEqual(C_RHash(232, 11, 7), tuple([1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10110101101(self):
      self.assertEqual(C_RHash(176, 11, 7), tuple([1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01110101101(self):
      self.assertEqual(C_RHash(92, 11, 7), tuple([0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11001101101(self):
      self.assertEqual(C_RHash(217, 11, 7), tuple([1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10101101101(self):
      self.assertEqual(C_RHash(161, 11, 7), tuple([1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01101101101(self):
      self.assertEqual(C_RHash(77, 11, 7), tuple([0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10011101101(self):
      self.assertEqual(C_RHash(140, 11, 7), tuple([1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01011101101(self):
      self.assertEqual(C_RHash(56, 11, 7), tuple([0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00111101101(self):
      self.assertEqual(C_RHash(28, 11, 7), tuple([0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11100011101(self):
      self.assertEqual(C_RHash(263, 11, 7), tuple([1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11010011101(self):
      self.assertEqual(C_RHash(228, 11, 7), tuple([1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10110011101(self):
      self.assertEqual(C_RHash(172, 11, 7), tuple([1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01110011101(self):
      self.assertEqual(C_RHash(88, 11, 7), tuple([0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11001011101(self):
      self.assertEqual(C_RHash(213, 11, 7), tuple([1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10101011101(self):
      self.assertEqual(C_RHash(157, 11, 7), tuple([1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01101011101(self):
      self.assertEqual(C_RHash(73, 11, 7), tuple([0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10011011101(self):
      self.assertEqual(C_RHash(136, 11, 7), tuple([1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01011011101(self):
      self.assertEqual(C_RHash(52, 11, 7), tuple([0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00111011101(self):
      self.assertEqual(C_RHash(24, 11, 7), tuple([0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11000111101(self):
      self.assertEqual(C_RHash(208, 11, 7), tuple([1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10100111101(self):
      self.assertEqual(C_RHash(152, 11, 7), tuple([1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01100111101(self):
      self.assertEqual(C_RHash(68, 11, 7), tuple([0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10010111101(self):
      self.assertEqual(C_RHash(131, 11, 7), tuple([1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01010111101(self):
      self.assertEqual(C_RHash(47, 11, 7), tuple([0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00110111101(self):
      self.assertEqual(C_RHash(19, 11, 7), tuple([0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10001111101(self):
      self.assertEqual(C_RHash(125, 11, 7), tuple([1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01001111101(self):
      self.assertEqual(C_RHash(41, 11, 7), tuple([0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00101111101(self):
      self.assertEqual(C_RHash(13, 11, 7), tuple([0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00011111101(self):
      self.assertEqual(C_RHash(6, 11, 7), tuple([0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11111000011(self):
      self.assertEqual(C_RHash(315, 11, 7), tuple([1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11110100011(self):
      self.assertEqual(C_RHash(305, 11, 7), tuple([1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11101100011(self):
      self.assertEqual(C_RHash(285, 11, 7), tuple([1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11011100011(self):
      self.assertEqual(C_RHash(250, 11, 7), tuple([1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10111100011(self):
      self.assertEqual(C_RHash(194, 11, 7), tuple([1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01111100011(self):
      self.assertEqual(C_RHash(110, 11, 7), tuple([0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11110010011(self):
      self.assertEqual(C_RHash(299, 11, 7), tuple([1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11101010011(self):
      self.assertEqual(C_RHash(279, 11, 7), tuple([1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11011010011(self):
      self.assertEqual(C_RHash(244, 11, 7), tuple([1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10111010011(self):
      self.assertEqual(C_RHash(188, 11, 7), tuple([1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01111010011(self):
      self.assertEqual(C_RHash(104, 11, 7), tuple([0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11100110011(self):
      self.assertEqual(C_RHash(269, 11, 7), tuple([1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11010110011(self):
      self.assertEqual(C_RHash(234, 11, 7), tuple([1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10110110011(self):
      self.assertEqual(C_RHash(178, 11, 7), tuple([1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01110110011(self):
      self.assertEqual(C_RHash(94, 11, 7), tuple([0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11001110011(self):
      self.assertEqual(C_RHash(219, 11, 7), tuple([1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10101110011(self):
      self.assertEqual(C_RHash(163, 11, 7), tuple([1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01101110011(self):
      self.assertEqual(C_RHash(79, 11, 7), tuple([0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10011110011(self):
      self.assertEqual(C_RHash(142, 11, 7), tuple([1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01011110011(self):
      self.assertEqual(C_RHash(58, 11, 7), tuple([0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_00111110011(self):
      self.assertEqual(C_RHash(30, 11, 7), tuple([0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11110001011(self):
      self.assertEqual(C_RHash(296, 11, 7), tuple([1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11101001011(self):
      self.assertEqual(C_RHash(276, 11, 7), tuple([1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11011001011(self):
      self.assertEqual(C_RHash(241, 11, 7), tuple([1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10111001011(self):
      self.assertEqual(C_RHash(185, 11, 7), tuple([1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01111001011(self):
      self.assertEqual(C_RHash(101, 11, 7), tuple([0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11100101011(self):
      self.assertEqual(C_RHash(266, 11, 7), tuple([1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11010101011(self):
      self.assertEqual(C_RHash(231, 11, 7), tuple([1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10110101011(self):
      self.assertEqual(C_RHash(175, 11, 7), tuple([1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01110101011(self):
      self.assertEqual(C_RHash(91, 11, 7), tuple([0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11001101011(self):
      self.assertEqual(C_RHash(216, 11, 7), tuple([1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10101101011(self):
      self.assertEqual(C_RHash(160, 11, 7), tuple([1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01101101011(self):
      self.assertEqual(C_RHash(76, 11, 7), tuple([0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10011101011(self):
      self.assertEqual(C_RHash(139, 11, 7), tuple([1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01011101011(self):
      self.assertEqual(C_RHash(55, 11, 7), tuple([0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00111101011(self):
      self.assertEqual(C_RHash(27, 11, 7), tuple([0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11100011011(self):
      self.assertEqual(C_RHash(262, 11, 7), tuple([1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11010011011(self):
      self.assertEqual(C_RHash(227, 11, 7), tuple([1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10110011011(self):
      self.assertEqual(C_RHash(171, 11, 7), tuple([1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01110011011(self):
      self.assertEqual(C_RHash(87, 11, 7), tuple([0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11001011011(self):
      self.assertEqual(C_RHash(212, 11, 7), tuple([1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10101011011(self):
      self.assertEqual(C_RHash(156, 11, 7), tuple([1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01101011011(self):
      self.assertEqual(C_RHash(72, 11, 7), tuple([0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10011011011(self):
      self.assertEqual(C_RHash(135, 11, 7), tuple([1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01011011011(self):
      self.assertEqual(C_RHash(51, 11, 7), tuple([0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00111011011(self):
      self.assertEqual(C_RHash(23, 11, 7), tuple([0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11000111011(self):
      self.assertEqual(C_RHash(207, 11, 7), tuple([1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10100111011(self):
      self.assertEqual(C_RHash(151, 11, 7), tuple([1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01100111011(self):
      self.assertEqual(C_RHash(67, 11, 7), tuple([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10010111011(self):
      self.assertEqual(C_RHash(130, 11, 7), tuple([1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01010111011(self):
      self.assertEqual(C_RHash(46, 11, 7), tuple([0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00110111011(self):
      self.assertEqual(C_RHash(18, 11, 7), tuple([0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10001111011(self):
      self.assertEqual(C_RHash(124, 11, 7), tuple([1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01001111011(self):
      self.assertEqual(C_RHash(40, 11, 7), tuple([0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00101111011(self):
      self.assertEqual(C_RHash(12, 11, 7), tuple([0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00011111011(self):
      self.assertEqual(C_RHash(5, 11, 7), tuple([0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11110000111(self):
      self.assertEqual(C_RHash(295, 11, 7), tuple([1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11101000111(self):
      self.assertEqual(C_RHash(275, 11, 7), tuple([1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11011000111(self):
      self.assertEqual(C_RHash(240, 11, 7), tuple([1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10111000111(self):
      self.assertEqual(C_RHash(184, 11, 7), tuple([1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01111000111(self):
      self.assertEqual(C_RHash(100, 11, 7), tuple([0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11100100111(self):
      self.assertEqual(C_RHash(265, 11, 7), tuple([1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11010100111(self):
      self.assertEqual(C_RHash(230, 11, 7), tuple([1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10110100111(self):
      self.assertEqual(C_RHash(174, 11, 7), tuple([1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01110100111(self):
      self.assertEqual(C_RHash(90, 11, 7), tuple([0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11001100111(self):
      self.assertEqual(C_RHash(215, 11, 7), tuple([1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10101100111(self):
      self.assertEqual(C_RHash(159, 11, 7), tuple([1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01101100111(self):
      self.assertEqual(C_RHash(75, 11, 7), tuple([0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10011100111(self):
      self.assertEqual(C_RHash(138, 11, 7), tuple([1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01011100111(self):
      self.assertEqual(C_RHash(54, 11, 7), tuple([0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00111100111(self):
      self.assertEqual(C_RHash(26, 11, 7), tuple([0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11100010111(self):
      self.assertEqual(C_RHash(261, 11, 7), tuple([1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11010010111(self):
      self.assertEqual(C_RHash(226, 11, 7), tuple([1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10110010111(self):
      self.assertEqual(C_RHash(170, 11, 7), tuple([1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01110010111(self):
      self.assertEqual(C_RHash(86, 11, 7), tuple([0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11001010111(self):
      self.assertEqual(C_RHash(211, 11, 7), tuple([1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10101010111(self):
      self.assertEqual(C_RHash(155, 11, 7), tuple([1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01101010111(self):
      self.assertEqual(C_RHash(71, 11, 7), tuple([0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10011010111(self):
      self.assertEqual(C_RHash(134, 11, 7), tuple([1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01011010111(self):
      self.assertEqual(C_RHash(50, 11, 7), tuple([0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00111010111(self):
      self.assertEqual(C_RHash(22, 11, 7), tuple([0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11000110111(self):
      self.assertEqual(C_RHash(206, 11, 7), tuple([1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10100110111(self):
      self.assertEqual(C_RHash(150, 11, 7), tuple([1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01100110111(self):
      self.assertEqual(C_RHash(66, 11, 7), tuple([0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10010110111(self):
      self.assertEqual(C_RHash(129, 11, 7), tuple([1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01010110111(self):
      self.assertEqual(C_RHash(45, 11, 7), tuple([0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00110110111(self):
      self.assertEqual(C_RHash(17, 11, 7), tuple([0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10001110111(self):
      self.assertEqual(C_RHash(123, 11, 7), tuple([1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01001110111(self):
      self.assertEqual(C_RHash(39, 11, 7), tuple([0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00101110111(self):
      self.assertEqual(C_RHash(11, 11, 7), tuple([0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00011110111(self):
      self.assertEqual(C_RHash(4, 11, 7), tuple([0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11100001111(self):
      self.assertEqual(C_RHash(260, 11, 7), tuple([1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11010001111(self):
      self.assertEqual(C_RHash(225, 11, 7), tuple([1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10110001111(self):
      self.assertEqual(C_RHash(169, 11, 7), tuple([1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01110001111(self):
      self.assertEqual(C_RHash(85, 11, 7), tuple([0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11001001111(self):
      self.assertEqual(C_RHash(210, 11, 7), tuple([1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10101001111(self):
      self.assertEqual(C_RHash(154, 11, 7), tuple([1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01101001111(self):
      self.assertEqual(C_RHash(70, 11, 7), tuple([0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10011001111(self):
      self.assertEqual(C_RHash(133, 11, 7), tuple([1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01011001111(self):
      self.assertEqual(C_RHash(49, 11, 7), tuple([0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00111001111(self):
      self.assertEqual(C_RHash(21, 11, 7), tuple([0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11000101111(self):
      self.assertEqual(C_RHash(205, 11, 7), tuple([1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10100101111(self):
      self.assertEqual(C_RHash(149, 11, 7), tuple([1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01100101111(self):
      self.assertEqual(C_RHash(65, 11, 7), tuple([0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10010101111(self):
      self.assertEqual(C_RHash(128, 11, 7), tuple([1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01010101111(self):
      self.assertEqual(C_RHash(44, 11, 7), tuple([0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00110101111(self):
      self.assertEqual(C_RHash(16, 11, 7), tuple([0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10001101111(self):
      self.assertEqual(C_RHash(122, 11, 7), tuple([1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01001101111(self):
      self.assertEqual(C_RHash(38, 11, 7), tuple([0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00101101111(self):
      self.assertEqual(C_RHash(10, 11, 7), tuple([0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00011101111(self):
      self.assertEqual(C_RHash(3, 11, 7), tuple([0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11000011111(self):
      self.assertEqual(C_RHash(204, 11, 7), tuple([1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10100011111(self):
      self.assertEqual(C_RHash(148, 11, 7), tuple([1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01100011111(self):
      self.assertEqual(C_RHash(64, 11, 7), tuple([0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10010011111(self):
      self.assertEqual(C_RHash(127, 11, 7), tuple([1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01010011111(self):
      self.assertEqual(C_RHash(43, 11, 7), tuple([0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00110011111(self):
      self.assertEqual(C_RHash(15, 11, 7), tuple([0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10001011111(self):
      self.assertEqual(C_RHash(121, 11, 7), tuple([1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01001011111(self):
      self.assertEqual(C_RHash(37, 11, 7), tuple([0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00101011111(self):
      self.assertEqual(C_RHash(9, 11, 7), tuple([0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00011011111(self):
      self.assertEqual(C_RHash(2, 11, 7), tuple([0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10000111111(self):
      self.assertEqual(C_RHash(120, 11, 7), tuple([1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01000111111(self):
      self.assertEqual(C_RHash(36, 11, 7), tuple([0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00100111111(self):
      self.assertEqual(C_RHash(8, 11, 7), tuple([0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00010111111(self):
      self.assertEqual(C_RHash(1, 11, 7), tuple([0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00001111111(self):
      self.assertEqual(C_RHash(0, 11, 7), tuple([0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1]))

class HashTest_n11_r8(unittest.TestCase):
  def test_C_Hash_range_11111111000(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111110100(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111101100(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111011100(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110111100(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101111100(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011111100(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111111100(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111111100(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111110010(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111101010(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111011010(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110111010(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101111010(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011111010(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111111010(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111111010(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111100110(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111010110(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110110110(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101110110(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011110110(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111110110(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111110110(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111001110(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110101110(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101101110(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011101110(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111101110(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111101110(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110011110(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101011110(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011011110(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111011110(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111011110(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100111110(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010111110(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110111110(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110111110(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001111110(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101111110(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101111110(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011111110(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011111110(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111111110(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111110001(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111101001(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111011001(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110111001(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101111001(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011111001(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111111001(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111111001(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111100101(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111010101(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110110101(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101110101(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011110101(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111110101(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111110101(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111001101(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110101101(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101101101(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011101101(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111101101(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111101101(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110011101(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101011101(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011011101(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111011101(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111011101(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100111101(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010111101(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110111101(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110111101(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001111101(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101111101(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101111101(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011111101(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011111101(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111111101(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111100011(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111010011(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110110011(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101110011(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011110011(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111110011(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111110011(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111001011(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110101011(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101101011(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011101011(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111101011(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111101011(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110011011(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101011011(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011011011(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111011011(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111011011(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100111011(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010111011(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110111011(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110111011(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001111011(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101111011(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101111011(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011111011(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011111011(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111111011(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111000111(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110100111(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101100111(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011100111(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111100111(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111100111(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110010111(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101010111(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011010111(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111010111(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111010111(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100110111(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010110111(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110110111(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110110111(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001110111(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101110111(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101110111(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011110111(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011110111(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111110111(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110001111(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101001111(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011001111(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111001111(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111001111(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100101111(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010101111(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110101111(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110101111(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001101111(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101101111(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101101111(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011101111(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011101111(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111101111(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100011111(self):
      h = C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010011111(self):
      h = C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110011111(self):
      h = C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110011111(self):
      h = C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001011111(self):
      h = C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101011111(self):
      h = C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101011111(self):
      h = C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011011111(self):
      h = C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011011111(self):
      h = C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111011111(self):
      h = C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11000111111(self):
      h = C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10100111111(self):
      h = C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01100111111(self):
      h = C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10010111111(self):
      h = C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01010111111(self):
      h = C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00110111111(self):
      h = C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10001111111(self):
      h = C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01001111111(self):
      h = C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00101111111(self):
      h = C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00011111111(self):
      h = C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], 8)
      self.assert_(C(11, 8)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], 8)] = [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], 8)] = [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0], 8)] = [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], 8)] = [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], 8)] = [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], 8)] = [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0], 8)] = [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], 8)] = [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], 8)] = [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0], 8)] = [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], 8)] = [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], 8)] = [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], 8)] = [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], 8)] = [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], 8)] = [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0], 8)] = [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], 8)] = [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], 8)] = [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0], 8)] = [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], 8)] = [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0], 8)] = [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], 8)] = [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0], 8)] = [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0], 8)] = [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0], 8)] = [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], 8)] = [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0], 8)] = [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], 8)] = [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0], 8)] = [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], 8)] = [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0], 8)] = [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], 8)] = [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0], 8)] = [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], 8)] = [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0], 8)] = [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0], 8)] = [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], 8)] = [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], 8)] = [1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], 8)] = [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], 8)] = [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], 8)] = [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0], 8)] = [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0], 8)] = [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], 8)] = [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0], 8), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0], 8)] = [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1], 8)] = [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], 8)] = [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1], 8)] = [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], 8)] = [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1], 8)] = [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1], 8)] = [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], 8)] = [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], 8)] = [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], 8)] = [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], 8)] = [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], 8)] = [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], 8)] = [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], 8)] = [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], 8)] = [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], 8)] = [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], 8)] = [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], 8)] = [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], 8)] = [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], 8)] = [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], 8)] = [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], 8)] = [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], 8)] = [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], 8)] = [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], 8)] = [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], 8)] = [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], 8)] = [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], 8)] = [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], 8)] = [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], 8)] = [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], 8)] = [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], 8)] = [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], 8)] = [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1], 8)] = [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], 8)] = [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], 8)] = [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], 8), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], 8)] = [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1], 8)] = [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1], 8)] = [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], 8)] = [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], 8)] = [1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], 8)] = [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], 8)] = [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], 8)] = [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], 8)] = [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], 8)] = [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], 8)] = [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], 8)] = [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], 8)] = [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], 8)] = [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], 8)] = [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], 8)] = [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], 8)] = [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], 8)] = [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], 8)] = [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], 8)] = [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], 8)] = [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], 8)] = [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], 8)] = [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], 8)] = [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], 8)] = [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], 8)] = [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], 8)] = [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], 8)] = [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], 8), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], 8)] = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], 8)] = [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], 8)] = [1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], 8)] = [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], 8)] = [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], 8)] = [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], 8)] = [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], 8)] = [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], 8)] = [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], 8)] = [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], 8)] = [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], 8)] = [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], 8)] = [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], 8)] = [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], 8)] = [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], 8)] = [0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], 8)] = [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], 8)] = [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], 8)] = [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], 8)] = [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], 8)] = [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], 8)] = [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], 8)] = [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], 8)] = [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], 8)] = [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], 8)] = [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], 8)] = [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], 8)] = [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], 8)] = [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], 8)] = [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], 8)] = [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], 8)] = [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], 8)] = [1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], 8)] = [0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], 8)] = [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], 8)] = [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], 8)] = [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], 8)] = [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], 8)] = [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], 8)] = [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], 8)] = [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], 8)] = [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], 8)] = [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], 8)] = [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], 8)] = [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], 8)] = [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], 8)] = [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], 8)] = [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], 8)] = [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], 8)] = [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], 8)] = [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], 8)] = [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], 8)] = [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], 8)] = [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], 8)] = [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], 8)] = [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], 8), None) is None)
    d[C_Hash([0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], 8)] = [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 165)

  def test_C_RHash_soundness_11111111000(self):
      self.assertEqual(C_RHash(164, 11, 8), tuple([1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]))

  def test_C_RHash_soundness_11111110100(self):
      self.assertEqual(C_RHash(163, 11, 8), tuple([1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0]))

  def test_C_RHash_soundness_11111101100(self):
      self.assertEqual(C_RHash(160, 11, 8), tuple([1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11111011100(self):
      self.assertEqual(C_RHash(154, 11, 8), tuple([1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11110111100(self):
      self.assertEqual(C_RHash(144, 11, 8), tuple([1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11101111100(self):
      self.assertEqual(C_RHash(129, 11, 8), tuple([1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11011111100(self):
      self.assertEqual(C_RHash(108, 11, 8), tuple([1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_10111111100(self):
      self.assertEqual(C_RHash(80, 11, 8), tuple([1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_01111111100(self):
      self.assertEqual(C_RHash(44, 11, 8), tuple([0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11111110010(self):
      self.assertEqual(C_RHash(162, 11, 8), tuple([1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0]))

  def test_C_RHash_soundness_11111101010(self):
      self.assertEqual(C_RHash(159, 11, 8), tuple([1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11111011010(self):
      self.assertEqual(C_RHash(153, 11, 8), tuple([1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11110111010(self):
      self.assertEqual(C_RHash(143, 11, 8), tuple([1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11101111010(self):
      self.assertEqual(C_RHash(128, 11, 8), tuple([1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11011111010(self):
      self.assertEqual(C_RHash(107, 11, 8), tuple([1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_10111111010(self):
      self.assertEqual(C_RHash(79, 11, 8), tuple([1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_01111111010(self):
      self.assertEqual(C_RHash(43, 11, 8), tuple([0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11111100110(self):
      self.assertEqual(C_RHash(157, 11, 8), tuple([1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11111010110(self):
      self.assertEqual(C_RHash(151, 11, 8), tuple([1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11110110110(self):
      self.assertEqual(C_RHash(141, 11, 8), tuple([1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11101110110(self):
      self.assertEqual(C_RHash(126, 11, 8), tuple([1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11011110110(self):
      self.assertEqual(C_RHash(105, 11, 8), tuple([1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_10111110110(self):
      self.assertEqual(C_RHash(77, 11, 8), tuple([1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_01111110110(self):
      self.assertEqual(C_RHash(41, 11, 8), tuple([0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11111001110(self):
      self.assertEqual(C_RHash(148, 11, 8), tuple([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11110101110(self):
      self.assertEqual(C_RHash(138, 11, 8), tuple([1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11101101110(self):
      self.assertEqual(C_RHash(123, 11, 8), tuple([1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11011101110(self):
      self.assertEqual(C_RHash(102, 11, 8), tuple([1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10111101110(self):
      self.assertEqual(C_RHash(74, 11, 8), tuple([1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01111101110(self):
      self.assertEqual(C_RHash(38, 11, 8), tuple([0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11110011110(self):
      self.assertEqual(C_RHash(134, 11, 8), tuple([1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11101011110(self):
      self.assertEqual(C_RHash(119, 11, 8), tuple([1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11011011110(self):
      self.assertEqual(C_RHash(98, 11, 8), tuple([1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10111011110(self):
      self.assertEqual(C_RHash(70, 11, 8), tuple([1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01111011110(self):
      self.assertEqual(C_RHash(34, 11, 8), tuple([0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11100111110(self):
      self.assertEqual(C_RHash(114, 11, 8), tuple([1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11010111110(self):
      self.assertEqual(C_RHash(93, 11, 8), tuple([1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10110111110(self):
      self.assertEqual(C_RHash(65, 11, 8), tuple([1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01110111110(self):
      self.assertEqual(C_RHash(29, 11, 8), tuple([0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11001111110(self):
      self.assertEqual(C_RHash(87, 11, 8), tuple([1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10101111110(self):
      self.assertEqual(C_RHash(59, 11, 8), tuple([1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01101111110(self):
      self.assertEqual(C_RHash(23, 11, 8), tuple([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10011111110(self):
      self.assertEqual(C_RHash(52, 11, 8), tuple([1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01011111110(self):
      self.assertEqual(C_RHash(16, 11, 8), tuple([0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_00111111110(self):
      self.assertEqual(C_RHash(8, 11, 8), tuple([0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11111110001(self):
      self.assertEqual(C_RHash(161, 11, 8), tuple([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1]))

  def test_C_RHash_soundness_11111101001(self):
      self.assertEqual(C_RHash(158, 11, 8), tuple([1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11111011001(self):
      self.assertEqual(C_RHash(152, 11, 8), tuple([1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11110111001(self):
      self.assertEqual(C_RHash(142, 11, 8), tuple([1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11101111001(self):
      self.assertEqual(C_RHash(127, 11, 8), tuple([1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11011111001(self):
      self.assertEqual(C_RHash(106, 11, 8), tuple([1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_10111111001(self):
      self.assertEqual(C_RHash(78, 11, 8), tuple([1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_01111111001(self):
      self.assertEqual(C_RHash(42, 11, 8), tuple([0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11111100101(self):
      self.assertEqual(C_RHash(156, 11, 8), tuple([1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11111010101(self):
      self.assertEqual(C_RHash(150, 11, 8), tuple([1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11110110101(self):
      self.assertEqual(C_RHash(140, 11, 8), tuple([1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11101110101(self):
      self.assertEqual(C_RHash(125, 11, 8), tuple([1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11011110101(self):
      self.assertEqual(C_RHash(104, 11, 8), tuple([1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_10111110101(self):
      self.assertEqual(C_RHash(76, 11, 8), tuple([1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_01111110101(self):
      self.assertEqual(C_RHash(40, 11, 8), tuple([0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11111001101(self):
      self.assertEqual(C_RHash(147, 11, 8), tuple([1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11110101101(self):
      self.assertEqual(C_RHash(137, 11, 8), tuple([1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11101101101(self):
      self.assertEqual(C_RHash(122, 11, 8), tuple([1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11011101101(self):
      self.assertEqual(C_RHash(101, 11, 8), tuple([1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10111101101(self):
      self.assertEqual(C_RHash(73, 11, 8), tuple([1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01111101101(self):
      self.assertEqual(C_RHash(37, 11, 8), tuple([0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11110011101(self):
      self.assertEqual(C_RHash(133, 11, 8), tuple([1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11101011101(self):
      self.assertEqual(C_RHash(118, 11, 8), tuple([1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11011011101(self):
      self.assertEqual(C_RHash(97, 11, 8), tuple([1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10111011101(self):
      self.assertEqual(C_RHash(69, 11, 8), tuple([1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01111011101(self):
      self.assertEqual(C_RHash(33, 11, 8), tuple([0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11100111101(self):
      self.assertEqual(C_RHash(113, 11, 8), tuple([1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11010111101(self):
      self.assertEqual(C_RHash(92, 11, 8), tuple([1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10110111101(self):
      self.assertEqual(C_RHash(64, 11, 8), tuple([1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01110111101(self):
      self.assertEqual(C_RHash(28, 11, 8), tuple([0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11001111101(self):
      self.assertEqual(C_RHash(86, 11, 8), tuple([1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10101111101(self):
      self.assertEqual(C_RHash(58, 11, 8), tuple([1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01101111101(self):
      self.assertEqual(C_RHash(22, 11, 8), tuple([0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10011111101(self):
      self.assertEqual(C_RHash(51, 11, 8), tuple([1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01011111101(self):
      self.assertEqual(C_RHash(15, 11, 8), tuple([0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_00111111101(self):
      self.assertEqual(C_RHash(7, 11, 8), tuple([0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11111100011(self):
      self.assertEqual(C_RHash(155, 11, 8), tuple([1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11111010011(self):
      self.assertEqual(C_RHash(149, 11, 8), tuple([1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11110110011(self):
      self.assertEqual(C_RHash(139, 11, 8), tuple([1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11101110011(self):
      self.assertEqual(C_RHash(124, 11, 8), tuple([1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11011110011(self):
      self.assertEqual(C_RHash(103, 11, 8), tuple([1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_10111110011(self):
      self.assertEqual(C_RHash(75, 11, 8), tuple([1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_01111110011(self):
      self.assertEqual(C_RHash(39, 11, 8), tuple([0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11111001011(self):
      self.assertEqual(C_RHash(146, 11, 8), tuple([1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11110101011(self):
      self.assertEqual(C_RHash(136, 11, 8), tuple([1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11101101011(self):
      self.assertEqual(C_RHash(121, 11, 8), tuple([1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11011101011(self):
      self.assertEqual(C_RHash(100, 11, 8), tuple([1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10111101011(self):
      self.assertEqual(C_RHash(72, 11, 8), tuple([1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01111101011(self):
      self.assertEqual(C_RHash(36, 11, 8), tuple([0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11110011011(self):
      self.assertEqual(C_RHash(132, 11, 8), tuple([1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11101011011(self):
      self.assertEqual(C_RHash(117, 11, 8), tuple([1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11011011011(self):
      self.assertEqual(C_RHash(96, 11, 8), tuple([1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10111011011(self):
      self.assertEqual(C_RHash(68, 11, 8), tuple([1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01111011011(self):
      self.assertEqual(C_RHash(32, 11, 8), tuple([0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11100111011(self):
      self.assertEqual(C_RHash(112, 11, 8), tuple([1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11010111011(self):
      self.assertEqual(C_RHash(91, 11, 8), tuple([1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10110111011(self):
      self.assertEqual(C_RHash(63, 11, 8), tuple([1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01110111011(self):
      self.assertEqual(C_RHash(27, 11, 8), tuple([0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11001111011(self):
      self.assertEqual(C_RHash(85, 11, 8), tuple([1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10101111011(self):
      self.assertEqual(C_RHash(57, 11, 8), tuple([1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01101111011(self):
      self.assertEqual(C_RHash(21, 11, 8), tuple([0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10011111011(self):
      self.assertEqual(C_RHash(50, 11, 8), tuple([1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01011111011(self):
      self.assertEqual(C_RHash(14, 11, 8), tuple([0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_00111111011(self):
      self.assertEqual(C_RHash(6, 11, 8), tuple([0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11111000111(self):
      self.assertEqual(C_RHash(145, 11, 8), tuple([1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11110100111(self):
      self.assertEqual(C_RHash(135, 11, 8), tuple([1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11101100111(self):
      self.assertEqual(C_RHash(120, 11, 8), tuple([1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11011100111(self):
      self.assertEqual(C_RHash(99, 11, 8), tuple([1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10111100111(self):
      self.assertEqual(C_RHash(71, 11, 8), tuple([1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01111100111(self):
      self.assertEqual(C_RHash(35, 11, 8), tuple([0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11110010111(self):
      self.assertEqual(C_RHash(131, 11, 8), tuple([1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11101010111(self):
      self.assertEqual(C_RHash(116, 11, 8), tuple([1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11011010111(self):
      self.assertEqual(C_RHash(95, 11, 8), tuple([1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10111010111(self):
      self.assertEqual(C_RHash(67, 11, 8), tuple([1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01111010111(self):
      self.assertEqual(C_RHash(31, 11, 8), tuple([0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11100110111(self):
      self.assertEqual(C_RHash(111, 11, 8), tuple([1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11010110111(self):
      self.assertEqual(C_RHash(90, 11, 8), tuple([1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10110110111(self):
      self.assertEqual(C_RHash(62, 11, 8), tuple([1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01110110111(self):
      self.assertEqual(C_RHash(26, 11, 8), tuple([0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11001110111(self):
      self.assertEqual(C_RHash(84, 11, 8), tuple([1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10101110111(self):
      self.assertEqual(C_RHash(56, 11, 8), tuple([1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01101110111(self):
      self.assertEqual(C_RHash(20, 11, 8), tuple([0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10011110111(self):
      self.assertEqual(C_RHash(49, 11, 8), tuple([1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01011110111(self):
      self.assertEqual(C_RHash(13, 11, 8), tuple([0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_00111110111(self):
      self.assertEqual(C_RHash(5, 11, 8), tuple([0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11110001111(self):
      self.assertEqual(C_RHash(130, 11, 8), tuple([1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11101001111(self):
      self.assertEqual(C_RHash(115, 11, 8), tuple([1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11011001111(self):
      self.assertEqual(C_RHash(94, 11, 8), tuple([1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10111001111(self):
      self.assertEqual(C_RHash(66, 11, 8), tuple([1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01111001111(self):
      self.assertEqual(C_RHash(30, 11, 8), tuple([0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11100101111(self):
      self.assertEqual(C_RHash(110, 11, 8), tuple([1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11010101111(self):
      self.assertEqual(C_RHash(89, 11, 8), tuple([1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10110101111(self):
      self.assertEqual(C_RHash(61, 11, 8), tuple([1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01110101111(self):
      self.assertEqual(C_RHash(25, 11, 8), tuple([0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11001101111(self):
      self.assertEqual(C_RHash(83, 11, 8), tuple([1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10101101111(self):
      self.assertEqual(C_RHash(55, 11, 8), tuple([1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01101101111(self):
      self.assertEqual(C_RHash(19, 11, 8), tuple([0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10011101111(self):
      self.assertEqual(C_RHash(48, 11, 8), tuple([1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01011101111(self):
      self.assertEqual(C_RHash(12, 11, 8), tuple([0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00111101111(self):
      self.assertEqual(C_RHash(4, 11, 8), tuple([0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11100011111(self):
      self.assertEqual(C_RHash(109, 11, 8), tuple([1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11010011111(self):
      self.assertEqual(C_RHash(88, 11, 8), tuple([1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10110011111(self):
      self.assertEqual(C_RHash(60, 11, 8), tuple([1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01110011111(self):
      self.assertEqual(C_RHash(24, 11, 8), tuple([0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11001011111(self):
      self.assertEqual(C_RHash(82, 11, 8), tuple([1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10101011111(self):
      self.assertEqual(C_RHash(54, 11, 8), tuple([1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01101011111(self):
      self.assertEqual(C_RHash(18, 11, 8), tuple([0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10011011111(self):
      self.assertEqual(C_RHash(47, 11, 8), tuple([1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01011011111(self):
      self.assertEqual(C_RHash(11, 11, 8), tuple([0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00111011111(self):
      self.assertEqual(C_RHash(3, 11, 8), tuple([0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11000111111(self):
      self.assertEqual(C_RHash(81, 11, 8), tuple([1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10100111111(self):
      self.assertEqual(C_RHash(53, 11, 8), tuple([1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01100111111(self):
      self.assertEqual(C_RHash(17, 11, 8), tuple([0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10010111111(self):
      self.assertEqual(C_RHash(46, 11, 8), tuple([1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01010111111(self):
      self.assertEqual(C_RHash(10, 11, 8), tuple([0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00110111111(self):
      self.assertEqual(C_RHash(2, 11, 8), tuple([0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10001111111(self):
      self.assertEqual(C_RHash(45, 11, 8), tuple([1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01001111111(self):
      self.assertEqual(C_RHash(9, 11, 8), tuple([0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00101111111(self):
      self.assertEqual(C_RHash(1, 11, 8), tuple([0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00011111111(self):
      self.assertEqual(C_RHash(0, 11, 8), tuple([0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1]))

class HashTest_n11_r9(unittest.TestCase):
  def test_C_Hash_range_11111111100(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111111010(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111110110(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111101110(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111011110(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110111110(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101111110(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011111110(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111111110(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111111110(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111111001(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111110101(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111101101(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111011101(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110111101(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101111101(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011111101(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111111101(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111111101(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111110011(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111101011(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111011011(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110111011(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101111011(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011111011(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111111011(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111111011(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111100111(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111010111(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110110111(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101110111(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011110111(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111110111(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111110111(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111001111(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110101111(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101101111(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011101111(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111101111(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111101111(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110011111(self):
      h = C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101011111(self):
      h = C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011011111(self):
      h = C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111011111(self):
      h = C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111011111(self):
      h = C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11100111111(self):
      h = C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11010111111(self):
      h = C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10110111111(self):
      h = C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01110111111(self):
      h = C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11001111111(self):
      h = C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10101111111(self):
      h = C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01101111111(self):
      h = C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10011111111(self):
      h = C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01011111111(self):
      h = C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_00111111111(self):
      h = C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], 9)
      self.assert_(C(11, 9)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], 9)] = [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], 9)] = [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0], 9)] = [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], 9)] = [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0], 9)] = [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], 9)] = [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0], 9), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0], 9)] = [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], 9), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], 9)] = [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0], 9), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0], 9)] = [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], 9), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], 9)] = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1], 9)] = [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1], 9)] = [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], 9)] = [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], 9)] = [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], 9)] = [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1], 9)] = [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], 9), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], 9)] = [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], 9), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], 9)] = [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], 9), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], 9)] = [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], 9)] = [1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], 9)] = [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], 9)] = [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], 9)] = [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], 9)] = [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], 9)] = [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], 9), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], 9)] = [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], 9), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], 9)] = [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], 9)] = [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], 9)] = [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], 9)] = [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], 9)] = [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], 9)] = [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], 9)] = [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], 9), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], 9)] = [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], 9)] = [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], 9)] = [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], 9)] = [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], 9)] = [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], 9)] = [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], 9)] = [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], 9)] = [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], 9)] = [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], 9)] = [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], 9)] = [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], 9)] = [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], 9)] = [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], 9)] = [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], 9)] = [1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], 9)] = [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], 9)] = [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], 9)] = [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], 9)] = [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], 9)] = [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], 9)] = [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], 9), None) is None)
    d[C_Hash([0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], 9)] = [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 55)

  def test_C_RHash_soundness_11111111100(self):
      self.assertEqual(C_RHash(54, 11, 9), tuple([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]))

  def test_C_RHash_soundness_11111111010(self):
      self.assertEqual(C_RHash(53, 11, 9), tuple([1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0]))

  def test_C_RHash_soundness_11111110110(self):
      self.assertEqual(C_RHash(51, 11, 9), tuple([1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0]))

  def test_C_RHash_soundness_11111101110(self):
      self.assertEqual(C_RHash(48, 11, 9), tuple([1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11111011110(self):
      self.assertEqual(C_RHash(44, 11, 9), tuple([1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11110111110(self):
      self.assertEqual(C_RHash(39, 11, 9), tuple([1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11101111110(self):
      self.assertEqual(C_RHash(33, 11, 9), tuple([1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11011111110(self):
      self.assertEqual(C_RHash(26, 11, 9), tuple([1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_10111111110(self):
      self.assertEqual(C_RHash(18, 11, 9), tuple([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_01111111110(self):
      self.assertEqual(C_RHash(9, 11, 9), tuple([0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11111111001(self):
      self.assertEqual(C_RHash(52, 11, 9), tuple([1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1]))

  def test_C_RHash_soundness_11111110101(self):
      self.assertEqual(C_RHash(50, 11, 9), tuple([1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1]))

  def test_C_RHash_soundness_11111101101(self):
      self.assertEqual(C_RHash(47, 11, 9), tuple([1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11111011101(self):
      self.assertEqual(C_RHash(43, 11, 9), tuple([1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11110111101(self):
      self.assertEqual(C_RHash(38, 11, 9), tuple([1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11101111101(self):
      self.assertEqual(C_RHash(32, 11, 9), tuple([1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11011111101(self):
      self.assertEqual(C_RHash(25, 11, 9), tuple([1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_10111111101(self):
      self.assertEqual(C_RHash(17, 11, 9), tuple([1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_01111111101(self):
      self.assertEqual(C_RHash(8, 11, 9), tuple([0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11111110011(self):
      self.assertEqual(C_RHash(49, 11, 9), tuple([1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1]))

  def test_C_RHash_soundness_11111101011(self):
      self.assertEqual(C_RHash(46, 11, 9), tuple([1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11111011011(self):
      self.assertEqual(C_RHash(42, 11, 9), tuple([1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11110111011(self):
      self.assertEqual(C_RHash(37, 11, 9), tuple([1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11101111011(self):
      self.assertEqual(C_RHash(31, 11, 9), tuple([1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11011111011(self):
      self.assertEqual(C_RHash(24, 11, 9), tuple([1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_10111111011(self):
      self.assertEqual(C_RHash(16, 11, 9), tuple([1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_01111111011(self):
      self.assertEqual(C_RHash(7, 11, 9), tuple([0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11111100111(self):
      self.assertEqual(C_RHash(45, 11, 9), tuple([1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11111010111(self):
      self.assertEqual(C_RHash(41, 11, 9), tuple([1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11110110111(self):
      self.assertEqual(C_RHash(36, 11, 9), tuple([1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11101110111(self):
      self.assertEqual(C_RHash(30, 11, 9), tuple([1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11011110111(self):
      self.assertEqual(C_RHash(23, 11, 9), tuple([1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_10111110111(self):
      self.assertEqual(C_RHash(15, 11, 9), tuple([1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_01111110111(self):
      self.assertEqual(C_RHash(6, 11, 9), tuple([0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11111001111(self):
      self.assertEqual(C_RHash(40, 11, 9), tuple([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11110101111(self):
      self.assertEqual(C_RHash(35, 11, 9), tuple([1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11101101111(self):
      self.assertEqual(C_RHash(29, 11, 9), tuple([1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11011101111(self):
      self.assertEqual(C_RHash(22, 11, 9), tuple([1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10111101111(self):
      self.assertEqual(C_RHash(14, 11, 9), tuple([1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01111101111(self):
      self.assertEqual(C_RHash(5, 11, 9), tuple([0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11110011111(self):
      self.assertEqual(C_RHash(34, 11, 9), tuple([1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11101011111(self):
      self.assertEqual(C_RHash(28, 11, 9), tuple([1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11011011111(self):
      self.assertEqual(C_RHash(21, 11, 9), tuple([1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10111011111(self):
      self.assertEqual(C_RHash(13, 11, 9), tuple([1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01111011111(self):
      self.assertEqual(C_RHash(4, 11, 9), tuple([0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11100111111(self):
      self.assertEqual(C_RHash(27, 11, 9), tuple([1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11010111111(self):
      self.assertEqual(C_RHash(20, 11, 9), tuple([1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10110111111(self):
      self.assertEqual(C_RHash(12, 11, 9), tuple([1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01110111111(self):
      self.assertEqual(C_RHash(3, 11, 9), tuple([0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11001111111(self):
      self.assertEqual(C_RHash(19, 11, 9), tuple([1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10101111111(self):
      self.assertEqual(C_RHash(11, 11, 9), tuple([1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01101111111(self):
      self.assertEqual(C_RHash(2, 11, 9), tuple([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10011111111(self):
      self.assertEqual(C_RHash(10, 11, 9), tuple([1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01011111111(self):
      self.assertEqual(C_RHash(1, 11, 9), tuple([0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_00111111111(self):
      self.assertEqual(C_RHash(0, 11, 9), tuple([0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1]))

class HashTest_n11_r10(unittest.TestCase):
  def test_C_Hash_range_11111111110(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], 10)
      self.assert_(C(11, 10)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111111101(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], 10)
      self.assert_(C(11, 10)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111111011(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], 10)
      self.assert_(C(11, 10)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111110111(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], 10)
      self.assert_(C(11, 10)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111101111(self):
      h = C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], 10)
      self.assert_(C(11, 10)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11111011111(self):
      h = C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], 10)
      self.assert_(C(11, 10)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11110111111(self):
      h = C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], 10)
      self.assert_(C(11, 10)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11101111111(self):
      h = C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], 10)
      self.assert_(C(11, 10)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_11011111111(self):
      h = C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], 10)
      self.assert_(C(11, 10)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_10111111111(self):
      h = C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], 10)
      self.assert_(C(11, 10)> h)
      self.assert_(h>=0)

  def test_C_Hash_range_01111111111(self):
      h = C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 10)
      self.assert_(C(11, 10)> h)
      self.assert_(h>=0)

  def test_C_Hash_id(self):
    d = dict()
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], 10), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], 10)] = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], 10), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], 10)] = [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], 10), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], 10)] = [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], 10), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], 10)] = [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], 10), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], 10)] = [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], 10), None) is None)
    d[C_Hash([1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], 10)] = [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], 10), None) is None)
    d[C_Hash([1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], 10)] = [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], 10), None) is None)
    d[C_Hash([1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], 10)] = [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], 10), None) is None)
    d[C_Hash([1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], 10)] = [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], 10), None) is None)
    d[C_Hash([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], 10)] = [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    self.assert_(d.get(C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 10), None) is None)
    d[C_Hash([0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 10)] = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    self.assertEqual(len(d), 11)

  def test_C_RHash_soundness_11111111110(self):
      self.assertEqual(C_RHash(10, 11, 10), tuple([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]))

  def test_C_RHash_soundness_11111111101(self):
      self.assertEqual(C_RHash(9, 11, 10), tuple([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1]))

  def test_C_RHash_soundness_11111111011(self):
      self.assertEqual(C_RHash(8, 11, 10), tuple([1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1]))

  def test_C_RHash_soundness_11111110111(self):
      self.assertEqual(C_RHash(7, 11, 10), tuple([1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]))

  def test_C_RHash_soundness_11111101111(self):
      self.assertEqual(C_RHash(6, 11, 10), tuple([1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11111011111(self):
      self.assertEqual(C_RHash(5, 11, 10), tuple([1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11110111111(self):
      self.assertEqual(C_RHash(4, 11, 10), tuple([1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11101111111(self):
      self.assertEqual(C_RHash(3, 11, 10), tuple([1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_11011111111(self):
      self.assertEqual(C_RHash(2, 11, 10), tuple([1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_10111111111(self):
      self.assertEqual(C_RHash(1, 11, 10), tuple([1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1]))

  def test_C_RHash_soundness_01111111111(self):
      self.assertEqual(C_RHash(0, 11, 10), tuple([0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]))

